; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\test_binning_1.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\test_binning_1.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\test_binning_1.crf ..\..\User\chip_ft\test_binning.c]
                          THUMB

                          AREA ||i.binning_send||, CODE, READONLY, ALIGN=2

                  binning_send PROC
;;;66     
;;;67     void binning_send(fsm_rt_t ng)
000000  b570              PUSH     {r4-r6,lr}
;;;68     {
000002  4605              MOV      r5,r0
;;;69         fsm_rt_t* pBinning = ng_bin_get(ng);
000004  4628              MOV      r0,r5
000006  f7fffffe          BL       ng_bin_get
00000a  4604              MOV      r4,r0
;;;70         
;;;71         if(pBinning == bin_ok)
00000c  480f              LDR      r0,|L1.76|
00000e  4284              CMP      r4,r0
000010  d103              BNE      |L1.26|
;;;72         {
;;;73             msg_to_robot(DUT_OK);
000012  2005              MOVS     r0,#5
000014  f7fffffe          BL       msg_to_robot
000018  e017              B        |L1.74|
                  |L1.26|
;;;74         }
;;;75         
;;;76         else if(pBinning == bin_ng2) 
00001a  480d              LDR      r0,|L1.80|
00001c  4284              CMP      r4,r0
00001e  d103              BNE      |L1.40|
;;;77         {
;;;78             msg_to_robot(DUT_NG2);
000020  2006              MOVS     r0,#6
000022  f7fffffe          BL       msg_to_robot
000026  e010              B        |L1.74|
                  |L1.40|
;;;79         }
;;;80         else if(pBinning == bin_ng3) 
000028  480a              LDR      r0,|L1.84|
00002a  4284              CMP      r4,r0
00002c  d103              BNE      |L1.54|
;;;81         {
;;;82             msg_to_robot(DUT_NG3);
00002e  2007              MOVS     r0,#7
000030  f7fffffe          BL       msg_to_robot
000034  e009              B        |L1.74|
                  |L1.54|
;;;83         }
;;;84         else if(pBinning == bin_ng4) 
000036  4808              LDR      r0,|L1.88|
000038  4284              CMP      r4,r0
00003a  d103              BNE      |L1.68|
;;;85         {
;;;86             msg_to_robot(DUT_NG4);
00003c  2008              MOVS     r0,#8
00003e  f7fffffe          BL       msg_to_robot
000042  e002              B        |L1.74|
                  |L1.68|
;;;87         }
;;;88         else  
;;;89         {
;;;90             msg_to_robot(DUT_NG5);
000044  2009              MOVS     r0,#9
000046  f7fffffe          BL       msg_to_robot
                  |L1.74|
;;;91         }
;;;92         
;;;93     //    for(uint8_t i=0; i<ARRY_SIZE(bin_type_box); i++)
;;;94     //    {
;;;95     //        if(pBinning == bin_type_box[i])
;;;96     //        {
;;;97     //            
;;;98     //        }
;;;99     //    }
;;;100    }
00004a  bd70              POP      {r4-r6,pc}
;;;101    
                          ENDP

                  |L1.76|
                          DCD      bin_ok
                  |L1.80|
                          DCD      bin_ng2
                  |L1.84|
                          DCD      bin_ng3
                  |L1.88|
                          DCD      bin_ng4

                          AREA ||i.ng_bin_get||, CODE, READONLY, ALIGN=2

                  ng_bin_get PROC
;;;36     //根据输入的ng类型，输出对应的bin_ng号
;;;37     fsm_rt_t* ng_bin_get(fsm_rt_t state)
000000  4601              MOV      r1,r0
;;;38     {
;;;39         for(uint8_t i=0; i<ARRY_SIZE(bin_ok); i++)
000002  2200              MOVS     r2,#0
000004  e007              B        |L2.22|
                  |L2.6|
;;;40         {
;;;41             if(state == bin_ok[i])  return bin_ok;
000006  4818              LDR      r0,|L2.104|
000008  5680              LDRSB    r0,[r0,r2]
00000a  4288              CMP      r0,r1
00000c  d101              BNE      |L2.18|
00000e  4816              LDR      r0,|L2.104|
                  |L2.16|
;;;42         }
;;;43         
;;;44         for(uint8_t i=0; i<ARRY_SIZE(bin_ng2); i++)
;;;45         {
;;;46             if(state == bin_ng2[i])  return bin_ng2;
;;;47         }
;;;48         
;;;49         for(uint8_t i=0; i<ARRY_SIZE(bin_ng3); i++)
;;;50         {
;;;51             if(state == bin_ng3[i])  return bin_ng3;
;;;52         }
;;;53         
;;;54         for(uint8_t i=0; i<ARRY_SIZE(bin_ng4); i++)
;;;55         {
;;;56             if(state == bin_ng4[i])  return bin_ng4;
;;;57         }
;;;58         
;;;59     //    for(uint8_t i=0; i<ARRY_SIZE(bin_ng5); i++)
;;;60     //    {
;;;61     //        if(state == bin_ng5[i])  return bin_ng5;
;;;62     //    }
;;;63         return NULL;
;;;64     }
000010  4770              BX       lr
                  |L2.18|
000012  1c50              ADDS     r0,r2,#1              ;39
000014  b2c2              UXTB     r2,r0                 ;39
                  |L2.22|
000016  2a00              CMP      r2,#0                 ;39
000018  d0f5              BEQ      |L2.6|
00001a  2200              MOVS     r2,#0                 ;44
00001c  e007              B        |L2.46|
                  |L2.30|
00001e  4813              LDR      r0,|L2.108|
000020  5680              LDRSB    r0,[r0,r2]            ;46
000022  4288              CMP      r0,r1                 ;46
000024  d101              BNE      |L2.42|
000026  4811              LDR      r0,|L2.108|
000028  e7f2              B        |L2.16|
                  |L2.42|
00002a  1c50              ADDS     r0,r2,#1              ;44
00002c  b2c2              UXTB     r2,r0                 ;44
                  |L2.46|
00002e  2a00              CMP      r2,#0                 ;44
000030  d0f5              BEQ      |L2.30|
000032  2200              MOVS     r2,#0                 ;49
000034  e007              B        |L2.70|
                  |L2.54|
000036  480e              LDR      r0,|L2.112|
000038  5680              LDRSB    r0,[r0,r2]            ;51
00003a  4288              CMP      r0,r1                 ;51
00003c  d101              BNE      |L2.66|
00003e  480c              LDR      r0,|L2.112|
000040  e7e6              B        |L2.16|
                  |L2.66|
000042  1c50              ADDS     r0,r2,#1              ;49
000044  b2c2              UXTB     r2,r0                 ;49
                  |L2.70|
000046  2a00              CMP      r2,#0                 ;49
000048  d0f5              BEQ      |L2.54|
00004a  2200              MOVS     r2,#0                 ;54
00004c  e007              B        |L2.94|
                  |L2.78|
00004e  4809              LDR      r0,|L2.116|
000050  5680              LDRSB    r0,[r0,r2]            ;56
000052  4288              CMP      r0,r1                 ;56
000054  d101              BNE      |L2.90|
000056  4807              LDR      r0,|L2.116|
000058  e7da              B        |L2.16|
                  |L2.90|
00005a  1c50              ADDS     r0,r2,#1              ;54
00005c  b2c2              UXTB     r2,r0                 ;54
                  |L2.94|
00005e  2a00              CMP      r2,#0                 ;54
000060  d0f5              BEQ      |L2.78|
000062  2000              MOVS     r0,#0                 ;63
000064  e7d4              B        |L2.16|
;;;65     
                          ENDP

000066  0000              DCW      0x0000
                  |L2.104|
                          DCD      bin_ok
                  |L2.108|
                          DCD      bin_ng2
                  |L2.112|
                          DCD      bin_ng3
                  |L2.116|
                          DCD      bin_ng4

                          AREA ||.data||, DATA, ALIGN=0

                  bin_ok
000000  00                DCB      0x00
                  bin_ng2
000001  c5                DCB      0xc5
                  bin_ng3
000002  b4                DCB      0xb4
                  bin_ng4
000003  b1                DCB      0xb1

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\chip_ft\\test_binning.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_test_binning_c_1c647356____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_test_binning_c_1c647356____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_test_binning_c_1c647356____REVSH|
#line 144
|__asm___14_test_binning_c_1c647356____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
