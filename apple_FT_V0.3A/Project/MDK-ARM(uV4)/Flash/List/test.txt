; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\test.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\test.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\test.crf ..\..\User\chip_ft\test.c]
                          THUMB

                          AREA ||i.is_com_get_ft_cmd||, CODE, READONLY, ALIGN=2

                  is_com_get_ft_cmd PROC
;;;211    }
;;;212    static uint8_t  is_com_get_ft_cmd(void)
000000  b508              PUSH     {r3,lr}
;;;213    {
;;;214        #define enter  13 //enter键
;;;215        uint8_t cmd;
;;;216        
;;;217        if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
000002  4669              MOV      r1,sp
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       comGetChar
00000a  b140              CBZ      r0,|L1.30|
;;;218        {
;;;219            switch (cmd)
00000c  f89d0000          LDRB     r0,[sp,#0]
000010  280d              CMP      r0,#0xd
000012  d104              BNE      |L1.30|
;;;220            {
;;;221            case enter:
;;;222                printf("\r\n[FT 测试]\r\n");
000014  a003              ADR      r0,|L1.36|
000016  f7fffffe          BL       __2printf
;;;223                return 1;
00001a  2001              MOVS     r0,#1
                  |L1.28|
;;;224                //break;
;;;225            }
;;;226        }
;;;227        
;;;228        return 0;
;;;229    }
00001c  bd08              POP      {r3,pc}
                  |L1.30|
00001e  2000              MOVS     r0,#0                 ;228
000020  e7fc              B        |L1.28|
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
000024  0d0a5b46          DCB      "\r\n[FT ",230,181,139,232,175,149,"]\r\n",0
000028  5420e6b5
00002c  8be8af95
000030  5d0d0a00

                          AREA ||i.test_init||, CODE, READONLY, ALIGN=2

                  test_init PROC
;;;43     
;;;44     void test_init(void)
000000  b510              PUSH     {r4,lr}
;;;45     {
;;;46         bsp_InitASU();
000002  f7fffffe          BL       bsp_InitASU
;;;47         if(ee_data_init())  //获取eeprom数据:保存电流校准值，日志文本序列
000006  f7fffffe          BL       ee_data_init
00000a  b118              CBZ      r0,|L2.20|
;;;48         {
;;;49             LCD_SHOW_WARN("ee data init!\r"); //eeprom数据不对，被初始化的提示
00000c  a13f              ADR      r1,|L2.268|
00000e  2003              MOVS     r0,#3
000010  f7fffffe          BL       display_show_log
                  |L2.20|
;;;50         }
;;;51         if( dut_param_init() ) 
000014  f7fffffe          BL       dut_param_init
000018  b130              CBZ      r0,|L2.40|
;;;52         {
;;;53             LCD_SHOW_NG("DUT Init Fail!\r");
00001a  a140              ADR      r1,|L2.284|
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       display_show_log
;;;54             file_env_err_flg = 1;
000022  2001              MOVS     r0,#1
000024  4941              LDR      r1,|L2.300|
000026  7008              STRB     r0,[r1,#0]
                  |L2.40|
;;;55         }
;;;56         
;;;57      
;;;58         LCD_SHOW_WARN("%s\r",CHIP_NAME );
000028  4841              LDR      r0,|L2.304|
00002a  a142              ADR      r1,|L2.308|
00002c  6802              LDR      r2,[r0,#0]  ; dut
00002e  2003              MOVS     r0,#3
000030  f7fffffe          BL       display_show_log
;;;59         LCD_SHOW_LOG("%s:%s\r",run_mode_handle->name,TEST_FIRMWARE_VERSION);//
000034  a340              ADR      r3,|L2.312|
000036  4842              LDR      r0,|L2.320|
000038  a142              ADR      r1,|L2.324|
00003a  6802              LDR      r2,[r0,#0]  ; run_mode_handle
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       display_show_log
;;;60         LCD_SHOW_LOG("Boot:%s    cur_cali:%d\r", p_boot_ver,ee_data.current_offset);
000042  4842              LDR      r0,|L2.332|
000044  6883              LDR      r3,[r0,#8]  ; ee_data
000046  4842              LDR      r0,|L2.336|
000048  a142              ADR      r1,|L2.340|
00004a  6802              LDR      r2,[r0,#0]  ; p_boot_ver
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       display_show_log
;;;61         
;;;62      
;;;63         tick_init();
000052  f7fffffe          BL       tick_init
;;;64         bsp_socket_init();
000056  f7fffffe          BL       bsp_socket_init
;;;65         bsp_socket_ldo3v3_init();
00005a  f7fffffe          BL       bsp_socket_ldo3v3_init
;;;66         test_power.init();
00005e  4943              LDR      r1,|L2.364|
000060  6808              LDR      r0,[r1,#0]  ; test_power
000062  4780              BLX      r0
;;;67         test_power.off();
000064  4941              LDR      r1,|L2.364|
000066  6888              LDR      r0,[r1,#8]  ; test_power
000068  4780              BLX      r0
;;;68     
;;;69         memset(&trim_result, 0 , sizeof(trim_result_t));
00006a  2168              MOVS     r1,#0x68
00006c  4840              LDR      r0,|L2.368|
00006e  f7fffffe          BL       __aeabi_memclr4
;;;70         memset(&trim_reg_data, 0 , sizeof(otp_t));
000072  4840              LDR      r0,|L2.372|
000074  2100              MOVS     r1,#0
000076  6001              STR      r1,[r0,#0]  ; trim_reg_data
;;;71         
;;;72         //挂载sd卡，并打开 ram pattern文件，打开日志文件 在新建新的日志文件之前 关闭旧的日志文件
;;;73         
;;;74         if(spi_flash_file_sys_mount()) while(1);//挂载spi flash文件系统
000078  f7fffffe          BL       spi_flash_file_sys_mount
00007c  b108              CBZ      r0,|L2.130|
00007e  bf00              NOP      
                  |L2.128|
000080  e7fe              B        |L2.128|
                  |L2.130|
;;;75         user_config = config_code_get();
000082  f7fffffe          BL       config_code_get
000086  493c              LDR      r1,|L2.376|
000088  6008              STR      r0,[r1,#0]  ; user_config
;;;76         if(custommer_trim_msk.all & user_config) //用户配置数据不能涉及到trim区，否则报错
00008a  483c              LDR      r0,|L2.380|
00008c  6800              LDR      r0,[r0,#0]  ; custommer_trim_msk
00008e  6809              LDR      r1,[r1,#0]  ; user_config
000090  4008              ANDS     r0,r0,r1
000092  b168              CBZ      r0,|L2.176|
;;;77         {
;;;78             file_env_err_flg = 1;
000094  2001              MOVS     r0,#1
000096  4925              LDR      r1,|L2.300|
000098  7008              STRB     r0,[r1,#0]
;;;79             LCD_SHOW_NG("Config.txt Error:%X\r",custommer_trim_msk.all & user_config);
00009a  4838              LDR      r0,|L2.380|
00009c  6800              LDR      r0,[r0,#0]  ; custommer_trim_msk
00009e  4936              LDR      r1,|L2.376|
0000a0  6809              LDR      r1,[r1,#0]  ; user_config
0000a2  ea000201          AND      r2,r0,r1
0000a6  a136              ADR      r1,|L2.384|
0000a8  2001              MOVS     r0,#1
0000aa  f7fffffe          BL       display_show_log
0000ae  e003              B        |L2.184|
                  |L2.176|
;;;80         }
;;;81         else
;;;82         {
;;;83             custommer_data.all = user_config ;
0000b0  4831              LDR      r0,|L2.376|
0000b2  6800              LDR      r0,[r0,#0]  ; user_config
0000b4  4938              LDR      r1,|L2.408|
0000b6  6008              STR      r0,[r1,#0]  ; custommer_data
                  |L2.184|
;;;84         }
;;;85         board_id_file_open(board_id_name); //获取板子名称，日志时候显示
0000b8  4838              LDR      r0,|L2.412|
0000ba  f7fffffe          BL       board_id_file_open
;;;86         LCD_SHOW_WARN("%s\r",board_id_name);
0000be  4a37              LDR      r2,|L2.412|
0000c0  a11c              ADR      r1,|L2.308|
0000c2  2003              MOVS     r0,#3
0000c4  f7fffffe          BL       display_show_log
;;;87         
;;;88      
;;;89         if(customer_file_open())    file_env_err_flg = 1;//{BEEP_Start(10, 20, 0);}//while(1); //打开客户烧录（FLASH）文件
0000c8  f7fffffe          BL       customer_file_open
0000cc  b110              CBZ      r0,|L2.212|
0000ce  2001              MOVS     r0,#1
0000d0  4916              LDR      r1,|L2.300|
0000d2  7008              STRB     r0,[r1,#0]
                  |L2.212|
;;;90         //debug("title:%s\r\n",board_id_name);
;;;91         
;;;92         LCD_SHOW_LOG("APP:%08X\r",manufacture_bin_crc);
0000d4  4832              LDR      r0,|L2.416|
0000d6  a133              ADR      r1,|L2.420|
0000d8  6802              LDR      r2,[r0,#0]  ; manufacture_bin_crc
0000da  2000              MOVS     r0,#0
0000dc  f7fffffe          BL       display_show_log
;;;93         LCD_SHOW_LOG("PTN1:%08X   PTN2:%08X\r", trim_pattern_crc, perf_pattern_crc);
0000e0  4833              LDR      r0,|L2.432|
0000e2  6803              LDR      r3,[r0,#0]  ; perf_pattern_crc
0000e4  4833              LDR      r0,|L2.436|
0000e6  a134              ADR      r1,|L2.440|
0000e8  6802              LDR      r2,[r0,#0]  ; trim_pattern_crc
0000ea  2000              MOVS     r0,#0
0000ec  f7fffffe          BL       display_show_log
;;;94     
;;;95         sd_file_sys_mount();   //挂载文件系统
0000f0  f7fffffe          BL       sd_file_sys_mount
;;;96         logger_txt_creat();    //生成 日志.TXT文件
0000f4  f7fffffe          BL       logger_txt_creat
;;;97         
;;;98         if( file_env_err_flg ) 
0000f8  480c              LDR      r0,|L2.300|
0000fa  7800              LDRB     r0,[r0,#0]  ; file_env_err_flg
0000fc  b120              CBZ      r0,|L2.264|
;;;99         {
;;;100            BEEP_FAIL();
0000fe  2203              MOVS     r2,#3
000100  210a              MOVS     r1,#0xa
000102  2005              MOVS     r0,#5
000104  f7fffffe          BL       BEEP_Start
                  |L2.264|
;;;101        }
;;;102    }
000108  bd10              POP      {r4,pc}
;;;103     
                          ENDP

00010a  0000              DCW      0x0000
                  |L2.268|
00010c  65652064          DCB      "ee data init!\r",0
000110  61746120
000114  696e6974
000118  210d00  
00011b  00                DCB      0
                  |L2.284|
00011c  44555420          DCB      "DUT Init Fail!\r",0
000120  496e6974
000124  20466169
000128  6c210d00
                  |L2.300|
                          DCD      file_env_err_flg
                  |L2.304|
                          DCD      ||dut||
                  |L2.308|
000134  25730d00          DCB      "%s\r",0
                  |L2.312|
000138  56302e33          DCB      "V0.3A",0
00013c  4100    
00013e  00                DCB      0
00013f  00                DCB      0
                  |L2.320|
                          DCD      run_mode_handle
                  |L2.324|
000144  25733a25          DCB      "%s:%s\r",0
000148  730d00  
00014b  00                DCB      0
                  |L2.332|
                          DCD      ee_data
                  |L2.336|
                          DCD      p_boot_ver
                  |L2.340|
000154  426f6f74          DCB      "Boot:%s    cur_cali:%d\r",0
000158  3a257320
00015c  20202063
000160  75725f63
000164  616c693a
000168  25640d00
                  |L2.364|
                          DCD      test_power
                  |L2.368|
                          DCD      trim_result
                  |L2.372|
                          DCD      trim_reg_data
                  |L2.376|
                          DCD      user_config
                  |L2.380|
                          DCD      custommer_trim_msk
                  |L2.384|
000180  436f6e66          DCB      "Config.txt Error:%X\r",0
000184  69672e74
000188  78742045
00018c  72726f72
000190  3a25580d
000194  00      
000195  00                DCB      0
000196  00                DCB      0
000197  00                DCB      0
                  |L2.408|
                          DCD      custommer_data
                  |L2.412|
                          DCD      board_id_name
                  |L2.416|
                          DCD      manufacture_bin_crc
                  |L2.420|
0001a4  4150503a          DCB      "APP:%08X\r",0
0001a8  25303858
0001ac  0d00    
0001ae  00                DCB      0
0001af  00                DCB      0
                  |L2.432|
                          DCD      perf_pattern_crc
                  |L2.436|
                          DCD      trim_pattern_crc
                  |L2.440|
0001b8  50544e31          DCB      "PTN1:%08X   PTN2:%08X\r",0
0001bc  3a253038
0001c0  58202020
0001c4  50544e32
0001c8  3a253038
0001cc  580d00  
0001cf  00                DCB      0

                          AREA ||i.test_start||, CODE, READONLY, ALIGN=2

                  test_start PROC
;;;182    
;;;183    static void test_start(void)
000000  b508              PUSH     {r3,lr}
;;;184    {
;;;185        led_fail(OFF);
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       led_fail
;;;186        led_pass(OFF);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       led_pass
;;;187        msg_to_robot(PG_BUSY);
00000e  2001              MOVS     r0,#1
000010  f7fffffe          BL       msg_to_robot
;;;188        memset(&trim_result, 0 , sizeof(trim_result_t));
000014  2168              MOVS     r1,#0x68
000016  4811              LDR      r0,|L3.92|
000018  f7fffffe          BL       __aeabi_memclr4
;;;189        trim_var_zero_init();
00001c  f7fffffe          BL       trim_var_zero_init
;;;190        trim_reg_data.all = 0;
000020  2000              MOVS     r0,#0
000022  490f              LDR      r1,|L3.96|
000024  6008              STR      r0,[r1,#0]  ; trim_reg_data
;;;191        socket_prst_ctl(prst_state_hi);
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       socket_prst_ctl
;;;192        socket_touch_off(); 
00002c  f7fffffe          BL       socket_touch_off
;;;193        test_power.consumption_off();  //电流取样电阻去除
000030  490c              LDR      r1,|L3.100|
000032  6908              LDR      r0,[r1,#0x10]  ; test_power
000034  4780              BLX      r0
;;;194        test_power.on();
000036  490b              LDR      r1,|L3.100|
000038  6848              LDR      r0,[r1,#4]  ; test_power
00003a  4780              BLX      r0
;;;195        socket_i_chip();
00003c  f7fffffe          BL       socket_i_chip
;;;196        socket_asu_pu_on();
000040  f7fffffe          BL       socket_asu_pu_on
;;;197        test_start_info_show();
000044  f7fffffe          BL       test_start_info_show
;;;198        //delay_ms(20);
;;;199        display_fill(0, 0, BSP_LCD_WIDTH, BSP_LCD_HEIGHT, BLACK); //相当于delay 450ms，执行时间450ms
000048  2000              MOVS     r0,#0
00004a  f44f73a0          MOV      r3,#0x140
00004e  22f0              MOVS     r2,#0xf0
000050  4601              MOV      r1,r0
000052  9000              STR      r0,[sp,#0]
000054  f7fffffe          BL       display_fill
;;;200        //delay_ms(50);
;;;201    }
000058  bd08              POP      {r3,pc}
;;;202    
                          ENDP

00005a  0000              DCW      0x0000
                  |L3.92|
                          DCD      trim_result
                  |L3.96|
                          DCD      trim_reg_data
                  |L3.100|
                          DCD      test_power

                          AREA ||i.test_start_en||, CODE, READONLY, ALIGN=2

                  test_start_en PROC
;;;206    //其他模块通过调用此函数启动测试，如：key.c
;;;207    void test_start_en(void)
000000  b510              PUSH     {r4,lr}
;;;208    {
;;;209        test_start_flg = 1;
000002  2001              MOVS     r0,#1
000004  4902              LDR      r1,|L4.16|
000006  7008              STRB     r0,[r1,#0]
;;;210        msg_to_robot(PG_BUSY);
000008  f7fffffe          BL       msg_to_robot
;;;211    }
00000c  bd10              POP      {r4,pc}
;;;212    static uint8_t  is_com_get_ft_cmd(void)
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      test_start_flg

                          AREA ||i.test_task||, CODE, READONLY, ALIGN=2

                  test_task PROC
;;;103     
;;;104    void test_task(void)
000000  b510              PUSH     {r4,lr}
;;;105    {
;;;106        static enum 
;;;107        {
;;;108            START = 0,
;;;109            RUN,
;;;110            CPL,
;;;111        }s_tState = START;
;;;112        static uint8_t test_item_index=0;
;;;113        static fsm_rt_t ret;
;;;114        
;;;115        if(is_com_get_ft_cmd())
000002  f7fffffe          BL       is_com_get_ft_cmd
000006  b110              CBZ      r0,|L5.14|
;;;116        {
;;;117            test_start_flg = 1;
000008  2001              MOVS     r0,#1
00000a  493d              LDR      r1,|L5.256|
00000c  7008              STRB     r0,[r1,#0]
                  |L5.14|
;;;118        }
;;;119        if( test_start_flg && file_env_err_flg )  //文件环境不对 启动测试会报错
00000e  483c              LDR      r0,|L5.256|
000010  7800              LDRB     r0,[r0,#0]  ; test_start_flg
000012  b158              CBZ      r0,|L5.44|
000014  483b              LDR      r0,|L5.260|
000016  7800              LDRB     r0,[r0,#0]  ; file_env_err_flg
000018  b140              CBZ      r0,|L5.44|
;;;120        {
;;;121            test_start_flg = 0;
00001a  2000              MOVS     r0,#0
00001c  4938              LDR      r1,|L5.256|
00001e  7008              STRB     r0,[r1,#0]
;;;122            BEEP_FAIL();
000020  2203              MOVS     r2,#3
000022  210a              MOVS     r1,#0xa
000024  2005              MOVS     r0,#5
000026  f7fffffe          BL       BEEP_Start
                  |L5.42|
;;;123            return;
;;;124        }
;;;125     
;;;126        switch(s_tState)
;;;127        {
;;;128        case START:
;;;129            if(test_start_flg)
;;;130            {
;;;131                test_item_index = 0;
;;;132                test_start();
;;;133                s_tState++;
;;;134            }
;;;135            else
;;;136            {
;;;137                comClearRxFifo(COM2);
;;;138            }
;;;139            break;
;;;140        
;;;141        case RUN:
;;;142            if(run_mode_handle != NULL && run_mode_handle->test_list_size)
;;;143            {
;;;144                ret = run_mode_handle->test_list[test_item_index]();
;;;145                if(ret != fsm_rt_on_going)
;;;146                {
;;;147                    test_item_index ++;
;;;148                    
;;;149                    if(ret == fsm_rt_cpl)                                               //正常运行完毕
;;;150                    {
;;;151                        if(test_item_index == run_mode_handle->test_list_size)
;;;152                        {
;;;153                           s_tState = CPL;
;;;154                        }
;;;155                    }
;;;156                    else //(ret err)                                                    //故障导致运行完毕
;;;157                    {
;;;158                        s_tState = CPL;
;;;159                    }
;;;160                }
;;;161            }
;;;162            else
;;;163            {
;;;164                LCD_SHOW_NG("run mode error:p=%d, size=%d\r\n", run_mode_handle, run_mode_handle->test_list_size);  
;;;165            }
;;;166            break;
;;;167            
;;;168        case CPL:
;;;169            test_start_flg  = 0;
;;;170            s_tState = START;
;;;171            bsp_ch440r_ctrl_ex(CH440R_EX_CTRL_ALL_DETACH);
;;;172            socket_touch_off();
;;;173            socket_prst_ctl(prst_state_float);
;;;174            bsp_kiwi_ft_relay_off();
;;;175            
;;;176            test_power.off();
;;;177            test_over_info_show(ret);  //根据上面返回的状态显示相应的信息 和 分binning操作
;;;178            break;
;;;179        }
;;;180    }
00002a  bd10              POP      {r4,pc}
                  |L5.44|
00002c  4836              LDR      r0,|L5.264|
00002e  7800              LDRB     r0,[r0,#0]            ;126  ; s_tState
000030  b120              CBZ      r0,|L5.60|
000032  2801              CMP      r0,#1                 ;126
000034  d014              BEQ      |L5.96|
000036  2802              CMP      r0,#2                 ;126
000038  d15f              BNE      |L5.250|
00003a  e046              B        |L5.202|
                  |L5.60|
00003c  4830              LDR      r0,|L5.256|
00003e  7800              LDRB     r0,[r0,#0]            ;129  ; test_start_flg
000040  b150              CBZ      r0,|L5.88|
000042  2000              MOVS     r0,#0                 ;131
000044  4931              LDR      r1,|L5.268|
000046  7008              STRB     r0,[r1,#0]            ;131
000048  f7fffffe          BL       test_start
00004c  482e              LDR      r0,|L5.264|
00004e  7800              LDRB     r0,[r0,#0]            ;133  ; s_tState
000050  1c40              ADDS     r0,r0,#1              ;133
000052  492d              LDR      r1,|L5.264|
000054  7008              STRB     r0,[r1,#0]            ;133
000056  e002              B        |L5.94|
                  |L5.88|
000058  2001              MOVS     r0,#1                 ;137
00005a  f7fffffe          BL       comClearRxFifo
                  |L5.94|
00005e  e04c              B        |L5.250|
                  |L5.96|
000060  482b              LDR      r0,|L5.272|
000062  6800              LDR      r0,[r0,#0]            ;142  ; run_mode_handle
000064  b338              CBZ      r0,|L5.182|
000066  482a              LDR      r0,|L5.272|
000068  6800              LDR      r0,[r0,#0]            ;142  ; run_mode_handle
00006a  7d00              LDRB     r0,[r0,#0x14]         ;142
00006c  b318              CBZ      r0,|L5.182|
00006e  4928              LDR      r1,|L5.272|
000070  6809              LDR      r1,[r1,#0]            ;144  ; run_mode_handle
000072  6909              LDR      r1,[r1,#0x10]         ;144
000074  4a25              LDR      r2,|L5.268|
000076  7812              LDRB     r2,[r2,#0]            ;144  ; test_item_index
000078  f8510022          LDR      r0,[r1,r2,LSL #2]     ;144
00007c  4780              BLX      r0                    ;144
00007e  4925              LDR      r1,|L5.276|
000080  7008              STRB     r0,[r1,#0]            ;144
000082  4608              MOV      r0,r1                 ;145
000084  7800              LDRB     r0,[r0,#0]            ;145  ; ret
000086  2801              CMP      r0,#1                 ;145
000088  d01e              BEQ      |L5.200|
00008a  4820              LDR      r0,|L5.268|
00008c  7800              LDRB     r0,[r0,#0]            ;147  ; test_item_index
00008e  1c40              ADDS     r0,r0,#1              ;147
000090  491e              LDR      r1,|L5.268|
000092  7008              STRB     r0,[r1,#0]            ;147
000094  481f              LDR      r0,|L5.276|
000096  7800              LDRB     r0,[r0,#0]            ;149  ; ret
000098  b948              CBNZ     r0,|L5.174|
00009a  481d              LDR      r0,|L5.272|
00009c  6800              LDR      r0,[r0,#0]            ;151  ; run_mode_handle
00009e  7d00              LDRB     r0,[r0,#0x14]         ;151
0000a0  7809              LDRB     r1,[r1,#0]            ;151  ; test_item_index
0000a2  4288              CMP      r0,r1                 ;151
0000a4  d110              BNE      |L5.200|
0000a6  2002              MOVS     r0,#2                 ;153
0000a8  4917              LDR      r1,|L5.264|
0000aa  7008              STRB     r0,[r1,#0]            ;153
0000ac  e00c              B        |L5.200|
                  |L5.174|
0000ae  2002              MOVS     r0,#2                 ;158
0000b0  4915              LDR      r1,|L5.264|
0000b2  7008              STRB     r0,[r1,#0]            ;158
0000b4  e008              B        |L5.200|
                  |L5.182|
0000b6  4816              LDR      r0,|L5.272|
0000b8  6800              LDR      r0,[r0,#0]            ;164  ; run_mode_handle
0000ba  7d03              LDRB     r3,[r0,#0x14]         ;164
0000bc  4814              LDR      r0,|L5.272|
0000be  a116              ADR      r1,|L5.280|
0000c0  6802              LDR      r2,[r0,#0]            ;164  ; run_mode_handle
0000c2  2001              MOVS     r0,#1                 ;164
0000c4  f7fffffe          BL       display_show_log
                  |L5.200|
0000c8  e017              B        |L5.250|
                  |L5.202|
0000ca  2000              MOVS     r0,#0                 ;169
0000cc  490c              LDR      r1,|L5.256|
0000ce  7008              STRB     r0,[r1,#0]            ;169
0000d0  490d              LDR      r1,|L5.264|
0000d2  7008              STRB     r0,[r1,#0]            ;170
0000d4  2001              MOVS     r0,#1                 ;171
0000d6  f7fffffe          BL       bsp_ch440r_ctrl_ex
0000da  f7fffffe          BL       socket_touch_off
0000de  2000              MOVS     r0,#0                 ;173
0000e0  f7fffffe          BL       socket_prst_ctl
0000e4  f7fffffe          BL       bsp_kiwi_ft_relay_off
0000e8  4913              LDR      r1,|L5.312|
0000ea  6888              LDR      r0,[r1,#8]            ;176  ; test_power
0000ec  4780              BLX      r0                    ;176
0000ee  4809              LDR      r0,|L5.276|
0000f0  f9900000          LDRSB    r0,[r0,#0]            ;177  ; ret
0000f4  f7fffffe          BL       test_over_info_show
0000f8  bf00              NOP                            ;178
                  |L5.250|
0000fa  bf00              NOP                            ;139
0000fc  bf00              NOP      
0000fe  e794              B        |L5.42|
;;;181    
                          ENDP

                  |L5.256|
                          DCD      test_start_flg
                  |L5.260|
                          DCD      file_env_err_flg
                  |L5.264|
                          DCD      s_tState
                  |L5.268|
                          DCD      test_item_index
                  |L5.272|
                          DCD      run_mode_handle
                  |L5.276|
                          DCD      ||ret||
                  |L5.280|
000118  72756e20          DCB      "run mode error:p=%d, size=%d\r\n",0
00011c  6d6f6465
000120  20657272
000124  6f723a70
000128  3d25642c
00012c  2073697a
000130  653d2564
000134  0d0a00  
000137  00                DCB      0
                  |L5.312|
                          DCD      test_power

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  trim_result
                          %        104
                  trim_measure
                          %        24
                  default_measure
                          %        24

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  custommer_trim_msk
000000  feff0efe          DCB      0xfe,0xff,0x0e,0xfe

                          AREA ||.data||, DATA, ALIGN=2

                  otp_read_data
                          DCD      0x00000000
                  trim_reg_data
                          DCD      0x00000000
                  custommer_data
                          DCD      0x00000000
                  user_config
                          DCD      0x00000000
                  test_start_flg
000010  00                DCB      0x00
                  board_id_name
000011  756e64            DCB      0x75,0x6e,0x64
000014  6566696e          DCB      0x65,0x66,0x69,0x6e
000018  65000000          DCB      0x65,0x00,0x00,0x00
                          %        12
000028  00                DCB      0x00
                  file_env_err_flg
000029  00                DCB      0x00
                  s_tState
00002a  00                DCB      0x00
                  test_item_index
00002b  00                DCB      0x00
                  ||ret||
00002c  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\chip_ft\\test.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_test_c_1bdbbe43____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_test_c_1bdbbe43____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_test_c_1bdbbe43____REVSH|
#line 144
|__asm___6_test_c_1bdbbe43____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
