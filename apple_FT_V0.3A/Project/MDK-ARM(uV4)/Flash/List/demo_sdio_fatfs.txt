; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\demo_sdio_fatfs.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\demo_sdio_fatfs.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\demo_sdio_fatfs.crf ..\..\User\demo_sdio_fatfs.c]
                          THUMB

                          AREA ||i.CreateDir||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  CreateDir PROC
;;;436    */
;;;437    static void CreateDir(char* _ucVolume)
000000  b570              PUSH     {r4-r6,lr}
;;;438    {
000002  f5ad5d82          SUB      sp,sp,#0x1040
000006  4605              MOV      r5,r0
;;;439    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;440    	FRESULT result;
;;;441    	FATFS fs;
;;;442    
;;;443     	/* 挂载文件系统 */
;;;444    	result = f_mount(&fs, _ucVolume, MOUNT_IMMEDIATELY);			/* Mount a logical drive */
000008  2200              MOVS     r2,#0
00000a  4629              MOV      r1,r5
00000c  a804              ADD      r0,sp,#0x10
00000e  f7fffffe          BL       f_mount
000012  4604              MOV      r4,r0
;;;445    	if (result != FR_OK)
000014  b11c              CBZ      r4,|L1.30|
;;;446    	{
;;;447    		printf("挂载文件系统失败 (%d)\r\n", result);
000016  4621              MOV      r1,r4
000018  a025              ADR      r0,|L1.176|
00001a  f7fffffe          BL       __2printf
                  |L1.30|
;;;448    	}
;;;449    
;;;450    	/* 创建目录/Dir1 */
;;;451    	result = f_mkdir("/Dir1");
00001e  a02c              ADR      r0,|L1.208|
000020  f7fffffe          BL       f_mkdir
000024  4604              MOV      r4,r0
;;;452    	if (result == FR_OK)
000026  b91c              CBNZ     r4,|L1.48|
;;;453    	{
;;;454    		printf("f_mkdir Dir1 Ok\r\n");
000028  a02b              ADR      r0,|L1.216|
00002a  f7fffffe          BL       __2printf
00002e  e00d              B        |L1.76|
                  |L1.48|
;;;455    	}
;;;456    	else if (result == FR_EXIST)
000030  2c08              CMP      r4,#8
000032  d104              BNE      |L1.62|
;;;457    	{
;;;458    		printf("Dir1 目录已经存在(%d)\r\n", result);
000034  4621              MOV      r1,r4
000036  a02d              ADR      r0,|L1.236|
000038  f7fffffe          BL       __2printf
00003c  e006              B        |L1.76|
                  |L1.62|
;;;459    	}
;;;460    	else
;;;461    	{
;;;462    		printf("f_mkdir Dir1 失败 (%d)\r\n", result);
00003e  4621              MOV      r1,r4
000040  a032              ADR      r0,|L1.268|
000042  f7fffffe          BL       __2printf
                  |L1.70|
;;;463    		return;
;;;464    	}
;;;465    
;;;466    	/* 创建目录/Dir2 */
;;;467    	result = f_mkdir("/Dir2");
;;;468    	if (result == FR_OK)
;;;469    	{
;;;470    		printf("f_mkdir Dir2 Ok\r\n");
;;;471    	}
;;;472    	else if (result == FR_EXIST)
;;;473    	{
;;;474    		printf("Dir2 目录已经存在(%d)\r\n", result);
;;;475    	}
;;;476    	else
;;;477    	{
;;;478    		printf("f_mkdir Dir2 失败 (%d)\r\n", result);
;;;479    		return;
;;;480    	}
;;;481    
;;;482    	/* 创建子目录 /Dir1/Dir1_1	   注意：创建子目录Dir1_1时，必须先创建好Dir1 */
;;;483    	result = f_mkdir("/Dir1/Dir1_1"); /* */
;;;484    	if (result == FR_OK)
;;;485    	{
;;;486    		printf("f_mkdir Dir1_1 成功\r\n");
;;;487    	}
;;;488    	else if (result == FR_EXIST)
;;;489    	{
;;;490    		printf("Dir1_1 目录已经存在 (%d)\r\n", result);
;;;491    	}
;;;492    	else
;;;493    	{
;;;494    		printf("f_mkdir Dir1_1 失败 (%d)\r\n", result);
;;;495    		return;
;;;496    	}
;;;497    
;;;498    	/* 卸载文件系统 */
;;;499    	f_mount(NULL, _ucVolume, MOUNT_IMMEDIATELY);
;;;500    }
000046  f50d5d82          ADD      sp,sp,#0x1040
00004a  bd70              POP      {r4-r6,pc}
                  |L1.76|
00004c  a036              ADR      r0,|L1.296|
00004e  f7fffffe          BL       f_mkdir
000052  4604              MOV      r4,r0                 ;467
000054  b91c              CBNZ     r4,|L1.94|
000056  a036              ADR      r0,|L1.304|
000058  f7fffffe          BL       __2printf
00005c  e00b              B        |L1.118|
                  |L1.94|
00005e  2c08              CMP      r4,#8                 ;472
000060  d104              BNE      |L1.108|
000062  4621              MOV      r1,r4                 ;474
000064  a037              ADR      r0,|L1.324|
000066  f7fffffe          BL       __2printf
00006a  e004              B        |L1.118|
                  |L1.108|
00006c  4621              MOV      r1,r4                 ;478
00006e  a03d              ADR      r0,|L1.356|
000070  f7fffffe          BL       __2printf
000074  e7e7              B        |L1.70|
                  |L1.118|
000076  a042              ADR      r0,|L1.384|
000078  f7fffffe          BL       f_mkdir
00007c  4604              MOV      r4,r0                 ;483
00007e  b91c              CBNZ     r4,|L1.136|
000080  a043              ADR      r0,|L1.400|
000082  f7fffffe          BL       __2printf
000086  e00b              B        |L1.160|
                  |L1.136|
000088  2c08              CMP      r4,#8                 ;488
00008a  d104              BNE      |L1.150|
00008c  4621              MOV      r1,r4                 ;490
00008e  a046              ADR      r0,|L1.424|
000090  f7fffffe          BL       __2printf
000094  e004              B        |L1.160|
                  |L1.150|
000096  4621              MOV      r1,r4                 ;494
000098  a04c              ADR      r0,|L1.460|
00009a  f7fffffe          BL       __2printf
00009e  e7d2              B        |L1.70|
                  |L1.160|
0000a0  2200              MOVS     r2,#0                 ;499
0000a2  4629              MOV      r1,r5                 ;499
0000a4  4610              MOV      r0,r2                 ;499
0000a6  f7fffffe          BL       f_mount
0000aa  bf00              NOP      
0000ac  e7cb              B        |L1.70|
;;;501    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
0000b0  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0000b4  bdbde696
0000b8  87e4bbb6
0000bc  e7b3bb  
0000bf  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%d)\r\n",0
0000c3  a4b1e8b4
0000c7  a5202825
0000cb  64290d0a
0000cf  00      
                  |L1.208|
0000d0  2f446972          DCB      "/Dir1",0
0000d4  3100    
0000d6  00                DCB      0
0000d7  00                DCB      0
                  |L1.216|
0000d8  665f6d6b          DCB      "f_mkdir Dir1 Ok\r\n",0
0000dc  64697220
0000e0  44697231
0000e4  204f6b0d
0000e8  0a00    
0000ea  00                DCB      0
0000eb  00                DCB      0
                  |L1.236|
0000ec  44697231          DCB      "Dir1 ",231,155,174,229,189,149,229,183,178,231,187,143,229
0000f0  20e79bae
0000f4  e5bd95e5
0000f8  b7b2e7bb
0000fc  8fe5    
0000fe  ad98e59c          DCB      173,152,229,156,168,"(%d)\r\n",0
000102  a8282564
000106  290d0a00
00010a  00                DCB      0
00010b  00                DCB      0
                  |L1.268|
00010c  665f6d6b          DCB      "f_mkdir Dir1 ",229,164,177,232,180,165," (%d)\r\n",0
000110  64697220
000114  44697231
000118  20e5a4b1
00011c  e8b4a520
000120  28256429
000124  0d0a00  
000127  00                DCB      0
                  |L1.296|
000128  2f446972          DCB      "/Dir2",0
00012c  3200    
00012e  00                DCB      0
00012f  00                DCB      0
                  |L1.304|
000130  665f6d6b          DCB      "f_mkdir Dir2 Ok\r\n",0
000134  64697220
000138  44697232
00013c  204f6b0d
000140  0a00    
000142  00                DCB      0
000143  00                DCB      0
                  |L1.324|
000144  44697232          DCB      "Dir2 ",231,155,174,229,189,149,229,183,178,231,187,143,229
000148  20e79bae
00014c  e5bd95e5
000150  b7b2e7bb
000154  8fe5    
000156  ad98e59c          DCB      173,152,229,156,168,"(%d)\r\n",0
00015a  a8282564
00015e  290d0a00
000162  00                DCB      0
000163  00                DCB      0
                  |L1.356|
000164  665f6d6b          DCB      "f_mkdir Dir2 ",229,164,177,232,180,165," (%d)\r\n",0
000168  64697220
00016c  44697232
000170  20e5a4b1
000174  e8b4a520
000178  28256429
00017c  0d0a00  
00017f  00                DCB      0
                  |L1.384|
000180  2f446972          DCB      "/Dir1/Dir1_1",0
000184  312f4469
000188  72315f31
00018c  00      
00018d  00                DCB      0
00018e  00                DCB      0
00018f  00                DCB      0
                  |L1.400|
000190  665f6d6b          DCB      "f_mkdir Dir1_1 ",230,136,144,229,138,159,"\r\n",0
000194  64697220
000198  44697231
00019c  5f3120e6
0001a0  8890e58a
0001a4  9f0d0a00
                  |L1.424|
0001a8  44697231          DCB      "Dir1_1 ",231,155,174,229,189,149,229,183,178,231,187,143
0001ac  5f3120e7
0001b0  9baee5bd
0001b4  95e5b7b2
0001b8  e7bb8f  
0001bb  e5ad98e5          DCB      229,173,152,229,156,168," (%d)\r\n",0
0001bf  9ca82028
0001c3  2564290d
0001c7  0a00    
0001c9  00                DCB      0
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L1.460|
0001cc  665f6d6b          DCB      "f_mkdir Dir1_1 ",229,164,177,232,180,165," (%d)\r\n",0
0001d0  64697220
0001d4  44697231
0001d8  5f3120e5
0001dc  a4b1e8b4
0001e0  a5202825
0001e4  64290d0a
0001e8  00      
0001e9  00                DCB      0
0001ea  00                DCB      0
0001eb  00                DCB      0

                          AREA ||i.CreateNewFile||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  CreateNewFile PROC
;;;275    */
;;;276    static void CreateNewFile(char* _ucVolume)
000000  b570              PUSH     {r4-r6,lr}
;;;277    {
000002  f5ad5d03          SUB      sp,sp,#0x20c0
000006  4605              MOV      r5,r0
;;;278    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;279    	FRESULT result;
;;;280    	FATFS fs;
;;;281    	FIL file;
;;;282    	DIR DirInf;
;;;283    	uint32_t bw;
;;;284        char path[32];
;;;285     	/* 挂载文件系统 */
;;;286    	result = f_mount(&fs, _ucVolume, MOUNT_IMMEDIATELY);			/* Mount a logical drive */
000008  2200              MOVS     r2,#0
00000a  4629              MOV      r1,r5
00000c  f2410090          MOV      r0,#0x1090
000010  4468              ADD      r0,r0,sp
000012  f7fffffe          BL       f_mount
000016  4604              MOV      r4,r0
;;;287    	if (result != FR_OK)
000018  b11c              CBZ      r4,|L2.34|
;;;288    	{
;;;289    		printf("挂载文件系统失败 (%d)\r\n", result);
00001a  4621              MOV      r1,r4
00001c  a019              ADR      r0,|L2.132|
00001e  f7fffffe          BL       __2printf
                  |L2.34|
;;;290    	}
;;;291    
;;;292    	/* 打开根文件夹 */
;;;293    	sprintf(path, "%s/", _ucVolume);
000022  462a              MOV      r2,r5
000024  a11f              ADR      r1,|L2.164|
000026  a808              ADD      r0,sp,#0x20
000028  f7fffffe          BL       __2sprintf
;;;294    	result = f_opendir(&DirInf, path); /* 如果不带参数，则从当前目录开始 */
00002c  a908              ADD      r1,sp,#0x20
00002e  a811              ADD      r0,sp,#0x44
000030  f7fffffe          BL       f_opendir
000034  4604              MOV      r4,r0
;;;295    	if (result != FR_OK)
000036  b134              CBZ      r4,|L2.70|
;;;296    	{
;;;297    		printf("打开根目录失败 (%d)\r\n", result);
000038  4621              MOV      r1,r4
00003a  a01b              ADR      r0,|L2.168|
00003c  f7fffffe          BL       __2printf
                  |L2.64|
;;;298    		return;
;;;299    	}
;;;300    
;;;301    	/* 打开文件 */
;;;302    	result = f_open(&file, "plxc.txt", FA_CREATE_ALWAYS | FA_WRITE);
;;;303    
;;;304    	/* 写一串数据 */
;;;305    	result = f_write(&file, "FatFS Write Demo \r\n www.spacetouch.co \r\n", 34, &bw);
;;;306    	if (result == FR_OK)
;;;307    	{
;;;308    		printf("plxc.txt 文件写入成功\r\n");
;;;309    	}
;;;310    	else
;;;311    	{
;;;312    		printf("plxc.txt 文件写入失败\r\n");
;;;313    	}
;;;314    
;;;315    	/* 关闭文件*/
;;;316    	f_close(&file);
;;;317    
;;;318    	/* 卸载文件系统 */
;;;319    	 f_mount(NULL, _ucVolume, MOUNT_IMMEDIATELY);
;;;320    }
000040  f50d5d03          ADD      sp,sp,#0x20c0
000044  bd70              POP      {r4-r6,pc}
                  |L2.70|
000046  220a              MOVS     r2,#0xa               ;302
000048  a11f              ADR      r1,|L2.200|
00004a  a81a              ADD      r0,sp,#0x68           ;302
00004c  f7fffffe          BL       f_open
000050  4604              MOV      r4,r0                 ;302
000052  ab10              ADD      r3,sp,#0x40           ;305
000054  2222              MOVS     r2,#0x22              ;305
000056  a11f              ADR      r1,|L2.212|
000058  a81a              ADD      r0,sp,#0x68           ;305
00005a  f7fffffe          BL       f_write
00005e  4604              MOV      r4,r0                 ;305
000060  b91c              CBNZ     r4,|L2.106|
000062  a027              ADR      r0,|L2.256|
000064  f7fffffe          BL       __2printf
000068  e002              B        |L2.112|
                  |L2.106|
00006a  a02d              ADR      r0,|L2.288|
00006c  f7fffffe          BL       __2printf
                  |L2.112|
000070  a81a              ADD      r0,sp,#0x68           ;316
000072  f7fffffe          BL       f_close
000076  2200              MOVS     r2,#0                 ;319
000078  4629              MOV      r1,r5                 ;319
00007a  4610              MOV      r0,r2                 ;319
00007c  f7fffffe          BL       f_mount
000080  bf00              NOP      
000082  e7dd              B        |L2.64|
;;;321    
                          ENDP

                  |L2.132|
000084  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
000088  bdbde696
00008c  87e4bbb6
000090  e7b3bb  
000093  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%d)\r\n",0
000097  a4b1e8b4
00009b  a5202825
00009f  64290d0a
0000a3  00      
                  |L2.164|
0000a4  25732f00          DCB      "%s/",0
                  |L2.168|
0000a8  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
0000ac  bc80e6a0
0000b0  b9e79bae
0000b4  e5bd95  
0000b7  e5a4b1e8          DCB      229,164,177,232,180,165," (%d)\r\n",0
0000bb  b4a52028
0000bf  2564290d
0000c3  0a00    
0000c5  00                DCB      0
0000c6  00                DCB      0
0000c7  00                DCB      0
                  |L2.200|
0000c8  706c7863          DCB      "plxc.txt",0
0000cc  2e747874
0000d0  00      
0000d1  00                DCB      0
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L2.212|
0000d4  46617446          DCB      "FatFS Write Demo \r\n www.spacetouch.co \r\n",0
0000d8  53205772
0000dc  69746520
0000e0  44656d6f
0000e4  200d0a20
0000e8  7777772e
0000ec  73706163
0000f0  65746f75
0000f4  63682e63
0000f8  6f200d0a
0000fc  00      
0000fd  00                DCB      0
0000fe  00                DCB      0
0000ff  00                DCB      0
                  |L2.256|
000100  706c7863          DCB      "plxc.txt ",230,150,135,228,187,182,229,134,153,229,133,165
000104  2e747874
000108  20e69687
00010c  e4bbb6e5
000110  8699e585
000114  a5      
000115  e68890e5          DCB      230,136,144,229,138,159,"\r\n",0
000119  8a9f0d0a
00011d  00      
00011e  00                DCB      0
00011f  00                DCB      0
                  |L2.288|
000120  706c7863          DCB      "plxc.txt ",230,150,135,228,187,182,229,134,153,229,133,165
000124  2e747874
000128  20e69687
00012c  e4bbb6e5
000130  8699e585
000134  a5      
000135  e5a4b1e8          DCB      229,164,177,232,180,165,"\r\n",0
000139  b4a50d0a
00013d  00      
00013e  00                DCB      0
00013f  00                DCB      0

                          AREA ||i.DeleteDirFile||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  DeleteDirFile PROC
;;;509    */
;;;510    static void DeleteDirFile(char* _ucVolume)
000000  b570              PUSH     {r4-r6,lr}
;;;511    {
000002  f5ad5d82          SUB      sp,sp,#0x1040
000006  4606              MOV      r6,r0
;;;512    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;513    	FRESULT result;
;;;514    	FATFS fs;
;;;515    	char FileName[13];
;;;516    	uint8_t i;
;;;517         
;;;518     	/* 挂载文件系统 */
;;;519    	result = f_mount(&fs, _ucVolume, MOUNT_IMMEDIATELY);			/* Mount a logical drive */
000008  2200              MOVS     r2,#0
00000a  4631              MOV      r1,r6
00000c  a804              ADD      r0,sp,#0x10
00000e  f7fffffe          BL       f_mount
000012  4604              MOV      r4,r0
;;;520    	if (result != FR_OK)
000014  b11c              CBZ      r4,|L3.30|
;;;521    	{
;;;522    		printf("挂载文件系统失败 (%d)\r\n", result);
000016  4621              MOV      r1,r4
000018  a048              ADR      r0,|L3.316|
00001a  f7fffffe          BL       __2printf
                  |L3.30|
;;;523    	}
;;;524    
;;;525    	#if 0
;;;526    	/* 打开根文件夹 */
;;;527    	result = f_opendir(&DirInf, "/"); /* 如果不带参数，则从当前目录开始 */
;;;528    	if (result != FR_OK)
;;;529    	{
;;;530    		printf("打开根目录失败(%d)\r\n", result);
;;;531    		return;
;;;532    	}
;;;533    	#endif
;;;534    
;;;535    	/* 删除目录/Dir1 【因为还存在目录非空（存在子目录)，所以这次删除会失败】*/
;;;536    	result = f_unlink("/Dir1");
00001e  a04f              ADR      r0,|L3.348|
000020  f7fffffe          BL       f_unlink
000024  4604              MOV      r4,r0
;;;537    	if (result == FR_OK)
000026  b91c              CBNZ     r4,|L3.48|
;;;538    	{
;;;539    		printf("删除目录Dir1成功\r\n");
000028  a04e              ADR      r0,|L3.356|
00002a  f7fffffe          BL       __2printf
00002e  e00a              B        |L3.70|
                  |L3.48|
;;;540    	}
;;;541    	else if (result == FR_NO_FILE)
000030  2c04              CMP      r4,#4
000032  d104              BNE      |L3.62|
;;;542    	{
;;;543    		printf("没有发现文件或目录 :%s\r\n", "/Dir1");
000034  a149              ADR      r1,|L3.348|
000036  a052              ADR      r0,|L3.384|
000038  f7fffffe          BL       __2printf
00003c  e003              B        |L3.70|
                  |L3.62|
;;;544    	}
;;;545    	else
;;;546    	{
;;;547    		printf("删除Dir1失败(错误代码 = %d) 文件只读或目录非空\r\n", result);
00003e  4621              MOV      r1,r4
000040  4858              LDR      r0,|L3.420|
000042  f7fffffe          BL       __2printf
                  |L3.70|
;;;548    	}
;;;549    
;;;550    	/* 先删除目录/Dir1/Dir1_1 */
;;;551    	result = f_unlink("/Dir1/Dir1_1");
000046  a058              ADR      r0,|L3.424|
000048  f7fffffe          BL       f_unlink
00004c  4604              MOV      r4,r0
;;;552    	if (result == FR_OK)
00004e  b91c              CBNZ     r4,|L3.88|
;;;553    	{
;;;554    		printf("删除子目录/Dir1/Dir1_1成功\r\n");
000050  a059              ADR      r0,|L3.440|
000052  f7fffffe          BL       __2printf
000056  e00c              B        |L3.114|
                  |L3.88|
;;;555    	}
;;;556    	else if ((result == FR_NO_FILE) || (result == FR_NO_PATH))
000058  2c04              CMP      r4,#4
00005a  d001              BEQ      |L3.96|
00005c  2c05              CMP      r4,#5
00005e  d104              BNE      |L3.106|
                  |L3.96|
;;;557    	{
;;;558    		printf("没有发现文件或目录 :%s\r\n", "/Dir1/Dir1_1");
000060  a151              ADR      r1,|L3.424|
000062  a047              ADR      r0,|L3.384|
000064  f7fffffe          BL       __2printf
000068  e003              B        |L3.114|
                  |L3.106|
;;;559    	}
;;;560    	else
;;;561    	{
;;;562    		printf("删除子目录/Dir1/Dir1_1失败(错误代码 = %d) 文件只读或目录非空\r\n", result);
00006a  4621              MOV      r1,r4
00006c  485b              LDR      r0,|L3.476|
00006e  f7fffffe          BL       __2printf
                  |L3.114|
;;;563    	}
;;;564    
;;;565    	/* 先删除目录/Dir1 */
;;;566    	result = f_unlink("/Dir1");
000072  a03a              ADR      r0,|L3.348|
000074  f7fffffe          BL       f_unlink
000078  4604              MOV      r4,r0
;;;567    	if (result == FR_OK)
00007a  b91c              CBNZ     r4,|L3.132|
;;;568    	{
;;;569    		printf("删除目录Dir1成功\r\n");
00007c  a039              ADR      r0,|L3.356|
00007e  f7fffffe          BL       __2printf
000082  e00a              B        |L3.154|
                  |L3.132|
;;;570    	}
;;;571    	else if (result == FR_NO_FILE)
000084  2c04              CMP      r4,#4
000086  d104              BNE      |L3.146|
;;;572    	{
;;;573    		printf("没有发现文件或目录 :%s\r\n", "/Dir1");
000088  a134              ADR      r1,|L3.348|
00008a  a03d              ADR      r0,|L3.384|
00008c  f7fffffe          BL       __2printf
000090  e003              B        |L3.154|
                  |L3.146|
;;;574    	}
;;;575    	else
;;;576    	{
;;;577    		printf("删除Dir1失败(错误代码 = %d) 文件只读或目录非空\r\n", result);
000092  4621              MOV      r1,r4
000094  4843              LDR      r0,|L3.420|
000096  f7fffffe          BL       __2printf
                  |L3.154|
;;;578    	}
;;;579    
;;;580    	/* 删除目录/Dir2 */
;;;581    	result = f_unlink("/Dir2");
00009a  a051              ADR      r0,|L3.480|
00009c  f7fffffe          BL       f_unlink
0000a0  4604              MOV      r4,r0
;;;582    	if (result == FR_OK)
0000a2  b91c              CBNZ     r4,|L3.172|
;;;583    	{
;;;584    		printf("删除目录 Dir2 成功\r\n");
0000a4  a050              ADR      r0,|L3.488|
0000a6  f7fffffe          BL       __2printf
0000aa  e00a              B        |L3.194|
                  |L3.172|
;;;585    	}
;;;586    	else if (result == FR_NO_FILE)
0000ac  2c04              CMP      r4,#4
0000ae  d104              BNE      |L3.186|
;;;587    	{
;;;588    		printf("没有发现文件或目录 :%s\r\n", "/Dir2");
0000b0  a14b              ADR      r1,|L3.480|
0000b2  a033              ADR      r0,|L3.384|
0000b4  f7fffffe          BL       __2printf
0000b8  e003              B        |L3.194|
                  |L3.186|
;;;589    	}
;;;590    	else
;;;591    	{
;;;592    		printf("删除Dir2 失败(错误代码 = %d) 文件只读或目录非空\r\n", result);
0000ba  4621              MOV      r1,r4
0000bc  4851              LDR      r0,|L3.516|
0000be  f7fffffe          BL       __2printf
                  |L3.194|
;;;593    	}
;;;594    
;;;595    	/* 删除文件 plxc.txt */
;;;596    	result = f_unlink("plxc.txt");
0000c2  a051              ADR      r0,|L3.520|
0000c4  f7fffffe          BL       f_unlink
0000c8  4604              MOV      r4,r0
;;;597    	if (result == FR_OK)
0000ca  b91c              CBNZ     r4,|L3.212|
;;;598    	{
;;;599    		printf("删除文件 plxc.txt 成功\r\n");
0000cc  a051              ADR      r0,|L3.532|
0000ce  f7fffffe          BL       __2printf
0000d2  e00a              B        |L3.234|
                  |L3.212|
;;;600    	}
;;;601    	else if (result == FR_NO_FILE)
0000d4  2c04              CMP      r4,#4
0000d6  d104              BNE      |L3.226|
;;;602    	{
;;;603    		printf("没有发现文件或目录 :%s\r\n", "plxc.txt");
0000d8  a14b              ADR      r1,|L3.520|
0000da  a029              ADR      r0,|L3.384|
0000dc  f7fffffe          BL       __2printf
0000e0  e003              B        |L3.234|
                  |L3.226|
;;;604    	}
;;;605    	else
;;;606    	{
;;;607    		printf("删除plxc.txt失败(错误代码 = %d) 文件只读或目录非空\r\n", result);
0000e2  4621              MOV      r1,r4
0000e4  4853              LDR      r0,|L3.564|
0000e6  f7fffffe          BL       __2printf
                  |L3.234|
;;;608    	}
;;;609    
;;;610    	/* 删除文件 speed1.txt */
;;;611    	for (i = 0; i < 20; i++)
0000ea  2500              MOVS     r5,#0
0000ec  e01c              B        |L3.296|
                  |L3.238|
;;;612    	{
;;;613    		sprintf(FileName, "Speed%02d.txt", i);		/* 每写1次，序号递增 */
0000ee  462a              MOV      r2,r5
0000f0  a151              ADR      r1,|L3.568|
0000f2  4668              MOV      r0,sp
0000f4  f7fffffe          BL       __2sprintf
;;;614    		result = f_unlink(FileName);
0000f8  4668              MOV      r0,sp
0000fa  f7fffffe          BL       f_unlink
0000fe  4604              MOV      r4,r0
;;;615    		if (result == FR_OK)
000100  b924              CBNZ     r4,|L3.268|
;;;616    		{
;;;617    			printf("删除文件%s成功\r\n", FileName);
000102  4669              MOV      r1,sp
000104  a050              ADR      r0,|L3.584|
000106  f7fffffe          BL       __2printf
00010a  e00b              B        |L3.292|
                  |L3.268|
;;;618    		}
;;;619    		else if (result == FR_NO_FILE)
00010c  2c04              CMP      r4,#4
00010e  d104              BNE      |L3.282|
;;;620    		{
;;;621    			printf("没有发现文件:%s\r\n", FileName);
000110  4669              MOV      r1,sp
000112  a053              ADR      r0,|L3.608|
000114  f7fffffe          BL       __2printf
000118  e004              B        |L3.292|
                  |L3.282|
;;;622    		}
;;;623    		else
;;;624    		{
;;;625    			printf("删除%s文件失败(错误代码 = %d) 文件只读或目录非空\r\n", FileName, result);
00011a  4622              MOV      r2,r4
00011c  4669              MOV      r1,sp
00011e  4856              LDR      r0,|L3.632|
000120  f7fffffe          BL       __2printf
                  |L3.292|
000124  1c68              ADDS     r0,r5,#1              ;611
000126  b2c5              UXTB     r5,r0                 ;611
                  |L3.296|
000128  2d14              CMP      r5,#0x14              ;611
00012a  dbe0              BLT      |L3.238|
;;;626    		}
;;;627    	}
;;;628    
;;;629    	/* 卸载文件系统 */
;;;630    	f_mount(NULL, _ucVolume, MOUNT_IMMEDIATELY);
00012c  2200              MOVS     r2,#0
00012e  4631              MOV      r1,r6
000130  4610              MOV      r0,r2
000132  f7fffffe          BL       f_mount
;;;631    }
000136  f50d5d82          ADD      sp,sp,#0x1040
00013a  bd70              POP      {r4-r6,pc}
;;;632    
                          ENDP

                  |L3.316|
00013c  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
000140  bdbde696
000144  87e4bbb6
000148  e7b3bb  
00014b  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%d)\r\n",0
00014f  a4b1e8b4
000153  a5202825
000157  64290d0a
00015b  00      
                  |L3.348|
00015c  2f446972          DCB      "/Dir1",0
000160  3100    
000162  00                DCB      0
000163  00                DCB      0
                  |L3.356|
000164  e588a0e9          DCB      229,136,160,233,153,164,231,155,174,229,189,149,"Dir1",230
000168  99a4e79b
00016c  aee5bd95
000170  44697231
000174  e6      
000175  8890e58a          DCB      136,144,229,138,159,"\r\n",0
000179  9f0d0a00
00017d  00                DCB      0
00017e  00                DCB      0
00017f  00                DCB      0
                  |L3.384|
000180  e6b2a1e6          DCB      230,178,161,230,156,137,229,143,145,231,142,176,230,150,135
000184  9c89e58f
000188  91e78eb0
00018c  e69687  
00018f  e4bbb6e6          DCB      228,187,182,230,136,150,231,155,174,229,189,149," :%s\r\n"
000193  8896e79b
000197  aee5bd95
00019b  203a2573
00019f  0d0a    
0001a1  00                DCB      0
0001a2  00                DCB      0
0001a3  00                DCB      0
                  |L3.420|
                          DCD      ||.conststring||+0x8
                  |L3.424|
0001a8  2f446972          DCB      "/Dir1/Dir1_1",0
0001ac  312f4469
0001b0  72315f31
0001b4  00      
0001b5  00                DCB      0
0001b6  00                DCB      0
0001b7  00                DCB      0
                  |L3.440|
0001b8  e588a0e9          DCB      229,136,160,233,153,164,229,173,144,231,155,174,229,189,149
0001bc  99a4e5ad
0001c0  90e79bae
0001c4  e5bd95  
0001c7  2f446972          DCB      "/Dir1/Dir1_1",230,136,144,229,138,159,"\r\n",0
0001cb  312f4469
0001cf  72315f31
0001d3  e68890e5
0001d7  8a9f0d0a
0001db  00      
                  |L3.476|
                          DCD      ||.conststring||+0x4c
                  |L3.480|
0001e0  2f446972          DCB      "/Dir2",0
0001e4  3200    
0001e6  00                DCB      0
0001e7  00                DCB      0
                  |L3.488|
0001e8  e588a0e9          DCB      229,136,160,233,153,164,231,155,174,229,189,149," Dir2 ",230
0001ec  99a4e79b
0001f0  aee5bd95
0001f4  20446972
0001f8  3220e6  
0001fb  8890e58a          DCB      136,144,229,138,159,"\r\n",0
0001ff  9f0d0a00
000203  00                DCB      0
                  |L3.516|
                          DCD      ||.conststring||+0xa0
                  |L3.520|
000208  706c7863          DCB      "plxc.txt",0
00020c  2e747874
000210  00      
000211  00                DCB      0
000212  00                DCB      0
000213  00                DCB      0
                  |L3.532|
000214  e588a0e9          DCB      229,136,160,233,153,164,230,150,135,228,187,182," plxc.t"
000218  99a4e696
00021c  87e4bbb6
000220  20706c78
000224  632e74  
000227  787420e6          DCB      "xt ",230,136,144,229,138,159,"\r\n",0
00022b  8890e58a
00022f  9f0d0a00
000233  00                DCB      0
                  |L3.564|
                          DCD      ||.conststring||+0xe4
                  |L3.568|
000238  53706565          DCB      "Speed%02d.txt",0
00023c  64253032
000240  642e7478
000244  7400    
000246  00                DCB      0
000247  00                DCB      0
                  |L3.584|
000248  e588a0e9          DCB      229,136,160,233,153,164,230,150,135,228,187,182,"%s",230
00024c  99a4e696
000250  87e4bbb6
000254  2573e6  
000257  8890e58a          DCB      136,144,229,138,159,"\r\n",0
00025b  9f0d0a00
00025f  00                DCB      0
                  |L3.608|
000260  e6b2a1e6          DCB      230,178,161,230,156,137,229,143,145,231,142,176,230,150,135
000264  9c89e58f
000268  91e78eb0
00026c  e69687  
00026f  e4bbb63a          DCB      228,187,182,":%s\r\n",0
000273  25730d0a
000277  00      
                  |L3.632|
                          DCD      ||.conststring||+0x12c

                          AREA ||i.ReadFileData||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_str
                  ReadFileData PROC
;;;329    */
;;;330    static void ReadFileData(char* _ucVolume)
000000  b570              PUSH     {r4-r6,lr}
;;;331    {
000002  f5ad5d07          SUB      sp,sp,#0x21c0
000006  4605              MOV      r5,r0
;;;332    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;333    	FRESULT result;
;;;334    	FATFS fs;
;;;335    	FIL file;
;;;336    	DIR DirInf;
;;;337    	uint32_t bw;
;;;338    	char buf[128];
;;;339        char path[32];
;;;340     	/* 挂载文件系统 */
;;;341    	result = f_mount(&fs, _ucVolume, MOUNT_IMMEDIATELY);			/* Mount a logical drive */
000008  2200              MOVS     r2,#0
00000a  4629              MOV      r1,r5
00000c  f2411090          MOV      r0,#0x1190
000010  4468              ADD      r0,r0,sp
000012  f7fffffe          BL       f_mount
000016  4604              MOV      r4,r0
;;;342    	if (result != FR_OK)
000018  b11c              CBZ      r4,|L4.34|
;;;343    	{
;;;344    		printf("挂载文件系统失败(%d)\r\n", result);
00001a  4621              MOV      r1,r4
00001c  a042              ADR      r0,|L4.296|
00001e  f7fffffe          BL       __2printf
                  |L4.34|
;;;345    	}
;;;346    
;;;347    	/* 打开根文件夹 */
;;;348        sprintf(path, "%s/", _ucVolume);
000022  462a              MOV      r2,r5
000024  a148              ADR      r1,|L4.328|
000026  a828              ADD      r0,sp,#0xa0
000028  f7fffffe          BL       __2sprintf
;;;349    	result = f_opendir(&DirInf, path); /* 如果不带参数，则从当前目录开始 */
00002c  a928              ADD      r1,sp,#0xa0
00002e  a851              ADD      r0,sp,#0x144
000030  f7fffffe          BL       f_opendir
000034  4604              MOV      r4,r0
;;;350    	if (result != FR_OK)
000036  b134              CBZ      r4,|L4.70|
;;;351    	{
;;;352    		printf("打开根目录失败(%d)\r\n", result);
000038  4621              MOV      r1,r4
00003a  a044              ADR      r0,|L4.332|
00003c  f7fffffe          BL       __2printf
                  |L4.64|
;;;353    		return;
;;;354    	}
;;;355    
;;;356    	/* 打开文件1 */
;;;357    	result = f_open(&file, "plxc.txt", FA_OPEN_EXISTING | FA_READ);
;;;358    	if (result !=  FR_OK)
;;;359    	{
;;;360    		printf("Don't Find File : plxc.txt\r\n");
;;;361    		return;
;;;362    	}
;;;363    
;;;364    	/* 读取文件 */
;;;365    	result = f_read(&file, &buf, sizeof(buf) - 1, &bw);
;;;366    	if (bw > 0)
;;;367    	{
;;;368    		buf[bw] = 0;
;;;369    		printf("\r\nplxc.txt 文件内容 : \r\n%s\r\n", buf);
;;;370    	}
;;;371    	else
;;;372    	{
;;;373    		printf("\r\nplxc.txt 文件内容 : \r\n");
;;;374    	}
;;;375    
;;;376        /* 打开文件2 */
;;;377    	result = f_open(&file, "CONFIG.txt", FA_OPEN_EXISTING | FA_READ);
;;;378    	if (result !=  FR_OK)
;;;379    	{
;;;380    		printf("Don't Find File : CONFIG.txt\r\n");
;;;381    		return;
;;;382    	}
;;;383    
;;;384    	/* 读取文件 */
;;;385    	result = f_read(&file, &buf, sizeof(buf) - 1, &bw);
;;;386    	if (bw > 0)
;;;387    	{
;;;388    		buf[bw] = 0;
;;;389    		printf("\r\nCONFIG.txt 文件内容 : \r\n%s\r\n", buf);
;;;390    	}
;;;391    	else
;;;392    	{
;;;393    		printf("\r\nCONFIG.txt 文件内容 : \r\n");
;;;394    	}
;;;395        
;;;396        /* 打开文件3 */
;;;397    	result = f_open(&file, buf, FA_OPEN_EXISTING | FA_READ);
;;;398    	if (result !=  FR_OK)
;;;399    	{
;;;400    		printf("Don't Find File : %s\r\n",buf);
;;;401    		return;
;;;402    	}
;;;403        uint8_t bufT[128];
;;;404    	/* 读取文件 */
;;;405    	result = f_read(&file, &bufT, 8, &bw);
;;;406    	if (bw > 0)
;;;407    	{
;;;408    		//bufT[bw] = 0;
;;;409            printf("\r\n%s  文件内容1 :\r\n", buf);
;;;410            
;;;411            for(uint8_t i=0;i<8;i++)
;;;412            {
;;;413                printf("\r\n 0x%02x \r\n", bufT[i]);
;;;414            }
;;;415    		
;;;416    	}
;;;417    	else
;;;418    	{
;;;419    		printf("\r\n%s 文件内容2 : \r\n",buf);
;;;420    	}
;;;421        
;;;422    	/* 关闭文件*/
;;;423    	f_close(&file);
;;;424    
;;;425    	/* 卸载文件系统 */
;;;426    	 f_mount(NULL, _ucVolume, MOUNT_IMMEDIATELY);
;;;427    }
000040  f50d5d07          ADD      sp,sp,#0x21c0
000044  bd70              POP      {r4-r6,pc}
                  |L4.70|
000046  2201              MOVS     r2,#1                 ;357
000048  a147              ADR      r1,|L4.360|
00004a  a85a              ADD      r0,sp,#0x168          ;357
00004c  f7fffffe          BL       f_open
000050  4604              MOV      r4,r0                 ;357
000052  b11c              CBZ      r4,|L4.92|
000054  a047              ADR      r0,|L4.372|
000056  f7fffffe          BL       __2printf
00005a  e7f1              B        |L4.64|
                  |L4.92|
00005c  ab50              ADD      r3,sp,#0x140          ;365
00005e  227f              MOVS     r2,#0x7f              ;365
000060  a930              ADD      r1,sp,#0xc0           ;365
000062  a85a              ADD      r0,sp,#0x168          ;365
000064  f7fffffe          BL       f_read
000068  4604              MOV      r4,r0                 ;365
00006a  9850              LDR      r0,[sp,#0x140]        ;366
00006c  b138              CBZ      r0,|L4.126|
00006e  2000              MOVS     r0,#0                 ;368
000070  a930              ADD      r1,sp,#0xc0           ;368
000072  9a50              LDR      r2,[sp,#0x140]        ;368
000074  5488              STRB     r0,[r1,r2]            ;368
000076  a047              ADR      r0,|L4.404|
000078  f7fffffe          BL       __2printf
00007c  e002              B        |L4.132|
                  |L4.126|
00007e  a04e              ADR      r0,|L4.440|
000080  f7fffffe          BL       __2printf
                  |L4.132|
000084  2201              MOVS     r2,#1                 ;377
000086  a154              ADR      r1,|L4.472|
000088  a85a              ADD      r0,sp,#0x168          ;377
00008a  f7fffffe          BL       f_open
00008e  4604              MOV      r4,r0                 ;377
000090  b11c              CBZ      r4,|L4.154|
000092  a054              ADR      r0,|L4.484|
000094  f7fffffe          BL       __2printf
000098  e7d2              B        |L4.64|
                  |L4.154|
00009a  ab50              ADD      r3,sp,#0x140          ;385
00009c  227f              MOVS     r2,#0x7f              ;385
00009e  a930              ADD      r1,sp,#0xc0           ;385
0000a0  a85a              ADD      r0,sp,#0x168          ;385
0000a2  f7fffffe          BL       f_read
0000a6  4604              MOV      r4,r0                 ;385
0000a8  9850              LDR      r0,[sp,#0x140]        ;386
0000aa  b138              CBZ      r0,|L4.188|
0000ac  2000              MOVS     r0,#0                 ;388
0000ae  a930              ADD      r1,sp,#0xc0           ;388
0000b0  9a50              LDR      r2,[sp,#0x140]        ;388
0000b2  5488              STRB     r0,[r1,r2]            ;388
0000b4  a053              ADR      r0,|L4.516|
0000b6  f7fffffe          BL       __2printf
0000ba  e002              B        |L4.194|
                  |L4.188|
0000bc  a05a              ADR      r0,|L4.552|
0000be  f7fffffe          BL       __2printf
                  |L4.194|
0000c2  2201              MOVS     r2,#1                 ;397
0000c4  a930              ADD      r1,sp,#0xc0           ;397
0000c6  a85a              ADD      r0,sp,#0x168          ;397
0000c8  f7fffffe          BL       f_open
0000cc  4604              MOV      r4,r0                 ;397
0000ce  b124              CBZ      r4,|L4.218|
0000d0  a930              ADD      r1,sp,#0xc0           ;400
0000d2  a05d              ADR      r0,|L4.584|
0000d4  f7fffffe          BL       __2printf
0000d8  e7b2              B        |L4.64|
                  |L4.218|
0000da  ab50              ADD      r3,sp,#0x140          ;405
0000dc  2208              MOVS     r2,#8                 ;405
0000de  a908              ADD      r1,sp,#0x20           ;405
0000e0  a85a              ADD      r0,sp,#0x168          ;405
0000e2  f7fffffe          BL       f_read
0000e6  4604              MOV      r4,r0                 ;405
0000e8  9850              LDR      r0,[sp,#0x140]        ;406
0000ea  b178              CBZ      r0,|L4.268|
0000ec  a930              ADD      r1,sp,#0xc0           ;409
0000ee  a05c              ADR      r0,|L4.608|
0000f0  f7fffffe          BL       __2printf
0000f4  2600              MOVS     r6,#0                 ;411
0000f6  e006              B        |L4.262|
                  |L4.248|
0000f8  a808              ADD      r0,sp,#0x20           ;413
0000fa  5d81              LDRB     r1,[r0,r6]            ;413
0000fc  a05e              ADR      r0,|L4.632|
0000fe  f7fffffe          BL       __2printf
000102  1c70              ADDS     r0,r6,#1              ;411
000104  b2c6              UXTB     r6,r0                 ;411
                  |L4.262|
000106  2e08              CMP      r6,#8                 ;411
000108  dbf6              BLT      |L4.248|
00010a  e003              B        |L4.276|
                  |L4.268|
00010c  a930              ADD      r1,sp,#0xc0           ;419
00010e  a05e              ADR      r0,|L4.648|
000110  f7fffffe          BL       __2printf
                  |L4.276|
000114  a85a              ADD      r0,sp,#0x168          ;423
000116  f7fffffe          BL       f_close
00011a  2200              MOVS     r2,#0                 ;426
00011c  4629              MOV      r1,r5                 ;426
00011e  4610              MOV      r0,r2                 ;426
000120  f7fffffe          BL       f_mount
000124  bf00              NOP      
000126  e78b              B        |L4.64|
;;;428    
                          ENDP

                  |L4.296|
000128  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
00012c  bdbde696
000130  87e4bbb6
000134  e7b3bb  
000137  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165,"(%d)\r\n",0
00013b  a4b1e8b4
00013f  a5282564
000143  290d0a00
000147  00                DCB      0
                  |L4.328|
000148  25732f00          DCB      "%s/",0
                  |L4.332|
00014c  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
000150  bc80e6a0
000154  b9e79bae
000158  e5bd95  
00015b  e5a4b1e8          DCB      229,164,177,232,180,165,"(%d)\r\n",0
00015f  b4a52825
000163  64290d0a
000167  00      
                  |L4.360|
000168  706c7863          DCB      "plxc.txt",0
00016c  2e747874
000170  00      
000171  00                DCB      0
000172  00                DCB      0
000173  00                DCB      0
                  |L4.372|
000174  446f6e27          DCB      "Don't Find File : plxc.txt\r\n",0
000178  74204669
00017c  6e642046
000180  696c6520
000184  3a20706c
000188  78632e74
00018c  78740d0a
000190  00      
000191  00                DCB      0
000192  00                DCB      0
000193  00                DCB      0
                  |L4.404|
000194  0d0a706c          DCB      "\r\nplxc.txt ",230,150,135,228,187,182,229,134,133,229,174
000198  78632e74
00019c  787420e6
0001a0  9687e4bb
0001a4  b6e58685
0001a8  e5ae    
0001aa  b9203a20          DCB      185," : \r\n%s\r\n",0
0001ae  0d0a2573
0001b2  0d0a00  
0001b5  00                DCB      0
0001b6  00                DCB      0
0001b7  00                DCB      0
                  |L4.440|
0001b8  0d0a706c          DCB      "\r\nplxc.txt ",230,150,135,228,187,182,229,134,133,229,174
0001bc  78632e74
0001c0  787420e6
0001c4  9687e4bb
0001c8  b6e58685
0001cc  e5ae    
0001ce  b9203a20          DCB      185," : \r\n",0
0001d2  0d0a00  
0001d5  00                DCB      0
0001d6  00                DCB      0
0001d7  00                DCB      0
                  |L4.472|
0001d8  434f4e46          DCB      "CONFIG.txt",0
0001dc  49472e74
0001e0  787400  
0001e3  00                DCB      0
                  |L4.484|
0001e4  446f6e27          DCB      "Don't Find File : CONFIG.txt\r\n",0
0001e8  74204669
0001ec  6e642046
0001f0  696c6520
0001f4  3a20434f
0001f8  4e464947
0001fc  2e747874
000200  0d0a00  
000203  00                DCB      0
                  |L4.516|
000204  0d0a434f          DCB      "\r\nCONFIG.txt ",230,150,135,228,187,182,229,134,133,229
000208  4e464947
00020c  2e747874
000210  20e69687
000214  e4bbb6e5
000218  8685e5  
00021b  aeb9203a          DCB      174,185," : \r\n%s\r\n",0
00021f  200d0a25
000223  730d0a00
000227  00                DCB      0
                  |L4.552|
000228  0d0a434f          DCB      "\r\nCONFIG.txt ",230,150,135,228,187,182,229,134,133,229
00022c  4e464947
000230  2e747874
000234  20e69687
000238  e4bbb6e5
00023c  8685e5  
00023f  aeb9203a          DCB      174,185," : \r\n",0
000243  200d0a00
000247  00                DCB      0
                  |L4.584|
000248  446f6e27          DCB      "Don't Find File : %s\r\n",0
00024c  74204669
000250  6e642046
000254  696c6520
000258  3a202573
00025c  0d0a00  
00025f  00                DCB      0
                  |L4.608|
000260  0d0a2573          DCB      "\r\n%s  ",230,150,135,228,187,182,229,134,133,229,174,185
000264  2020e696
000268  87e4bbb6
00026c  e58685e5
000270  aeb9    
000272  31203a0d          DCB      "1 :\r\n",0
000276  0a00    
                  |L4.632|
000278  0d0a2030          DCB      "\r\n 0x%02x \r\n",0
00027c  78253032
000280  78200d0a
000284  00      
000285  00                DCB      0
000286  00                DCB      0
000287  00                DCB      0
                  |L4.648|
000288  0d0a2573          DCB      "\r\n%s ",230,150,135,228,187,182,229,134,133,229,174,185
00028c  20e69687
000290  e4bbb6e5
000294  8685e5ae
000298  b9      
000299  32203a20          DCB      "2 : \r\n",0
00029d  0d0a00  

                          AREA ||i.ViewRootDir||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  ViewRootDir PROC
;;;181    */
;;;182    static void ViewRootDir(char* _ucVolume)
000000  b570              PUSH     {r4-r6,lr}
;;;183    {
000002  b0da              SUB      sp,sp,#0x168
000004  4605              MOV      r5,r0
;;;184    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;185    	FRESULT result;
;;;186    	static FATFS fs;
;;;187    	DIR DirInf;
;;;188    	FILINFO FileInf;
;;;189    	uint32_t cnt = 0;
000006  2600              MOVS     r6,#0
;;;190    	char lfname[256];
;;;191        char path[32];
;;;192        //FRESULT res_flash;
;;;193    //    char strr[]="12345678";
;;;194     	/* 挂载文件系统 */
;;;195    	result = f_mount(&fs, _ucVolume, MOUNT_IMMEDIATELY);	/* Mount a logical drive */
000008  2200              MOVS     r2,#0
00000a  4629              MOV      r1,r5
00000c  482d              LDR      r0,|L5.196|
00000e  f7fffffe          BL       f_mount
000012  4604              MOV      r4,r0
;;;196    	if (result != FR_OK)
000014  b12c              CBZ      r4,|L5.34|
;;;197    	{
;;;198            //res_flash = f_mkfs(_ucVolume,0,0);
;;;199    		printf("挂载文件系统失败 (%d)\r\n", result);
000016  4621              MOV      r1,r4
000018  a02b              ADR      r0,|L5.200|
00001a  f7fffffe          BL       __2printf
                  |L5.30|
;;;200    //        if (res_flash != FR_OK)
;;;201    //        {
;;;202    //            printf("》 FLASH 已成功格式化文件系统。 \r\n");
;;;203    //            /* 格式化后，先取消挂载 */
;;;204    //            res_flash = f_mount(NULL,_ucVolume,MOUNT_IMMEDIATELY);
;;;205    //            /* 重新挂载 */
;;;206    //            res_flash = f_mount(&fs,_ucVolume,MOUNT_IMMEDIATELY);
;;;207    //        }
;;;208    //        else
;;;209    //        {
;;;210    //        //LED_RED;
;;;211    //            printf("《《格式化失败。》》 \r\n");
;;;212    //            while (1);
;;;213    //        }
;;;214            return;
;;;215    	}
;;;216       // sprintf(path_str,"%s/",_ucVolume);
;;;217        //result = f_getcwd(strr, 10);
;;;218        //printf("file path=s%",strr);
;;;219    	/* 打开根文件夹 */
;;;220        sprintf(path, "%s/", _ucVolume);	 /* 1: ±íÊ¾ÅÌ·û */
;;;221    	result = f_opendir(&DirInf, path); /* 如果不带参数，则从当前目录开始 */
;;;222    	if (result != FR_OK)
;;;223    	{
;;;224    		printf("打开根目录失败 (%d)\r\n", result);
;;;225    		return;
;;;226    	}
;;;227    
;;;228    	/* 读取当前文件夹下的文件和目录 */
;;;229    	FileInf.lfname = lfname;
;;;230    	FileInf.lfsize = 256;
;;;231    
;;;232    	printf("属性        |  文件大小 | 短文件名 | 长文件名\r\n");
;;;233    	for (cnt = 0; ;cnt++)
;;;234    	{
;;;235    		result = f_readdir(&DirInf,&FileInf); 		/* 读取目录项，索引会自动下移 */
;;;236    		if (result != FR_OK || FileInf.fname[0] == 0)
;;;237    		{
;;;238    			break;
;;;239    		}
;;;240    
;;;241    		if (FileInf.fname[0] == '.')
;;;242    		{
;;;243    			continue;
;;;244    		}
;;;245    
;;;246    		/* 判断是文件还是子目录 */
;;;247    		if (FileInf.fattrib & AM_DIR)
;;;248    		{
;;;249    			printf("(0x%02d)目录  ", FileInf.fattrib);
;;;250    		}
;;;251    		else
;;;252    		{
;;;253    			printf("(0x%02d)文件  ", FileInf.fattrib);
;;;254    		}
;;;255    
;;;256    		/* 打印文件大小, 最大4G */
;;;257    		printf(" %10d", FileInf.fsize);
;;;258    
;;;259    		printf("  %s |", FileInf.fname);	/* 短文件名 */
;;;260    
;;;261    		printf("  %s\r\n", (char *)FileInf.lfname);	/* 长文件名 */
;;;262    	}
;;;263    
;;;264    	/* 卸载文件系统 */
;;;265    	 f_mount(NULL, _ucVolume, MOUNT_IMMEDIATELY); 
;;;266    }
00001e  b05a              ADD      sp,sp,#0x168
000020  bd70              POP      {r4-r6,pc}
                  |L5.34|
000022  462a              MOV      r2,r5                 ;220
000024  a130              ADR      r1,|L5.232|
000026  a801              ADD      r0,sp,#4              ;220
000028  f7fffffe          BL       __2sprintf
00002c  a901              ADD      r1,sp,#4              ;221
00002e  a851              ADD      r0,sp,#0x144          ;221
000030  f7fffffe          BL       f_opendir
000034  4604              MOV      r4,r0                 ;221
000036  b124              CBZ      r4,|L5.66|
000038  4621              MOV      r1,r4                 ;224
00003a  a02c              ADR      r0,|L5.236|
00003c  f7fffffe          BL       __2printf
000040  e7ed              B        |L5.30|
                  |L5.66|
000042  a809              ADD      r0,sp,#0x24           ;229
000044  904f              STR      r0,[sp,#0x13c]        ;229
000046  f44f7080          MOV      r0,#0x100             ;230
00004a  9050              STR      r0,[sp,#0x140]        ;230
00004c  a02f              ADR      r0,|L5.268|
00004e  f7fffffe          BL       __2printf
000052  2600              MOVS     r6,#0                 ;233
000054  bf00              NOP                            ;233
                  |L5.86|
000056  a949              ADD      r1,sp,#0x124          ;235
000058  a851              ADD      r0,sp,#0x144          ;235
00005a  f7fffffe          BL       f_readdir
00005e  4604              MOV      r4,r0                 ;235
000060  b914              CBNZ     r4,|L5.104|
000062  f89d012d          LDRB     r0,[sp,#0x12d]        ;236
000066  b900              CBNZ     r0,|L5.106|
                  |L5.104|
000068  e024              B        |L5.180|
                  |L5.106|
00006a  f89d012d          LDRB     r0,[sp,#0x12d]        ;241
00006e  282e              CMP      r0,#0x2e              ;241
000070  d100              BNE      |L5.116|
000072  e01d              B        |L5.176|
                  |L5.116|
000074  f89d012c          LDRB     r0,[sp,#0x12c]        ;247
000078  f0000010          AND      r0,r0,#0x10           ;247
00007c  b128              CBZ      r0,|L5.138|
00007e  f89d112c          LDRB     r1,[sp,#0x12c]        ;249
000082  a032              ADR      r0,|L5.332|
000084  f7fffffe          BL       __2printf
000088  e004              B        |L5.148|
                  |L5.138|
00008a  f89d112c          LDRB     r1,[sp,#0x12c]        ;253
00008e  a034              ADR      r0,|L5.352|
000090  f7fffffe          BL       __2printf
                  |L5.148|
000094  a037              ADR      r0,|L5.372|
000096  9949              LDR      r1,[sp,#0x124]        ;257
000098  f7fffffe          BL       __2printf
00009c  f20d112d          ADD      r1,sp,#0x12d          ;259
0000a0  a036              ADR      r0,|L5.380|
0000a2  f7fffffe          BL       __2printf
0000a6  a037              ADR      r0,|L5.388|
0000a8  994f              LDR      r1,[sp,#0x13c]        ;261
0000aa  f7fffffe          BL       __2printf
0000ae  bf00              NOP                            ;243
                  |L5.176|
0000b0  1c76              ADDS     r6,r6,#1              ;233
0000b2  e7d0              B        |L5.86|
                  |L5.180|
0000b4  bf00              NOP                            ;238
0000b6  2200              MOVS     r2,#0                 ;265
0000b8  4629              MOV      r1,r5                 ;265
0000ba  4610              MOV      r0,r2                 ;265
0000bc  f7fffffe          BL       f_mount
0000c0  bf00              NOP      
0000c2  e7ac              B        |L5.30|
;;;267    
                          ENDP

                  |L5.196|
                          DCD      ||fs||
                  |L5.200|
0000c8  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0000cc  bdbde696
0000d0  87e4bbb6
0000d4  e7b3bb  
0000d7  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%d)\r\n",0
0000db  a4b1e8b4
0000df  a5202825
0000e3  64290d0a
0000e7  00      
                  |L5.232|
0000e8  25732f00          DCB      "%s/",0
                  |L5.236|
0000ec  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
0000f0  bc80e6a0
0000f4  b9e79bae
0000f8  e5bd95  
0000fb  e5a4b1e8          DCB      229,164,177,232,180,165," (%d)\r\n",0
0000ff  b4a52028
000103  2564290d
000107  0a00    
000109  00                DCB      0
00010a  00                DCB      0
00010b  00                DCB      0
                  |L5.268|
00010c  e5b19ee6          DCB      229,177,158,230,128,167,"        |  ",230,150,135,228,187
000110  80a72020
000114  20202020
000118  20207c20
00011c  20e69687
000120  e4bb    
000122  b6e5a4a7          DCB      182,229,164,167,229,176,143," | ",231,159,173,230,150,135
000126  e5b08f20
00012a  7c20e79f
00012e  ade69687
000132  e4bbb6e5          DCB      228,187,182,229,144,141," | ",233,149,191,230,150,135,228
000136  908d207c
00013a  20e995bf
00013e  e69687e4
000142  bbb6e590          DCB      187,182,229,144,141,"\r\n",0
000146  8d0d0a00
00014a  00                DCB      0
00014b  00                DCB      0
                  |L5.332|
00014c  28307825          DCB      "(0x%02d)",231,155,174,229,189,149,"  ",0
000150  30326429
000154  e79baee5
000158  bd952020
00015c  00      
00015d  00                DCB      0
00015e  00                DCB      0
00015f  00                DCB      0
                  |L5.352|
000160  28307825          DCB      "(0x%02d)",230,150,135,228,187,182,"  ",0
000164  30326429
000168  e69687e4
00016c  bbb62020
000170  00      
000171  00                DCB      0
000172  00                DCB      0
000173  00                DCB      0
                  |L5.372|
000174  20253130          DCB      " %10d",0
000178  6400    
00017a  00                DCB      0
00017b  00                DCB      0
                  |L5.380|
00017c  20202573          DCB      "  %s |",0
000180  207c00  
000183  00                DCB      0
                  |L5.388|
000184  20202573          DCB      "  %s\r\n",0
000188  0d0a00  
00018b  00                DCB      0

                          AREA ||i.WriteFileTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  WriteFileTest PROC
;;;640    */
;;;641    static void WriteFileTest(void)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;642    {
000004  f5ad5d03          SUB      sp,sp,#0x20c0
;;;643    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;644    	FRESULT result;
;;;645    	FATFS fs;
;;;646    	FIL file;
;;;647    	DIR DirInf;
;;;648    	uint32_t bw;
;;;649    	uint32_t i,k;
;;;650    	uint32_t runtime1,runtime2,timelen;
;;;651    	uint8_t err = 0;
000008  f04f0a00          MOV      r10,#0
;;;652    	char TestFileName[13];
;;;653    	static uint8_t s_ucTestSn = 0;
;;;654    
;;;655    	for (i = 0; i < sizeof(g_TestBuf); i++)
00000c  2400              MOVS     r4,#0
00000e  e005              B        |L6.28|
                  |L6.16|
;;;656    	{
;;;657    		g_TestBuf[i] = (i / 512) + '0';
000010  2030              MOVS     r0,#0x30
000012  eb002054          ADD      r0,r0,r4,LSR #9
000016  496e              LDR      r1,|L6.464|
000018  5508              STRB     r0,[r1,r4]
00001a  1c64              ADDS     r4,r4,#1              ;655
                  |L6.28|
00001c  f5b45f80          CMP      r4,#0x1000            ;655
000020  d3f6              BCC      |L6.16|
;;;658    	}
;;;659    
;;;660      	/* 挂载文件系统 */
;;;661    	result = f_mount(&fs, fs_path[0], MOUNT_IMMEDIATELY);			/* Mount a logical drive */
000022  486c              LDR      r0,|L6.468|
000024  2200              MOVS     r2,#0
000026  6801              LDR      r1,[r0,#0]  ; fs_path
000028  f2410090          MOV      r0,#0x1090
00002c  4468              ADD      r0,r0,sp
00002e  f7fffffe          BL       f_mount
000032  4605              MOV      r5,r0
;;;662    	if (result != FR_OK)
000034  b11d              CBZ      r5,|L6.62|
;;;663    	{
;;;664    		printf("挂载文件系统失败 (%d)\r\n", result);
000036  4629              MOV      r1,r5
000038  a067              ADR      r0,|L6.472|
00003a  f7fffffe          BL       __2printf
                  |L6.62|
;;;665    	}
;;;666    
;;;667    	/* 打开根文件夹 */
;;;668    	result = f_opendir(&DirInf, "0:/"); /* 如果不带参数，则从当前目录开始 */
00003e  a16e              ADR      r1,|L6.504|
000040  a811              ADD      r0,sp,#0x44
000042  f7fffffe          BL       f_opendir
000046  4605              MOV      r5,r0
;;;669    	if (result != FR_OK)
000048  b13d              CBZ      r5,|L6.90|
;;;670    	{
;;;671    		printf("打开根目录失败 (%d)\r\n", result);
00004a  4629              MOV      r1,r5
00004c  a06b              ADR      r0,|L6.508|
00004e  f7fffffe          BL       __2printf
                  |L6.82|
;;;672    		return;
;;;673    	}
;;;674    
;;;675    	/* 打开文件 */
;;;676    	sprintf(TestFileName, "Speed%02d.txt", s_ucTestSn++);		/* 每写1次，序号递增 */
;;;677    	result = f_open(&file, TestFileName, FA_CREATE_ALWAYS | FA_WRITE);
;;;678    
;;;679    	/* 写一串数据 */
;;;680    	printf("开始写文件%s %dKB ...\r\n", TestFileName, TEST_FILE_LEN / 1024);
;;;681    	runtime1 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;682    	for (i = 0; i < TEST_FILE_LEN / BUF_SIZE; i++)
;;;683    	{
;;;684    		result = f_write(&file, g_TestBuf, sizeof(g_TestBuf), &bw);
;;;685    		if (result == FR_OK)
;;;686    		{
;;;687    			if (((i + 1) % 8) == 0)
;;;688    			{
;;;689    				printf(".");
;;;690    			}
;;;691    		}
;;;692    		else
;;;693    		{
;;;694    			err = 1;
;;;695    			printf("%s文件写失败\r\n", TestFileName);
;;;696    			break;
;;;697    		}
;;;698    	}
;;;699    	runtime2 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;700    
;;;701    	if (err == 0)
;;;702    	{
;;;703    		timelen = (runtime2 - runtime1);
;;;704    		printf("\r\n  写耗时 : %dms   平均写速度 : %dB/S (%dKB/S)\r\n",
;;;705    			timelen,
;;;706    			(TEST_FILE_LEN * 1000) / timelen,
;;;707    			((TEST_FILE_LEN / 1024) * 1000) / timelen);
;;;708    	}
;;;709    
;;;710    	f_close(&file);		/* 关闭文件*/
;;;711    
;;;712    
;;;713    	/* 开始读文件测试 */
;;;714    	result = f_open(&file, TestFileName, FA_OPEN_EXISTING | FA_READ);
;;;715    	if (result !=  FR_OK)
;;;716    	{
;;;717    		printf("没有找到文件: %s\r\n", TestFileName);
;;;718    		return;
;;;719    	}
;;;720    
;;;721    	printf("开始读文件 %dKB ...\r\n", TEST_FILE_LEN / 1024);
;;;722    	runtime1 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;723    	for (i = 0; i < TEST_FILE_LEN / BUF_SIZE; i++)
;;;724    	{
;;;725    		result = f_read(&file, g_TestBuf, sizeof(g_TestBuf), &bw);
;;;726    		if (result == FR_OK)
;;;727    		{
;;;728    			if (((i + 1) % 8) == 0)
;;;729    			{
;;;730    				printf(".");
;;;731    			}
;;;732    
;;;733    			/* 比较写入的数据是否正确，此语句会导致读卡速度结果降低到 3.5MBytes/S */
;;;734    			for (k = 0; k < sizeof(g_TestBuf); k++)
;;;735    			{
;;;736    				if (g_TestBuf[k] != (k / 512) + '0')
;;;737    				{
;;;738    				  	err = 1;
;;;739    					printf("Speed1.txt 文件读成功，但是数据出错\r\n");
;;;740    					break;
;;;741    				}
;;;742    			}
;;;743    			if (err == 1)
;;;744    			{
;;;745    				break;
;;;746    			}
;;;747    		}
;;;748    		else
;;;749    		{
;;;750    			err = 1;
;;;751    			printf("Speed1.txt 文件读失败\r\n");
;;;752    			break;
;;;753    		}
;;;754    	}
;;;755    	runtime2 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;756    
;;;757    	if (err == 0)
;;;758    	{
;;;759    		timelen = (runtime2 - runtime1);
;;;760    		printf("\r\n  读耗时 : %dms   平均读速度 : %dB/S (%dKB/S)\r\n", timelen,
;;;761    			(TEST_FILE_LEN * 1000) / timelen, ((TEST_FILE_LEN / 1024) * 1000) / timelen);
;;;762    	}
;;;763    
;;;764    	/* 关闭文件*/
;;;765    	f_close(&file);
;;;766    
;;;767    	/* 卸载文件系统 */
;;;768    	 f_mount(NULL, fs_path[0], MOUNT_IMMEDIATELY);
;;;769    }
000052  f50d5d03          ADD      sp,sp,#0x20c0
000056  e8bd9ff0          POP      {r4-r12,pc}
                  |L6.90|
00005a  4870              LDR      r0,|L6.540|
00005c  7802              LDRB     r2,[r0,#0]            ;676  ; s_ucTestSn
00005e  7800              LDRB     r0,[r0,#0]            ;676  ; s_ucTestSn
000060  1c40              ADDS     r0,r0,#1              ;676
000062  4b6e              LDR      r3,|L6.540|
000064  7018              STRB     r0,[r3,#0]            ;676
000066  a16e              ADR      r1,|L6.544|
000068  a80c              ADD      r0,sp,#0x30           ;676
00006a  f7fffffe          BL       __2sprintf
00006e  220a              MOVS     r2,#0xa               ;677
000070  a90c              ADD      r1,sp,#0x30           ;677
000072  a81a              ADD      r0,sp,#0x68           ;677
000074  f7fffffe          BL       f_open
000078  4605              MOV      r5,r0                 ;677
00007a  f44f6200          MOV      r2,#0x800             ;680
00007e  a90c              ADD      r1,sp,#0x30           ;680
000080  a06b              ADR      r0,|L6.560|
000082  f7fffffe          BL       __2printf
000086  f7fffffe          BL       bsp_GetRunTime
00008a  4680              MOV      r8,r0                 ;681
00008c  2400              MOVS     r4,#0                 ;682
00008e  e018              B        |L6.194|
                  |L6.144|
000090  ab10              ADD      r3,sp,#0x40           ;684
000092  f44f5280          MOV      r2,#0x1000            ;684
000096  494e              LDR      r1,|L6.464|
000098  a81a              ADD      r0,sp,#0x68           ;684
00009a  f7fffffe          BL       f_write
00009e  4605              MOV      r5,r0                 ;684
0000a0  b93d              CBNZ     r5,|L6.178|
0000a2  1c60              ADDS     r0,r4,#1              ;687
0000a4  f0000007          AND      r0,r0,#7              ;687
0000a8  b950              CBNZ     r0,|L6.192|
0000aa  a069              ADR      r0,|L6.592|
0000ac  f7fffffe          BL       __2printf
0000b0  e006              B        |L6.192|
                  |L6.178|
0000b2  f04f0a01          MOV      r10,#1                ;694
0000b6  a90c              ADD      r1,sp,#0x30           ;695
0000b8  a066              ADR      r0,|L6.596|
0000ba  f7fffffe          BL       __2printf
0000be  e003              B        |L6.200|
                  |L6.192|
0000c0  1c64              ADDS     r4,r4,#1              ;682
                  |L6.194|
0000c2  f5b47f00          CMP      r4,#0x200             ;682
0000c6  d3e3              BCC      |L6.144|
                  |L6.200|
0000c8  bf00              NOP                            ;696
0000ca  f7fffffe          BL       bsp_GetRunTime
0000ce  4681              MOV      r9,r0                 ;699
0000d0  f1ba0f00          CMP      r10,#0                ;701
0000d4  d10f              BNE      |L6.246|
0000d6  eba90608          SUB      r6,r9,r8              ;703
0000da  f44f10fa          MOV      r0,#0x1f4000          ;704
0000de  fbb0fbf6          UDIV     r11,r0,r6             ;704
0000e2  0280              LSLS     r0,r0,#10             ;704
0000e4  fbb0f1f6          UDIV     r1,r0,r6              ;704
0000e8  465b              MOV      r3,r11                ;704
0000ea  460a              MOV      r2,r1                 ;704
0000ec  910b              STR      r1,[sp,#0x2c]         ;704
0000ee  4631              MOV      r1,r6                 ;704
0000f0  a05e              ADR      r0,|L6.620|
0000f2  f7fffffe          BL       __2printf
                  |L6.246|
0000f6  a81a              ADD      r0,sp,#0x68           ;710
0000f8  f7fffffe          BL       f_close
0000fc  2201              MOVS     r2,#1                 ;714
0000fe  a90c              ADD      r1,sp,#0x30           ;714
000100  a81a              ADD      r0,sp,#0x68           ;714
000102  f7fffffe          BL       f_open
000106  4605              MOV      r5,r0                 ;714
000108  b125              CBZ      r5,|L6.276|
00010a  a90c              ADD      r1,sp,#0x30           ;717
00010c  a066              ADR      r0,|L6.680|
00010e  f7fffffe          BL       __2printf
000112  e79e              B        |L6.82|
                  |L6.276|
000114  f44f6100          MOV      r1,#0x800             ;721
000118  a06a              ADR      r0,|L6.708|
00011a  f7fffffe          BL       __2printf
00011e  f7fffffe          BL       bsp_GetRunTime
000122  4680              MOV      r8,r0                 ;722
000124  2400              MOVS     r4,#0                 ;723
000126  e02e              B        |L6.390|
                  |L6.296|
000128  ab10              ADD      r3,sp,#0x40           ;725
00012a  f44f5280          MOV      r2,#0x1000            ;725
00012e  4928              LDR      r1,|L6.464|
000130  a81a              ADD      r0,sp,#0x68           ;725
000132  f7fffffe          BL       f_read
000136  4605              MOV      r5,r0                 ;725
000138  b9f5              CBNZ     r5,|L6.376|
00013a  1c60              ADDS     r0,r4,#1              ;728
00013c  f0000007          AND      r0,r0,#7              ;728
000140  b910              CBNZ     r0,|L6.328|
000142  a043              ADR      r0,|L6.592|
000144  f7fffffe          BL       __2printf
                  |L6.328|
000148  2700              MOVS     r7,#0                 ;734
00014a  e00d              B        |L6.360|
                  |L6.332|
00014c  4820              LDR      r0,|L6.464|
00014e  5dc0              LDRB     r0,[r0,r7]            ;736
000150  2130              MOVS     r1,#0x30              ;736
000152  eb012157          ADD      r1,r1,r7,LSR #9       ;736
000156  4288              CMP      r0,r1                 ;736
000158  d005              BEQ      |L6.358|
00015a  f04f0a01          MOV      r10,#1                ;738
00015e  a060              ADR      r0,|L6.736|
000160  f7fffffe          BL       __2printf
000164  e003              B        |L6.366|
                  |L6.358|
000166  1c7f              ADDS     r7,r7,#1              ;734
                  |L6.360|
000168  f5b75f80          CMP      r7,#0x1000            ;734
00016c  d3ee              BCC      |L6.332|
                  |L6.366|
00016e  bf00              NOP                            ;740
000170  f1ba0f01          CMP      r10,#1                ;743
000174  d106              BNE      |L6.388|
000176  e009              B        |L6.396|
                  |L6.376|
000178  f04f0a01          MOV      r10,#1                ;750
00017c  a065              ADR      r0,|L6.788|
00017e  f7fffffe          BL       __2printf
000182  e003              B        |L6.396|
                  |L6.388|
000184  1c64              ADDS     r4,r4,#1              ;723
                  |L6.390|
000186  f5b47f00          CMP      r4,#0x200             ;723
00018a  d3cd              BCC      |L6.296|
                  |L6.396|
00018c  bf00              NOP                            ;745
00018e  f7fffffe          BL       bsp_GetRunTime
000192  4681              MOV      r9,r0                 ;755
000194  f1ba0f00          CMP      r10,#0                ;757
000198  d10f              BNE      |L6.442|
00019a  eba90608          SUB      r6,r9,r8              ;759
00019e  f44f10fa          MOV      r0,#0x1f4000          ;760
0001a2  fbb0fbf6          UDIV     r11,r0,r6             ;760
0001a6  0280              LSLS     r0,r0,#10             ;760
0001a8  fbb0f1f6          UDIV     r1,r0,r6              ;760
0001ac  465b              MOV      r3,r11                ;760
0001ae  460a              MOV      r2,r1                 ;760
0001b0  910b              STR      r1,[sp,#0x2c]         ;760
0001b2  4631              MOV      r1,r6                 ;760
0001b4  a05f              ADR      r0,|L6.820|
0001b6  f7fffffe          BL       __2printf
                  |L6.442|
0001ba  a81a              ADD      r0,sp,#0x68           ;765
0001bc  f7fffffe          BL       f_close
0001c0  4804              LDR      r0,|L6.468|
0001c2  2200              MOVS     r2,#0                 ;768
0001c4  6801              LDR      r1,[r0,#0]            ;768  ; fs_path
0001c6  4610              MOV      r0,r2                 ;768
0001c8  f7fffffe          BL       f_mount
0001cc  bf00              NOP      
0001ce  e740              B        |L6.82|
;;;770    #endif
                          ENDP

                  |L6.464|
                          DCD      g_TestBuf
                  |L6.468|
                          DCD      fs_path
                  |L6.472|
0001d8  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0001dc  bdbde696
0001e0  87e4bbb6
0001e4  e7b3bb  
0001e7  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%d)\r\n",0
0001eb  a4b1e8b4
0001ef  a5202825
0001f3  64290d0a
0001f7  00      
                  |L6.504|
0001f8  303a2f00          DCB      "0:/",0
                  |L6.508|
0001fc  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
000200  bc80e6a0
000204  b9e79bae
000208  e5bd95  
00020b  e5a4b1e8          DCB      229,164,177,232,180,165," (%d)\r\n",0
00020f  b4a52028
000213  2564290d
000217  0a00    
000219  00                DCB      0
00021a  00                DCB      0
00021b  00                DCB      0
                  |L6.540|
                          DCD      s_ucTestSn
                  |L6.544|
000220  53706565          DCB      "Speed%02d.txt",0
000224  64253032
000228  642e7478
00022c  7400    
00022e  00                DCB      0
00022f  00                DCB      0
                  |L6.560|
000230  e5bc80e5          DCB      229,188,128,229,167,139,229,134,153,230,150,135,228,187,182
000234  a78be586
000238  99e69687
00023c  e4bbb6  
00023f  25732025          DCB      "%s %dKB ...\r\n",0
000243  644b4220
000247  2e2e2e0d
00024b  0a00    
00024d  00                DCB      0
00024e  00                DCB      0
00024f  00                DCB      0
                  |L6.592|
000250  2e00              DCB      ".",0
000252  00                DCB      0
000253  00                DCB      0
                  |L6.596|
000254  2573e696          DCB      "%s",230,150,135,228,187,182,229,134,153,229,164,177,232
000258  87e4bbb6
00025c  e58699e5
000260  a4b1e8  
000263  b4a55c72          DCB      180,165,"\\r\n",0
000267  0a00    
000269  00                DCB      0
00026a  00                DCB      0
00026b  00                DCB      0
                  |L6.620|
00026c  0d0a2020          DCB      "\r\n  ",229,134,153,232,128,151,230,151,182," : %dms   "
000270  e58699e8
000274  8097e697
000278  b6203a20
00027c  25646d73
000280  202020  
000283  e5b9b3e5          DCB      229,185,179,229,157,135,229,134,153,233,128,159,229,186,166
000287  9d87e586
00028b  99e9809f
00028f  e5baa6  
000292  203a2025          DCB      " : %dB/S (%dKB/S)\r\n",0
000296  64422f53
00029a  20282564
00029e  4b422f53
0002a2  290d0a00
0002a6  00                DCB      0
0002a7  00                DCB      0
                  |L6.680|
0002a8  e6b2a1e6          DCB      230,178,161,230,156,137,230,137,190,229,136,176,230,150,135
0002ac  9c89e689
0002b0  bee588b0
0002b4  e69687  
0002b7  e4bbb63a          DCB      228,187,182,": %s\r\n",0
0002bb  2025730d
0002bf  0a00    
0002c1  00                DCB      0
0002c2  00                DCB      0
0002c3  00                DCB      0
                  |L6.708|
0002c4  e5bc80e5          DCB      229,188,128,229,167,139,232,175,187,230,150,135,228,187,182
0002c8  a78be8af
0002cc  bbe69687
0002d0  e4bbb6  
0002d3  2025644b          DCB      " %dKB ...\r\n",0
0002d7  42202e2e
0002db  2e0d0a00
0002df  00                DCB      0
                  |L6.736|
0002e0  53706565          DCB      "Speed1.txt ",230,150,135,228,187,182,232,175,187,230,136
0002e4  64312e74
0002e8  787420e6
0002ec  9687e4bb
0002f0  b6e8afbb
0002f4  e688    
0002f6  90e58a9f          DCB      144,229,138,159,239,188,140,228,189,134,230,152,175,230,149
0002fa  efbc8ce4
0002fe  bd86e698
000302  afe695  
000305  b0e68dae          DCB      176,230,141,174,229,135,186,233,148,153,"\r\n",0
000309  e587bae9
00030d  94990d0a
000311  00      
000312  00                DCB      0
000313  00                DCB      0
                  |L6.788|
000314  53706565          DCB      "Speed1.txt ",230,150,135,228,187,182,232,175,187,229,164
000318  64312e74
00031c  787420e6
000320  9687e4bb
000324  b6e8afbb
000328  e5a4    
00032a  b1e8b4a5          DCB      177,232,180,165,"\\r\n",0
00032e  5c720a00
000332  00                DCB      0
000333  00                DCB      0
                  |L6.820|
000334  0d0a2020          DCB      "\r\n  ",232,175,187,232,128,151,230,151,182," : %dms   "
000338  e8afbbe8
00033c  8097e697
000340  b6203a20
000344  25646d73
000348  202020  
00034b  e5b9b3e5          DCB      229,185,179,229,157,135,232,175,187,233,128,159,229,186,166
00034f  9d87e8af
000353  bbe9809f
000357  e5baa6  
00035a  203a2025          DCB      " : %dB/S (%dKB/S)\r\n",0
00035e  64422f53
000362  20282564
000366  4b422f53
00036a  290d0a00
00036e  00                DCB      0
00036f  00                DCB      0

                          AREA ||i.fatfs_task||, CODE, READONLY, ALIGN=2

                  fatfs_task PROC
;;;54     #define enter  13
;;;55     void fatfs_task(void)
000000  b508              PUSH     {r3,lr}
;;;56     {
;;;57      
;;;58         //extern fsm_rt_t no_load_current_calibration(void);
;;;59     	uint8_t cmd;
;;;60         //uint8_t ucVolume = 0;
;;;61         
;;;62         if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
000002  4669              MOV      r1,sp
000004  2000              MOVS     r0,#0
000006  f7fffffe          BL       comGetChar
00000a  2800              CMP      r0,#0
00000c  d06b              BEQ      |L7.230|
;;;63         {
;;;64             //printf("\r\n");
;;;65             //DemoSpiFlash(cmd);
;;;66           
;;;67             switch (cmd)
00000e  f89d0000          LDRB     r0,[sp,#0]
000012  2835              CMP      r0,#0x35
000014  d038              BEQ      |L7.136|
000016  dc0c              BGT      |L7.50|
000018  2832              CMP      r0,#0x32
00001a  d020              BEQ      |L7.94|
00001c  dc04              BGT      |L7.40|
00001e  280d              CMP      r0,#0xd
000020  d014              BEQ      |L7.76|
000022  2830              CMP      r0,#0x30
000024  d15b              BNE      |L7.222|
000026  e019              B        |L7.92|
                  |L7.40|
000028  2833              CMP      r0,#0x33
00002a  d01d              BEQ      |L7.104|
00002c  2834              CMP      r0,#0x34
00002e  d156              BNE      |L7.222|
000030  e022              B        |L7.120|
                  |L7.50|
000032  2838              CMP      r0,#0x38
000034  d03c              BEQ      |L7.176|
000036  dc04              BGT      |L7.66|
000038  2836              CMP      r0,#0x36
00003a  d02d              BEQ      |L7.152|
00003c  2837              CMP      r0,#0x37
00003e  d14e              BNE      |L7.222|
000040  e030              B        |L7.164|
                  |L7.66|
000042  2856              CMP      r0,#0x56
000044  d03a              BEQ      |L7.188|
000046  2876              CMP      r0,#0x76
000048  d149              BNE      |L7.222|
00004a  e038              B        |L7.190|
                  |L7.76|
;;;68             {
;;;69             case enter:
;;;70                 printf("\r\n[FT 测试]\r\n");
00004c  a026              ADR      r0,|L7.232|
00004e  f7fffffe          BL       __2printf
;;;71      
;;;72                 #if SD_TEST
;;;73                 ViewRootDir(FS_SD_STR);			/* 显示SD卡根目录下的文件名 */
;;;74                 #else
;;;75                 ViewRootDir(ucVolume);		/* 显示U盘根目录下的文件名 */
000052  4829              LDR      r0,|L7.248|
000054  6800              LDR      r0,[r0,#0]  ; ucVolume
000056  f7fffffe          BL       ViewRootDir
;;;76                 #endif
;;;77     
;;;78                 break;
00005a  e043              B        |L7.228|
                  |L7.92|
;;;79             case '0':
;;;80                 {
;;;81     //                fsm_rt_t ret;
;;;82     //                do
;;;83     //                {
;;;84     //                    ret = no_load_current_calibration();
;;;85     //                }while(ret == fsm_rt_on_going);
;;;86                 }       
;;;87                 break;
00005c  e042              B        |L7.228|
                  |L7.94|
;;;88             case '2':
;;;89                 #if SD_TEST
;;;90                 printf("【2 - CreateNewFile】\r\n");
;;;91                 CreateNewFile(FS_SD_STR);	/* 创建一个新文件,写入一个字符串 */
;;;92                 #else
;;;93                 CreateNewFile(ucVolume);	/* 创建一个新文件,写入一个字符串 */
00005e  4826              LDR      r0,|L7.248|
000060  6800              LDR      r0,[r0,#0]  ; ucVolume
000062  f7fffffe          BL       CreateNewFile
;;;94                 #endif
;;;95                 break;
000066  e03d              B        |L7.228|
                  |L7.104|
;;;96     
;;;97             case '3':
;;;98                 printf("【3 - ReadFileData】\r\n");
000068  a024              ADR      r0,|L7.252|
00006a  f7fffffe          BL       __2printf
;;;99                 #if SD_TEST
;;;100                ReadFileData(FS_SD_STR);		/* 读取根目录下plxc.txt的内容 */
;;;101                #else
;;;102                ReadFileData(ucVolume);		/* 读取根目录下plxc.txt的内容 */
00006e  4822              LDR      r0,|L7.248|
000070  6800              LDR      r0,[r0,#0]  ; ucVolume
000072  f7fffffe          BL       ReadFileData
;;;103                #endif
;;;104                break;
000076  e035              B        |L7.228|
                  |L7.120|
;;;105    
;;;106            case '4':
;;;107                printf("【4 - CreateDir】\r\n");
000078  a027              ADR      r0,|L7.280|
00007a  f7fffffe          BL       __2printf
;;;108                #if SD_TEST
;;;109                CreateDir(FS_SD_STR);		/* 创建目录 */
;;;110                #else
;;;111                CreateDir(ucVolume);		/* 创建目录 */
00007e  481e              LDR      r0,|L7.248|
000080  6800              LDR      r0,[r0,#0]  ; ucVolume
000082  f7fffffe          BL       CreateDir
;;;112                #endif
;;;113                 
;;;114                break;
000086  e02d              B        |L7.228|
                  |L7.136|
;;;115    
;;;116            case '5':
;;;117                printf("【5 - DeleteDirFile】\r\n");
000088  a029              ADR      r0,|L7.304|
00008a  f7fffffe          BL       __2printf
;;;118                #if SD_TEST
;;;119                DeleteDirFile(FS_SD_STR);	/* 删除目录和文件 */
;;;120                #else
;;;121                DeleteDirFile(ucVolume);	/* 删除目录和文件 */
00008e  481a              LDR      r0,|L7.248|
000090  6800              LDR      r0,[r0,#0]  ; ucVolume
000092  f7fffffe          BL       DeleteDirFile
;;;122                #endif
;;;123                 
;;;124                break;
000096  e025              B        |L7.228|
                  |L7.152|
;;;125    
;;;126            case '6':
;;;127                printf("【6 - TestSpeed】\r\n");
000098  a02c              ADR      r0,|L7.332|
00009a  f7fffffe          BL       __2printf
;;;128                
;;;129                WriteFileTest();	/* 速度测试 */
00009e  f7fffffe          BL       WriteFileTest
;;;130                break;
0000a2  e01f              B        |L7.228|
                  |L7.164|
;;;131            
;;;132            case '7':	/* 移除U盘, 软件模拟U盘拔除 */
;;;133                printf("【7 - 移除U盘】\r\n");
0000a4  a02f              ADR      r0,|L7.356|
0000a6  f7fffffe          BL       __2printf
;;;134                usbd_CloseMassStorage();
0000aa  f7fffffe          BL       usbd_CloseMassStorage
;;;135                break;
0000ae  e019              B        |L7.228|
                  |L7.176|
;;;136    
;;;137            case '8':	/* 使能U盘，软件模拟U盘插入 */
;;;138                printf("【8 - 使能U盘】\r\n");
0000b0  a032              ADR      r0,|L7.380|
0000b2  f7fffffe          BL       __2printf
;;;139                usbd_OpenMassStorage();
0000b6  f7fffffe          BL       usbd_OpenMassStorage
;;;140                break;
0000ba  e013              B        |L7.228|
                  |L7.188|
;;;141                    
;;;142    //        case '0':
;;;143    //            printf("Start Format(Low Level) NAND Flash......\r\n");
;;;144    //            //NAND_Format();
;;;145    //           // printf("NAND Flash Format Ok\r\n");
;;;146    //            break;
;;;147            
;;;148            case 'V':		/* 切换当前盘符 */
;;;149            case 'v':
0000bc  bf00              NOP      
                  |L7.190|
;;;150                printf("【Vv - 切换盘符】\r\n");
0000be  a035              ADR      r0,|L7.404|
0000c0  f7fffffe          BL       __2printf
;;;151                if (ucVolume == FS_SD_STR)
0000c4  480c              LDR      r0,|L7.248|
0000c6  6800              LDR      r0,[r0,#0]  ; ucVolume
0000c8  a139              ADR      r1,|L7.432|
0000ca  4288              CMP      r0,r1
0000cc  d103              BNE      |L7.214|
;;;152                {
;;;153                    ucVolume = FS_SPI_FLASH_STR;
0000ce  a039              ADR      r0,|L7.436|
0000d0  4909              LDR      r1,|L7.248|
0000d2  6008              STR      r0,[r1,#0]  ; ucVolume
0000d4  e002              B        |L7.220|
                  |L7.214|
;;;154                }
;;;155                else
;;;156                {
;;;157                    ucVolume = FS_SD_STR;
0000d6  a036              ADR      r0,|L7.432|
0000d8  4907              LDR      r1,|L7.248|
0000da  6008              STR      r0,[r1,#0]  ; ucVolume
                  |L7.220|
;;;158                }
;;;159                 
;;;160                break;
0000dc  e002              B        |L7.228|
                  |L7.222|
;;;161    
;;;162            default:
;;;163                DispMenu();
0000de  f7fffffe          BL       DispMenu
;;;164                break;
0000e2  bf00              NOP      
                  |L7.228|
0000e4  bf00              NOP                            ;78
                  |L7.230|
;;;165            }
;;;166            
;;;167     
;;;168        }
;;;169    
;;;170    }
0000e6  bd08              POP      {r3,pc}
;;;171    
                          ENDP

                  |L7.232|
0000e8  0d0a5b46          DCB      "\r\n[FT ",230,181,139,232,175,149,"]\r\n",0
0000ec  5420e6b5
0000f0  8be8af95
0000f4  5d0d0a00
                  |L7.248|
                          DCD      ucVolume
                  |L7.252|
0000fc  e3809033          DCB      227,128,144,"3 - ReadFileData",227,128,145,"\\r\n",0
000100  202d2052
000104  65616446
000108  696c6544
00010c  617461e3
000110  80915c72
000114  0a00    
000116  00                DCB      0
000117  00                DCB      0
                  |L7.280|
000118  e3809034          DCB      227,128,144,"4 - CreateDir",227,128,145,"\\r\n",0
00011c  202d2043
000120  72656174
000124  65446972
000128  e380915c
00012c  720a00  
00012f  00                DCB      0
                  |L7.304|
000130  e3809035          DCB      227,128,144,"5 - DeleteDirFile",227,128,145,"\\r\n",0
000134  202d2044
000138  656c6574
00013c  65446972
000140  46696c65
000144  e380915c
000148  720a00  
00014b  00                DCB      0
                  |L7.332|
00014c  e3809036          DCB      227,128,144,"6 - TestSpeed",227,128,145,"\\r\n",0
000150  202d2054
000154  65737453
000158  70656564
00015c  e380915c
000160  720a00  
000163  00                DCB      0
                  |L7.356|
000164  e3809037          DCB      227,128,144,"7 - ",231,167,187,233,153,164,"U",231,155,152
000168  202d20e7
00016c  a7bbe999
000170  a455e79b
000174  98      
000175  e380915c          DCB      227,128,145,"\\r\n",0
000179  720a00  
                  |L7.380|
00017c  e3809038          DCB      227,128,144,"8 - ",228,189,191,232,131,189,"U",231,155,152
000180  202d20e4
000184  bdbfe883
000188  bd55e79b
00018c  98      
00018d  e380915c          DCB      227,128,145,"\\r\n",0
000191  720a00  
                  |L7.404|
000194  e3809056          DCB      227,128,144,"Vv - ",229,136,135,230,141,162,231,155,152,231
000198  76202d20
00019c  e58887e6
0001a0  8da2e79b
0001a4  98e7    
0001a6  aca6e380          DCB      172,166,227,128,145,"\\r\n",0
0001aa  915c720a
0001ae  00      
0001af  00                DCB      0
                  |L7.432|
0001b0  303a00            DCB      "0:",0
0001b3  00                DCB      0
                  |L7.436|
0001b4  313a00            DCB      "1:",0
0001b7  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  g_TestBuf
                          %        4096
                  ||fs||
                          %        4144

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  303a00            DCB      "0:",0
000003  00                DCB      0
000004  313a00            DCB      "1:",0
000007  00                DCB      0
000008  e588a0e9          DCB      229,136,160,233,153,164,"Dir1",229,164,177,232,180,165,"("
00000c  99a44469
000010  7231e5a4
000014  b1e8b4a5
000018  28      
000019  e99499e8          DCB      233,148,153,232,175,175,228,187,163,231,160,129," = %d) "
00001d  afafe4bb
000021  a3e7a081
000025  203d2025
000029  642920  
00002c  e69687e4          DCB      230,150,135,228,187,182,229,143,170,232,175,187,230,136,150
000030  bbb6e58f
000034  aae8afbb
000038  e68896  
00003b  e79baee5          DCB      231,155,174,229,189,149,233,157,158,231,169,186,"\\r\n",0
00003f  bd95e99d
000043  9ee7a9ba
000047  5c720a00
00004b  00                DCB      0
00004c  e588a0e9          DCB      229,136,160,233,153,164,229,173,144,231,155,174,229,189,149
000050  99a4e5ad
000054  90e79bae
000058  e5bd95  
00005b  2f446972          DCB      "/Dir1/Dir1_1",229,164,177,232,180,165,"(",233,148,153,232
00005f  312f4469
000063  72315f31
000067  e5a4b1e8
00006b  b4a528e9
00006f  9499e8  
000072  afafe4bb          DCB      175,175,228,187,163,231,160,129," = %d) ",230,150,135,228
000076  a3e7a081
00007a  203d2025
00007e  642920e6
000082  9687e4  
000085  bbb6e58f          DCB      187,182,229,143,170,232,175,187,230,136,150,231,155,174,229
000089  aae8afbb
00008d  e68896e7
000091  9baee5  
000094  bd95e99d          DCB      189,149,233,157,158,231,169,186,"\\r\n",0
000098  9ee7a9ba
00009c  5c720a00
0000a0  e588a0e9          DCB      229,136,160,233,153,164,"Dir2 ",229,164,177,232,180,165,"("
0000a4  99a44469
0000a8  723220e5
0000ac  a4b1e8b4
0000b0  a528    
0000b2  e99499e8          DCB      233,148,153,232,175,175,228,187,163,231,160,129," = %d) "
0000b6  afafe4bb
0000ba  a3e7a081
0000be  203d2025
0000c2  642920  
0000c5  e69687e4          DCB      230,150,135,228,187,182,229,143,170,232,175,187,230,136,150
0000c9  bbb6e58f
0000cd  aae8afbb
0000d1  e68896  
0000d4  e79baee5          DCB      231,155,174,229,189,149,233,157,158,231,169,186,"\\r\n",0
0000d8  bd95e99d
0000dc  9ee7a9ba
0000e0  5c720a00
0000e4  e588a0e9          DCB      229,136,160,233,153,164,"plxc.txt",229,164,177,232,180,165
0000e8  99a4706c
0000ec  78632e74
0000f0  7874e5a4
0000f4  b1e8b4a5
0000f8  28e99499          DCB      "(",233,148,153,232,175,175,228,187,163,231,160,129," = "
0000fc  e8afafe4
000100  bba3e7a0
000104  81203d20
000108  25642920          DCB      "%d) ",230,150,135,228,187,182,229,143,170,232,175,187,230
00010c  e69687e4
000110  bbb6e58f
000114  aae8afbb
000118  e6      
000119  8896e79b          DCB      136,150,231,155,174,229,189,149,233,157,158,231,169,186,"\\"
00011d  aee5bd95
000121  e99d9ee7
000125  a9ba5c  
000128  720a00            DCB      "r\n",0
00012b  00                DCB      0
00012c  e588a0e9          DCB      229,136,160,233,153,164,"%s",230,150,135,228,187,182,229
000130  99a42573
000134  e69687e4
000138  bbb6e5  
00013b  a4b1e8b4          DCB      164,177,232,180,165,"(",233,148,153,232,175,175,228,187,163
00013f  a528e994
000143  99e8afaf
000147  e4bba3  
00014a  e7a08120          DCB      231,160,129," = %d) ",230,150,135,228,187,182,229,143,170
00014e  3d202564
000152  2920e696
000156  87e4bbb6
00015a  e58faa  
00015d  e8afbbe6          DCB      232,175,187,230,136,150,231,155,174,229,189,149,233,157,158
000161  8896e79b
000165  aee5bd95
000169  e99d9e  
00016c  e7a9ba5c          DCB      231,169,186,"\\r\n",0
000170  720a00  

                          AREA ||.data||, DATA, ALIGN=2

                  fs_path
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x4
                  ucVolume
                          DCD      ||.conststring||
                  s_ucTestSn
00000c  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\demo_sdio_fatfs.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_demo_sdio_fatfs_c_fs_path____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_demo_sdio_fatfs_c_fs_path____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_demo_sdio_fatfs_c_fs_path____REVSH|
#line 144
|__asm___17_demo_sdio_fatfs_c_fs_path____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
