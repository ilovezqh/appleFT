; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\io_mode.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\io_mode.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\berry_ft -I..\..\User\ft_support -I..\..\User\test_common -I..\..\User\emenu -I..\..\User\kiwi_ft -I..\..\User\kiwi_ft\spv40 -I..\..\User\kiwi_ft\spv40\peripheral -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\kiwi_ft -I..\..\User\MultiButton-1.1.0 -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\io_mode.crf ..\..\User\ft_support\io_mode.c]
                          THUMB

                          AREA ||i.IO_Config||, CODE, READONLY, ALIGN=2

                  IO_Config PROC
;;;4      
;;;5      void IO_Config(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, IO_ModeTypeDef mode)
000000  b57c              PUSH     {r2-r6,lr}
;;;6      {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
000006  4615              MOV      r5,r2
;;;7          GPIO_InitTypeDef GPIO_InitStructure;
;;;8      
;;;9          // 使能GPIO时钟
;;;10         if (GPIOx == GPIOA) {
000008  4845              LDR      r0,|L1.288|
00000a  4284              CMP      r4,r0
00000c  d104              BNE      |L1.24|
;;;11             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
00000e  2101              MOVS     r1,#1
000010  4608              MOV      r0,r1
000012  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000016  e03e              B        |L1.150|
                  |L1.24|
;;;12         } else if (GPIOx == GPIOB) {
000018  4842              LDR      r0,|L1.292|
00001a  4284              CMP      r4,r0
00001c  d104              BNE      |L1.40|
;;;13             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOB, ENABLE);
00001e  2101              MOVS     r1,#1
000020  2002              MOVS     r0,#2
000022  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000026  e036              B        |L1.150|
                  |L1.40|
;;;14         } else if (GPIOx == GPIOC) {
000028  483f              LDR      r0,|L1.296|
00002a  4284              CMP      r4,r0
00002c  d104              BNE      |L1.56|
;;;15             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOC, ENABLE);
00002e  2101              MOVS     r1,#1
000030  2004              MOVS     r0,#4
000032  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000036  e02e              B        |L1.150|
                  |L1.56|
;;;16         } else if (GPIOx == GPIOD) {
000038  483c              LDR      r0,|L1.300|
00003a  4284              CMP      r4,r0
00003c  d104              BNE      |L1.72|
;;;17             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
00003e  2101              MOVS     r1,#1
000040  2008              MOVS     r0,#8
000042  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000046  e026              B        |L1.150|
                  |L1.72|
;;;18         } else if (GPIOx == GPIOE) {
000048  4839              LDR      r0,|L1.304|
00004a  4284              CMP      r4,r0
00004c  d104              BNE      |L1.88|
;;;19             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOE, ENABLE);
00004e  2101              MOVS     r1,#1
000050  2010              MOVS     r0,#0x10
000052  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000056  e01e              B        |L1.150|
                  |L1.88|
;;;20         } else if (GPIOx == GPIOF) {
000058  4836              LDR      r0,|L1.308|
00005a  4284              CMP      r4,r0
00005c  d104              BNE      |L1.104|
;;;21             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOF, ENABLE);
00005e  2101              MOVS     r1,#1
000060  2020              MOVS     r0,#0x20
000062  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000066  e016              B        |L1.150|
                  |L1.104|
;;;22         } else if (GPIOx == GPIOG) {
000068  4833              LDR      r0,|L1.312|
00006a  4284              CMP      r4,r0
00006c  d104              BNE      |L1.120|
;;;23             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOG, ENABLE);
00006e  2101              MOVS     r1,#1
000070  2040              MOVS     r0,#0x40
000072  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000076  e00e              B        |L1.150|
                  |L1.120|
;;;24         } else if (GPIOx == GPIOH) {
000078  4830              LDR      r0,|L1.316|
00007a  4284              CMP      r4,r0
00007c  d104              BNE      |L1.136|
;;;25             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOH, ENABLE);
00007e  2101              MOVS     r1,#1
000080  2080              MOVS     r0,#0x80
000082  f7fffffe          BL       RCC_AHB1PeriphClockCmd
000086  e006              B        |L1.150|
                  |L1.136|
;;;26         } else if (GPIOx == GPIOI) {
000088  482d              LDR      r0,|L1.320|
00008a  4284              CMP      r4,r0
00008c  d103              BNE      |L1.150|
;;;27             RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOI, ENABLE);
00008e  2101              MOVS     r1,#1
000090  1580              ASRS     r0,r0,#22
000092  f7fffffe          BL       RCC_AHB1PeriphClockCmd
                  |L1.150|
;;;28         }
;;;29     
;;;30         // 配置GPIO口
;;;31         GPIO_InitStructure.GPIO_Pin = GPIO_Pin;
000096  9600              STR      r6,[sp,#0]
;;;32         GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000098  2002              MOVS     r0,#2
00009a  f88d0005          STRB     r0,[sp,#5]
;;;33     
;;;34         switch (mode) {
00009e  2d05              CMP      r5,#5
0000a0  d237              BCS      |L1.274|
0000a2  e8dff005          TBB      [pc,r5]
0000a6  0311              DCB      0x03,0x11
0000a8  1a242d00          DCB      0x1a,0x24,0x2d,0x00
;;;35             case IO_MODE_TIM:
;;;36                 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
0000ac  2002              MOVS     r0,#2
0000ae  f88d0004          STRB     r0,[sp,#4]
;;;37                 GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
0000b2  2000              MOVS     r0,#0
0000b4  f88d0006          STRB     r0,[sp,#6]
;;;38                 GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
0000b8  f88d0007          STRB     r0,[sp,#7]
;;;39                 GPIO_PinAFConfig(GPIOx, GPIO_PinSource0, GPIO_AF_TIM1);
0000bc  2201              MOVS     r2,#1
0000be  2100              MOVS     r1,#0
0000c0  4620              MOV      r0,r4
0000c2  f7fffffe          BL       GPIO_PinAFConfig
;;;40                 break;
0000c6  e025              B        |L1.276|
;;;41             
;;;42             case IO_MODE_FLOAT_OUTPUT:
;;;43                 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
0000c8  2001              MOVS     r0,#1
0000ca  f88d0004          STRB     r0,[sp,#4]
;;;44                 GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
0000ce  f88d0006          STRB     r0,[sp,#6]
;;;45                 GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
0000d2  2000              MOVS     r0,#0
0000d4  f88d0007          STRB     r0,[sp,#7]
;;;46                 break;
0000d8  e01c              B        |L1.276|
;;;47             
;;;48             case IO_MODE_FLOAT_INPUT:
;;;49                 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
0000da  2000              MOVS     r0,#0
0000dc  f88d0004          STRB     r0,[sp,#4]
;;;50                 GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;
0000e0  2001              MOVS     r0,#1
0000e2  f88d0006          STRB     r0,[sp,#6]
;;;51                 GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
0000e6  2000              MOVS     r0,#0
0000e8  f88d0007          STRB     r0,[sp,#7]
;;;52                 break;
0000ec  e012              B        |L1.276|
;;;53             case IO_MODE_PUSH_PULL_OUTPUT:
;;;54                 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
0000ee  2001              MOVS     r0,#1
0000f0  f88d0004          STRB     r0,[sp,#4]
;;;55                 GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
0000f4  2000              MOVS     r0,#0
0000f6  f88d0006          STRB     r0,[sp,#6]
;;;56                 GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
0000fa  f88d0007          STRB     r0,[sp,#7]
;;;57                 break;
0000fe  e009              B        |L1.276|
;;;58             case IO_MODE_ANALOG_INPUT:
;;;59                 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000100  2003              MOVS     r0,#3
000102  f88d0004          STRB     r0,[sp,#4]
;;;60                 GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000106  2000              MOVS     r0,#0
000108  f88d0006          STRB     r0,[sp,#6]
;;;61                 GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
00010c  f88d0007          STRB     r0,[sp,#7]
;;;62                 break;
000110  e000              B        |L1.276|
                  |L1.274|
;;;63             default:
;;;64                 break;
000112  bf00              NOP      
                  |L1.276|
000114  bf00              NOP                            ;40
;;;65         }
;;;66     
;;;67         GPIO_Init(GPIOx, &GPIO_InitStructure);
000116  4669              MOV      r1,sp
000118  4620              MOV      r0,r4
00011a  f7fffffe          BL       GPIO_Init
;;;68     }
00011e  bd7c              POP      {r2-r6,pc}
                          ENDP

                  |L1.288|
                          DCD      0x40020000
                  |L1.292|
                          DCD      0x40020400
                  |L1.296|
                          DCD      0x40020800
                  |L1.300|
                          DCD      0x40020c00
                  |L1.304|
                          DCD      0x40021000
                  |L1.308|
                          DCD      0x40021400
                  |L1.312|
                          DCD      0x40021800
                  |L1.316|
                          DCD      0x40021c00
                  |L1.320|
                          DCD      0x40022000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\ft_support\\io_mode.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_io_mode_c_d3fc6304____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_io_mode_c_d3fc6304____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_io_mode_c_d3fc6304____REVSH|
#line 144
|__asm___9_io_mode_c_d3fc6304____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
