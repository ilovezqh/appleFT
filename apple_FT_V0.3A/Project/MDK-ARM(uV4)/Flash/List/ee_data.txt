; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\ee_data.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\ee_data.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\ee_data.crf ..\..\User\chip_ft\ee_data.c]
                          THUMB

                          AREA ||i.ee_data_init||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  ee_data_init PROC
;;;8      
;;;9      int32_t ee_data_init(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;10     {
;;;11         uint8_t fail_cnt=0;
000004  2600              MOVS     r6,#0
;;;12     
;;;13         uint32_t ee_crc32;
;;;14        
;;;15         do
000006  bf00              NOP      
                  |L1.8|
;;;16         {
;;;17             uint8_t sta = ee_ReadBytes((uint8_t*)&ee_data, 0, sizeof(ee_data_t));
000008  2220              MOVS     r2,#0x20
00000a  2100              MOVS     r1,#0
00000c  4837              LDR      r0,|L1.236|
00000e  f7fffffe          BL       ee_ReadBytes
000012  4607              MOV      r7,r0
;;;18             if(sta == 0) return -1; //read ee fail
000014  b91f              CBNZ     r7,|L1.30|
000016  f04f30ff          MOV      r0,#0xffffffff
                  |L1.26|
;;;19             
;;;20             for(uint16_t i=0; i<sizeof(ee_data_t); i++)
;;;21             {
;;;22                 if((i%16) == 0) debug("\r\n");
;;;23                 debug("%02X ",((uint8_t*)&ee_data)[i]);
;;;24                 if((i%8 == 0) && (i/8%2))  debug(" - ");
;;;25                 
;;;26             }
;;;27             debug("\r\n");
;;;28             ee_crc32 = crc32_entire_calcu((uint8_t*)&ee_data, sizeof(ee_data_t)-4);
;;;29             if((ee_data.head != EE_HEAD) || (ee_data.tail != EE_TAIL) || (ee_crc32!= ee_data.crc))
;;;30             {
;;;31                 fail_cnt++;
;;;32                 memset(&ee_data,0,sizeof(ee_data_t));
;;;33                 ee_data.head            = EE_HEAD;
;;;34                 ee_data.tail            = EE_TAIL;
;;;35                 ee_data.crc             = crc32_entire_calcu((uint8_t*)&ee_data, sizeof(ee_data_t)-4);
;;;36                 sta = ee_WriteBytes((uint8_t*)&ee_data, 0, sizeof(ee_data_t));
;;;37                 if(sta == 0) return -2; //write ee fail
;;;38                 delay_ms(3); //must delay for read operation  after write operation
;;;39             }
;;;40             else    
;;;41             {
;;;42                 return 0;  //ee success
;;;43             }
;;;44         }
;;;45         while(fail_cnt<3);
;;;46         
;;;47         return -3; //try max error
;;;48     }
00001a  e8bd81f0          POP      {r4-r8,pc}
                  |L1.30|
00001e  2400              MOVS     r4,#0                 ;20
000020  e024              B        |L1.108|
                  |L1.34|
000022  17e1              ASRS     r1,r4,#31             ;22
000024  eb047111          ADD      r1,r4,r1,LSR #28      ;22
000028  1109              ASRS     r1,r1,#4              ;22
00002a  eba41101          SUB      r1,r4,r1,LSL #4       ;22
00002e  b911              CBNZ     r1,|L1.54|
000030  a02f              ADR      r0,|L1.240|
000032  f7fffffe          BL       __2printf
                  |L1.54|
000036  482d              LDR      r0,|L1.236|
000038  5d01              LDRB     r1,[r0,r4]            ;23
00003a  a02e              ADR      r0,|L1.244|
00003c  f7fffffe          BL       __2printf
000040  17e3              ASRS     r3,r4,#31             ;24
000042  eb047353          ADD      r3,r4,r3,LSR #29      ;24
000046  10db              ASRS     r3,r3,#3              ;24
000048  eba403c3          SUB      r3,r4,r3,LSL #3       ;24
00004c  b963              CBNZ     r3,|L1.104|
00004e  17e3              ASRS     r3,r4,#31             ;24
000050  eb047353          ADD      r3,r4,r3,LSR #29      ;24
000054  10d8              ASRS     r0,r3,#3              ;24
000056  eb0073d0          ADD      r3,r0,r0,LSR #31      ;24
00005a  105b              ASRS     r3,r3,#1              ;24
00005c  eba00343          SUB      r3,r0,r3,LSL #1       ;24
000060  b113              CBZ      r3,|L1.104|
000062  a026              ADR      r0,|L1.252|
000064  f7fffffe          BL       __2printf
                  |L1.104|
000068  1c60              ADDS     r0,r4,#1              ;20
00006a  b284              UXTH     r4,r0                 ;20
                  |L1.108|
00006c  2c20              CMP      r4,#0x20              ;20
00006e  d3d8              BCC      |L1.34|
000070  a01f              ADR      r0,|L1.240|
000072  f7fffffe          BL       __2printf
000076  211c              MOVS     r1,#0x1c              ;28
000078  481c              LDR      r0,|L1.236|
00007a  f7fffffe          BL       crc32_entire_calcu
00007e  4605              MOV      r5,r0                 ;28
000080  481a              LDR      r0,|L1.236|
000082  6800              LDR      r0,[r0,#0]            ;29  ; ee_data
000084  f1b03faa          CMP      r0,#0xaaaaaaaa        ;29
000088  d108              BNE      |L1.156|
00008a  4818              LDR      r0,|L1.236|
00008c  6980              LDR      r0,[r0,#0x18]         ;29  ; ee_data
00008e  f1b03fbb          CMP      r0,#0xbbbbbbbb        ;29
000092  d103              BNE      |L1.156|
000094  4815              LDR      r0,|L1.236|
000096  69c0              LDR      r0,[r0,#0x1c]         ;29  ; ee_data
000098  42a8              CMP      r0,r5                 ;29
00009a  d020              BEQ      |L1.222|
                  |L1.156|
00009c  1c70              ADDS     r0,r6,#1              ;31
00009e  b2c6              UXTB     r6,r0                 ;31
0000a0  2120              MOVS     r1,#0x20              ;32
0000a2  4812              LDR      r0,|L1.236|
0000a4  f7fffffe          BL       __aeabi_memclr4
0000a8  f04f30aa          MOV      r0,#0xaaaaaaaa        ;33
0000ac  490f              LDR      r1,|L1.236|
0000ae  6008              STR      r0,[r1,#0]            ;33  ; ee_data
0000b0  f04f30bb          MOV      r0,#0xbbbbbbbb        ;34
0000b4  6188              STR      r0,[r1,#0x18]         ;34  ; ee_data
0000b6  211c              MOVS     r1,#0x1c              ;35
0000b8  480c              LDR      r0,|L1.236|
0000ba  f7fffffe          BL       crc32_entire_calcu
0000be  490b              LDR      r1,|L1.236|
0000c0  61c8              STR      r0,[r1,#0x1c]         ;35  ; ee_data
0000c2  2220              MOVS     r2,#0x20              ;36
0000c4  2100              MOVS     r1,#0                 ;36
0000c6  4809              LDR      r0,|L1.236|
0000c8  f7fffffe          BL       ee_WriteBytes
0000cc  4607              MOV      r7,r0                 ;36
0000ce  b917              CBNZ     r7,|L1.214|
0000d0  f06f0001          MVN      r0,#1                 ;37
0000d4  e7a1              B        |L1.26|
                  |L1.214|
0000d6  2003              MOVS     r0,#3                 ;38
0000d8  f7fffffe          BL       bsp_DelayMS
0000dc  e001              B        |L1.226|
                  |L1.222|
0000de  2000              MOVS     r0,#0                 ;42
0000e0  e79b              B        |L1.26|
                  |L1.226|
0000e2  2e03              CMP      r6,#3                 ;45
0000e4  db90              BLT      |L1.8|
0000e6  f06f0002          MVN      r0,#2                 ;47
0000ea  e796              B        |L1.26|
;;;49     
                          ENDP

                  |L1.236|
                          DCD      ee_data
                  |L1.240|
0000f0  0d0a00            DCB      "\r\n",0
0000f3  00                DCB      0
                  |L1.244|
0000f4  25303258          DCB      "%02X ",0
0000f8  2000    
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L1.252|
0000fc  202d2000          DCB      " - ",0

                          AREA ||i.ee_data_save||, CODE, READONLY, ALIGN=2

                  ee_data_save PROC
;;;49     
;;;50     int32_t ee_data_save(void)
000000  b510              PUSH     {r4,lr}
;;;51     {
;;;52         ee_data.crc = crc32_entire_calcu((uint8_t*)&ee_data, sizeof(ee_data_t)-4);
000002  211c              MOVS     r1,#0x1c
000004  4807              LDR      r0,|L2.36|
000006  f7fffffe          BL       crc32_entire_calcu
00000a  4906              LDR      r1,|L2.36|
00000c  61c8              STR      r0,[r1,#0x1c]  ; ee_data
;;;53         if(ee_WriteBytes((uint8_t *)&ee_data,0, sizeof(ee_data_t))) return 0;
00000e  2220              MOVS     r2,#0x20
000010  2100              MOVS     r1,#0
000012  4804              LDR      r0,|L2.36|
000014  f7fffffe          BL       ee_WriteBytes
000018  b108              CBZ      r0,|L2.30|
00001a  2000              MOVS     r0,#0
                  |L2.28|
;;;54         return -1;
;;;55     }
00001c  bd10              POP      {r4,pc}
                  |L2.30|
00001e  f04f30ff          MOV      r0,#0xffffffff        ;54
000022  e7fb              B        |L2.28|
;;;56     
                          ENDP

                  |L2.36|
                          DCD      ee_data

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  ee_data
                          %        32

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\chip_ft\\ee_data.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_ee_data_c_398a01f0____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_ee_data_c_398a01f0____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_ee_data_c_398a01f0____REVSH|
#line 144
|__asm___9_ee_data_c_398a01f0____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
