; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\test_handshark.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\test_handshark.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\test_handshark.crf ..\..\User\chip_ft\test_handshark.c]
                          THUMB

                          AREA ||i.test_handshark||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  test_handshark PROC
;;;5          
;;;6      fsm_rt_t test_handshark(void)
000000  b5fe              PUSH     {r1-r7,lr}
;;;7      {
;;;8          
;;;9          uint8_t  chip_code;
;;;10         static enum
;;;11         {
;;;12             START = 0,
;;;13             GET_CHIP_CODE,
;;;14             READ_EFUSE,
;;;15         } s_tState = START;
;;;16         
;;;17         fsm_rt_t ret;
;;;18      
;;;19         switch(s_tState)
000002  4878              LDR      r0,|L1.484|
000004  7800              LDRB     r0,[r0,#0]  ; s_tState
000006  b120              CBZ      r0,|L1.18|
000008  2801              CMP      r0,#1
00000a  d008              BEQ      |L1.30|
00000c  2802              CMP      r0,#2
00000e  d130              BNE      |L1.114|
000010  e030              B        |L1.116|
                  |L1.18|
;;;20         {
;;;21         case START:
;;;22             s_tState++;
000012  4874              LDR      r0,|L1.484|
000014  7800              LDRB     r0,[r0,#0]  ; s_tState
000016  1c40              ADDS     r0,r0,#1
000018  4972              LDR      r1,|L1.484|
00001a  7008              STRB     r0,[r1,#0]
;;;23             //break;
;;;24         
;;;25         case GET_CHIP_CODE:
00001c  bf00              NOP      
                  |L1.30|
;;;26             {
;;;27                 //apple_prst();
;;;28                 //delay_ms(100);
;;;29                 
;;;30                 ret = apple_read_addr16(APPLE_DEV_ADDR, &chip_code, CHIP_CODE_REG,1); //读取chip  code：0x53
00001e  2301              MOVS     r3,#1
000020  f44f4240          MOV      r2,#0xc000
000024  a902              ADD      r1,sp,#8
000026  2060              MOVS     r0,#0x60
000028  f7fffffe          BL       apple_read_addr16
00002c  4605              MOV      r5,r0
;;;31                 if(ret != fsm_rt_cpl) 
00002e  b115              CBZ      r5,|L1.54|
;;;32                 {
;;;33                     ret = fsm_rt_err_handshark;
000030  f06f054b          MVN      r5,#0x4b
;;;34                     goto fail;
000034  e0d0              B        |L1.472|
                  |L1.54|
;;;35                 }
;;;36                 if(chip_code != APPLE_CHIP_CODE)
000036  f89d0008          LDRB     r0,[sp,#8]
00003a  2853              CMP      r0,#0x53
00003c  d002              BEQ      |L1.68|
;;;37                 {
;;;38                     ret = fsm_rt_err_chip_id;
00003e  f06f0525          MVN      r5,#0x25
;;;39                     goto fail;
000042  e0c9              B        |L1.472|
                  |L1.68|
;;;40                 }
;;;41                 uint8_t prst_ctl_value;
;;;42                 ret = apple_read_addr16(APPLE_DEV_ADDR, &prst_ctl_value, PRST_CTL_REG,1); //读取chip  code：0x53
000044  2301              MOVS     r3,#1
000046  f24c221e          MOV      r2,#0xc21e
00004a  a901              ADD      r1,sp,#4
00004c  2060              MOVS     r0,#0x60
00004e  f7fffffe          BL       apple_read_addr16
000052  4605              MOV      r5,r0
;;;43                 debug("prst_ctl_value:%X\r\n",prst_ctl_value);
000054  f89d1004          LDRB     r1,[sp,#4]
000058  a063              ADR      r0,|L1.488|
00005a  f7fffffe          BL       __2printf
;;;44                 
;;;45                 ret = trim_var_load();                                              //读出所有涉及trim的寄存器值的值
00005e  f7fffffe          BL       trim_var_load
000062  4605              MOV      r5,r0
;;;46                 if( ret != fsm_rt_cpl)
000064  b115              CBZ      r5,|L1.108|
;;;47                 {
;;;48                     ret = fsm_rt_err_trim_var_load;
000066  f06f0510          MVN      r5,#0x10
;;;49                     goto fail;
00006a  e0b5              B        |L1.472|
                  |L1.108|
;;;50                 }
;;;51                 
;;;52                 s_tState = READ_EFUSE;
00006c  2002              MOVS     r0,#2
00006e  495d              LDR      r1,|L1.484|
000070  7008              STRB     r0,[r1,#0]
                  |L1.114|
;;;53             }
;;;54             break;
000072  e0ae              B        |L1.466|
                  |L1.116|
;;;55             
;;;56         case READ_EFUSE:
;;;57             {
;;;58                 otp_read(&otp_read_data);
000074  4861              LDR      r0,|L1.508|
000076  f7fffffe          BL       otp_read
;;;59                 logging(" [ Read ]read=%08X\r\n",otp_read_data.all);
00007a  4860              LDR      r0,|L1.508|
00007c  6802              LDR      r2,[r0,#0]  ; otp_read_data
00007e  4860              LDR      r0,|L1.512|
000080  6801              LDR      r1,[r0,#0]  ; g_iRunTime
000082  a060              ADR      r0,|L1.516|
000084  f7fffffe          BL       logger_buffer_write
;;;60                 otp_struct_printf(&otp_read_data, "[power on]otp read");
000088  a165              ADR      r1,|L1.544|
00008a  485c              LDR      r0,|L1.508|
00008c  f7fffffe          BL       otp_struct_printf
;;;61                 uint8_t temp;
;;;62                 temp = read_apple_trim_value(ITEM_IREF);
000090  2001              MOVS     r0,#1
000092  f7fffffe          BL       read_apple_trim_value
000096  4604              MOV      r4,r0
;;;63                 debug("info [IREF ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r\n",otp_read_data.iref_f, reg_default.iref_f, 
000098  9400              STR      r4,[sp,#0]
00009a  4858              LDR      r0,|L1.508|
00009c  9401              STR      r4,[sp,#4]
00009e  6800              LDR      r0,[r0,#0]  ; otp_read_data
0000a0  f3c04042          UBFX     r0,r0,#17,#3
0000a4  4e63              LDR      r6,|L1.564|
0000a6  6836              LDR      r6,[r6,#0]  ; reg_default
0000a8  f3c64642          UBFX     r6,r6,#17,#3
0000ac  ea800306          EOR      r3,r0,r6
0000b0  4860              LDR      r0,|L1.564|
0000b2  6800              LDR      r0,[r0,#0]  ; reg_default
0000b4  f3c04242          UBFX     r2,r0,#17,#3
0000b8  4850              LDR      r0,|L1.508|
0000ba  6800              LDR      r0,[r0,#0]  ; otp_read_data
0000bc  f3c04142          UBFX     r1,r0,#17,#3
0000c0  a05d              ADR      r0,|L1.568|
0000c2  f7fffffe          BL       __2printf
;;;64                                                                         otp_read_data.iref_f^reg_default.iref_f,  temp,temp );
;;;65                 temp = read_apple_trim_value(ITEM_VBG);
0000c6  2003              MOVS     r0,#3
0000c8  f7fffffe          BL       read_apple_trim_value
0000cc  4604              MOV      r4,r0
;;;66                 debug("info [BGR  ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r\n",otp_read_data.bgr_f, reg_default.bgr_f, 
0000ce  9400              STR      r4,[sp,#0]
0000d0  484a              LDR      r0,|L1.508|
0000d2  9401              STR      r4,[sp,#4]
0000d4  8800              LDRH     r0,[r0,#0]  ; otp_read_data
0000d6  f3c02001          UBFX     r0,r0,#8,#2
0000da  4e56              LDR      r6,|L1.564|
0000dc  8836              LDRH     r6,[r6,#0]  ; reg_default
0000de  f3c62601          UBFX     r6,r6,#8,#2
0000e2  ea800306          EOR      r3,r0,r6
0000e6  4853              LDR      r0,|L1.564|
0000e8  8800              LDRH     r0,[r0,#0]  ; reg_default
0000ea  f3c02201          UBFX     r2,r0,#8,#2
0000ee  4843              LDR      r0,|L1.508|
0000f0  8800              LDRH     r0,[r0,#0]  ; otp_read_data
0000f2  f3c02101          UBFX     r1,r0,#8,#2
0000f6  a05f              ADR      r0,|L1.628|
0000f8  f7fffffe          BL       __2printf
;;;67                                                                      otp_read_data.bgr_f^reg_default.bgr_f, temp,temp );
;;;68                 temp = read_apple_trim_value(ITEM_VREF);
0000fc  2002              MOVS     r0,#2
0000fe  f7fffffe          BL       read_apple_trim_value
000102  4604              MOV      r4,r0
;;;69                 debug("info [VREF ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r\n",otp_read_data.vref_f, reg_default.vref_f, 
000104  9400              STR      r4,[sp,#0]
000106  483d              LDR      r0,|L1.508|
000108  9401              STR      r4,[sp,#4]
00010a  7800              LDRB     r0,[r0,#0]  ; otp_read_data
00010c  f3c01003          UBFX     r0,r0,#4,#4
000110  4e48              LDR      r6,|L1.564|
000112  7836              LDRB     r6,[r6,#0]  ; reg_default
000114  f3c61603          UBFX     r6,r6,#4,#4
000118  ea800306          EOR      r3,r0,r6
00011c  4845              LDR      r0,|L1.564|
00011e  7800              LDRB     r0,[r0,#0]  ; reg_default
000120  f3c01203          UBFX     r2,r0,#4,#4
000124  4835              LDR      r0,|L1.508|
000126  7800              LDRB     r0,[r0,#0]  ; otp_read_data
000128  f3c01103          UBFX     r1,r0,#4,#4
00012c  a060              ADR      r0,|L1.688|
00012e  f7fffffe          BL       __2printf
;;;70                                                                      otp_read_data.vref_f^reg_default.vref_f, temp,temp );
;;;71                 
;;;72                 temp = read_apple_trim_value(ITEM_LPVDD);
000132  2004              MOVS     r0,#4
000134  f7fffffe          BL       read_apple_trim_value
000138  4604              MOV      r4,r0
;;;73                 debug("info [LPVDD] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r\n",otp_read_data.lpvdd_f, reg_default.lpvdd_f, 
00013a  9400              STR      r4,[sp,#0]
00013c  482f              LDR      r0,|L1.508|
00013e  9401              STR      r4,[sp,#4]
000140  7800              LDRB     r0,[r0,#0]  ; otp_read_data
000142  f3c00042          UBFX     r0,r0,#1,#3
000146  4e3b              LDR      r6,|L1.564|
000148  7836              LDRB     r6,[r6,#0]  ; reg_default
00014a  f3c60642          UBFX     r6,r6,#1,#3
00014e  ea800306          EOR      r3,r0,r6
000152  4838              LDR      r0,|L1.564|
000154  7800              LDRB     r0,[r0,#0]  ; reg_default
000156  f3c00242          UBFX     r2,r0,#1,#3
00015a  4828              LDR      r0,|L1.508|
00015c  7800              LDRB     r0,[r0,#0]  ; otp_read_data
00015e  f3c00142          UBFX     r1,r0,#1,#3
000162  a062              ADR      r0,|L1.748|
000164  f7fffffe          BL       __2printf
;;;74                                                                      otp_read_data.lpvdd_f^reg_default.lpvdd_f, temp,temp );
;;;75                 temp = read_apple_trim_value(ITEM_RCL);
000168  2005              MOVS     r0,#5
00016a  f7fffffe          BL       read_apple_trim_value
00016e  4604              MOV      r4,r0
;;;76                 debug("info [32K  ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r\n",otp_read_data.rcl_f, reg_default.rcl_f, 
000170  9400              STR      r4,[sp,#0]
000172  4822              LDR      r0,|L1.508|
000174  9401              STR      r4,[sp,#4]
000176  8800              LDRH     r0,[r0,#0]  ; otp_read_data
000178  f3c02085          UBFX     r0,r0,#10,#6
00017c  4e2d              LDR      r6,|L1.564|
00017e  8836              LDRH     r6,[r6,#0]  ; reg_default
000180  f3c62685          UBFX     r6,r6,#10,#6
000184  ea800306          EOR      r3,r0,r6
000188  482a              LDR      r0,|L1.564|
00018a  8800              LDRH     r0,[r0,#0]  ; reg_default
00018c  f3c02285          UBFX     r2,r0,#10,#6
000190  481a              LDR      r0,|L1.508|
000192  8800              LDRH     r0,[r0,#0]  ; otp_read_data
000194  f3c02185          UBFX     r1,r0,#10,#6
000198  a063              ADR      r0,|L1.808|
00019a  f7fffffe          BL       __2printf
;;;77                                                                      otp_read_data.rcl_f^reg_default.rcl_f, temp,temp );
;;;78                 temp = read_apple_trim_value(ITEM_RCH);
00019e  2006              MOVS     r0,#6
0001a0  f7fffffe          BL       read_apple_trim_value
0001a4  4604              MOV      r4,r0
;;;79                 debug("info [80M  ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r\n",otp_read_data.rch_f, reg_default.rch_f, 
0001a6  9400              STR      r4,[sp,#0]
0001a8  4814              LDR      r0,|L1.508|
0001aa  9401              STR      r4,[sp,#4]
0001ac  6800              LDR      r0,[r0,#0]  ; otp_read_data
0001ae  0e40              LSRS     r0,r0,#25
0001b0  4e20              LDR      r6,|L1.564|
0001b2  6836              LDR      r6,[r6,#0]  ; reg_default
0001b4  ea806356          EOR      r3,r0,r6,LSR #25
0001b8  481e              LDR      r0,|L1.564|
0001ba  6800              LDR      r0,[r0,#0]  ; reg_default
0001bc  0e42              LSRS     r2,r0,#25
0001be  480f              LDR      r0,|L1.508|
0001c0  6800              LDR      r0,[r0,#0]  ; otp_read_data
0001c2  0e41              LSRS     r1,r0,#25
0001c4  a067              ADR      r0,|L1.868|
0001c6  f7fffffe          BL       __2printf
;;;80                                                                      otp_read_data.rch_f^reg_default.rch_f, temp,temp );
;;;81                 s_tState = START;
0001ca  2000              MOVS     r0,#0
0001cc  4905              LDR      r1,|L1.484|
0001ce  7008              STRB     r0,[r1,#0]
                  |L1.464|
;;;82                 return fsm_rt_cpl;
;;;83             }
;;;84             //break;
;;;85         }
;;;86      
;;;87         return fsm_rt_on_going;
;;;88         
;;;89         fail:
;;;90         s_tState = START;
;;;91         return ret;
;;;92     }
0001d0  bdfe              POP      {r1-r7,pc}
                  |L1.466|
0001d2  bf00              NOP                            ;54
0001d4  2001              MOVS     r0,#1                 ;87
0001d6  e7fb              B        |L1.464|
                  |L1.472|
0001d8  2000              MOVS     r0,#0                 ;90
0001da  4902              LDR      r1,|L1.484|
0001dc  7008              STRB     r0,[r1,#0]            ;90
0001de  4628              MOV      r0,r5                 ;91
0001e0  e7f6              B        |L1.464|
                          ENDP

0001e2  0000              DCW      0x0000
                  |L1.484|
                          DCD      s_tState
                  |L1.488|
0001e8  70727374          DCB      "prst_ctl_value:%X\r\n",0
0001ec  5f63746c
0001f0  5f76616c
0001f4  75653a25
0001f8  580d0a00
                  |L1.508|
                          DCD      otp_read_data
                  |L1.512|
                          DCD      g_iRunTime
                  |L1.516|
000204  5b253864          DCB      "[%8d] [ Read ]read=%08X\r\n",0
000208  5d205b20
00020c  52656164
000210  205d7265
000214  61643d25
000218  3038580d
00021c  0a00    
00021e  00                DCB      0
00021f  00                DCB      0
                  |L1.544|
000220  5b706f77          DCB      "[power on]otp read",0
000224  6572206f
000228  6e5d6f74
00022c  70207265
000230  616400  
000233  00                DCB      0
                  |L1.564|
                          DCD      reg_default
                  |L1.568|
000238  696e666f          DCB      "info [IREF ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r"
00023c  205b4952
000240  4546205d
000244  206f7470
000248  3a253258
00024c  20786f72
000250  20253258
000254  203d2025
000258  32583b20
00025c  72656741
000260  63747561
000264  6c3a2532
000268  58282532
00026c  64290d  
00026f  0a00              DCB      "\n",0
000271  00                DCB      0
000272  00                DCB      0
000273  00                DCB      0
                  |L1.628|
000274  696e666f          DCB      "info [BGR  ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r"
000278  205b4247
00027c  5220205d
000280  206f7470
000284  3a253258
000288  20786f72
00028c  20253258
000290  203d2025
000294  32583b20
000298  72656741
00029c  63747561
0002a0  6c3a2532
0002a4  58282532
0002a8  64290d  
0002ab  0a00              DCB      "\n",0
0002ad  00                DCB      0
0002ae  00                DCB      0
0002af  00                DCB      0
                  |L1.688|
0002b0  696e666f          DCB      "info [VREF ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r"
0002b4  205b5652
0002b8  4546205d
0002bc  206f7470
0002c0  3a253258
0002c4  20786f72
0002c8  20253258
0002cc  203d2025
0002d0  32583b20
0002d4  72656741
0002d8  63747561
0002dc  6c3a2532
0002e0  58282532
0002e4  64290d  
0002e7  0a00              DCB      "\n",0
0002e9  00                DCB      0
0002ea  00                DCB      0
0002eb  00                DCB      0
                  |L1.748|
0002ec  696e666f          DCB      "info [LPVDD] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r"
0002f0  205b4c50
0002f4  5644445d
0002f8  206f7470
0002fc  3a253258
000300  20786f72
000304  20253258
000308  203d2025
00030c  32583b20
000310  72656741
000314  63747561
000318  6c3a2532
00031c  58282532
000320  64290d  
000323  0a00              DCB      "\n",0
000325  00                DCB      0
000326  00                DCB      0
000327  00                DCB      0
                  |L1.808|
000328  696e666f          DCB      "info [32K  ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r"
00032c  205b3332
000330  4b20205d
000334  206f7470
000338  3a253258
00033c  20786f72
000340  20253258
000344  203d2025
000348  32583b20
00034c  72656741
000350  63747561
000354  6c3a2532
000358  58282532
00035c  64290d  
00035f  0a00              DCB      "\n",0
000361  00                DCB      0
000362  00                DCB      0
000363  00                DCB      0
                  |L1.868|
000364  696e666f          DCB      "info [80M  ] otp:%2X xor %2X = %2X; regActual:%2X(%2d)\r"
000368  205b3830
00036c  4d20205d
000370  206f7470
000374  3a253258
000378  20786f72
00037c  20253258
000380  203d2025
000384  32583b20
000388  72656741
00038c  63747561
000390  6c3a2532
000394  58282532
000398  64290d  
00039b  0a00              DCB      "\n",0
00039d  00                DCB      0
00039e  00                DCB      0
00039f  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=0

                  s_tState
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\chip_ft\\test_handshark.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___16_test_handshark_c_191e3d49____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_test_handshark_c_191e3d49____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___16_test_handshark_c_191e3d49____REVSH|
#line 144
|__asm___16_test_handshark_c_191e3d49____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
