; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\test_reboot_to_brom.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\test_reboot_to_brom.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\berry_ft -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\kiwi_ft -I..\..\User\kiwi_ft\spv40 -I..\..\User\kiwi_ft\spv40\peripheral -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\kiwi_ft -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\test_reboot_to_brom.crf ..\..\User\kiwi_ft\test_reboot_to_brom.c]
                          THUMB

                          AREA ||i.test_reboot_to_brom||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  test_reboot_to_brom PROC
;;;27     
;;;28     fsm_rt_t test_reboot_to_brom(void)
000000  b538              PUSH     {r3-r5,lr}
;;;29     {
;;;30         static enum
;;;31         {
;;;32             START = 0,   
;;;33             CMD_REBOOT_SEND,        
;;;34             BROM_HAND_SHARK,    
;;;35             RAM_PATTERN_LOAD,
;;;36             MIC_DSM_RESULT_GET,
;;;37      
;;;38         } s_tState = START;
;;;39         fsm_rt_t ret = fsm_rt_cpl;
000002  2500              MOVS     r5,#0
;;;40         static uint8_t audio_fail_flg=0;
;;;41         
;;;42         timer_creat();
;;;43         switch(s_tState)
000004  4868              LDR      r0,|L1.424|
000006  7800              LDRB     r0,[r0,#0]  ; s_tState
000008  2805              CMP      r0,#5
00000a  d247              BCS      |L1.156|
00000c  e8dff000          TBB      [pc,r0]
000010  031f4768          DCB      0x03,0x1f,0x47,0x68
000014  7e00              DCB      0x7e,0x00
;;;44         {
;;;45         case START:
;;;46             if( pattern_performance_en == 0) return fsm_rt_cpl; 
000016  4865              LDR      r0,|L1.428|
000018  7800              LDRB     r0,[r0,#0]  ; pattern_performance_en
00001a  b908              CBNZ     r0,|L1.32|
00001c  2000              MOVS     r0,#0
                  |L1.30|
;;;47             if(efuse_otp_data_brom.LOCK_VLD) return fsm_rt_cpl;  //被锁定的芯片不测回环，假设锁定的是录和播模式，那也会因此跳过（这种情况下之前就没必要去锁）
;;;48             if(dut.device->lock.vld)         return fsm_rt_cpl;  //要被锁定的芯片也不测音频回环
;;;49             //exit_clk_disable();
;;;50             audio_fail_flg = 0;
;;;51             //test_pin_E11_init();  //用来查看时序的 debug IO
;;;52             s_tState++;
;;;53             //break;
;;;54         
;;;55         case CMD_REBOOT_SEND:
;;;56             {
;;;57                 do
;;;58                 { 
;;;59                     ret = spl_send_and_paser(0x24,0,NULL);  //让SPL程序reboot， #define	MSG_CMD_END_AND_REBOOT			(0x24)
;;;60                 }while(ret == fsm_rt_on_going);
;;;61                 
;;;62                 if(ret != fsm_rt_cpl ) 
;;;63                 {
;;;64                     return ret;
;;;65                 }
;;;66                 //debug(" cmd_reboot send\r\n");
;;;67                 //GPIO_SetBits(GPIOE, GPIO_Pin_11);  
;;;68                 tx_rx_mode_set(TXRX_PIN_MODE_IO_LOW);                               //拉低GPIO6 ，让kiwi重新进入BROM
;;;69                 comClearTxFifo(COM2);
;;;70                 comClearRxFifo(COM2);
;;;71                 delay_ms(50);
;;;72                 //GPIO_ResetBits(GPIOE, GPIO_Pin_11);
;;;73                 tx_rx_mode_set(TXRX_PIN_MODE_IO_HIGH);
;;;74                 delay_ms(50);
;;;75                 tx_rx_mode_set(TXRX_PIN_MODE_COM);
;;;76                 delay_ms(5);
;;;77                 s_tState = BROM_HAND_SHARK;
;;;78                 
;;;79             }
;;;80             break;
;;;81             
;;;82         case BROM_HAND_SHARK:
;;;83             {
;;;84                 comSendChar(COM2,0x80);                                             //同步波特率 发单个byte 0x80
;;;85                 uint32_t chip_id;
;;;86                 ret = brom_read_word(CHIP_ID_REG, &chip_id);                        //读取chip  id：brom 0x81
;;;87                 if(ret != fsm_rt_cpl) goto fail;
;;;88                 if((chip_id&0xffff0000) != APPLE_CHIP_CODE)
;;;89                 {
;;;90                     ret = fsm_rt_err_chip_id;
;;;91                     goto fail;
;;;92                 }
;;;93                 debug("chip_id=0x%08X\r\n",chip_id);
;;;94                 ret =  efuse_readback_repower();
;;;95                 if(ret != fsm_rt_cpl)  goto fail;
;;;96                 s_tState = RAM_PATTERN_LOAD;
;;;97                 //s_tState = START;
;;;98                 //return fsm_rt_cpl;
;;;99             }
;;;100            break;
;;;101    
;;;102        
;;;103        case RAM_PATTERN_LOAD:
;;;104            {
;;;105                ram_pattern_selecct(ram_pattern_performance);
;;;106                
;;;107                bsp_kiwi_ft_relay_on();//继电器使能
;;;108                do
;;;109                {
;;;110                    ret = test_load_into_ram(); 
;;;111                }while(ret == fsm_rt_on_going);
;;;112                if(ret != fsm_rt_cpl) goto fail;
;;;113                s_tState = MIC_DSM_RESULT_GET;
;;;114                timer_start(180);//timer_start(180);  //131ms:COUNT=5 ;290ms:COUNT=10
;;;115                //while(1);
;;;116            }
;;;117            break;
;;;118         
;;;119        case MIC_DSM_RESULT_GET:
;;;120            {
;;;121                if(is_time_up())
;;;122                {
;;;123                    do
;;;124                    {
;;;125                       ret = spl_send_and_paser(0xF1,0,NULL);
;;;126                    }while(ret == fsm_rt_on_going);
;;;127                    if(ret != fsm_rt_cpl ) { goto fail; }
;;;128                    ptn_query_t* p_pattern_query = (ptn_query_t*)&msg_recv.msg_body.content;
;;;129                    
;;;130                    if((*p_pattern_query).done.audio)
;;;131                    {
;;;132                        #define audio_index_val (*p_pattern_query).audio_index
;;;133                        #define audio_snr_val   (*p_pattern_query).audio_db
;;;134                        if((audio_index_val > AUDIO_INDEX_MAX) ||  (audio_index_val < AUDIO_INDEX_MIN))
;;;135                        {
;;;136                            audio_fail_flg = 1;
;;;137                        }
;;;138                        if((audio_snr_val > AUDIO_SNR_MAX) ||  (audio_snr_val < AUDIO_SNR_MIN))
;;;139                        {
;;;140                            audio_fail_flg = 1;
;;;141                        }
;;;142                        
;;;143                        if( audio_fail_flg ) 
;;;144                        {
;;;145                            logging("fail: audio snr,index:%d db:%d\r\n", audio_index_val, audio_snr_val);
;;;146                            ret = fsm_rt_err_audio_snr;
;;;147                            goto fail;
;;;148                        }
;;;149                        logging("SUCCESS audio snr,index:%d db:%d\r\n", audio_index_val, audio_snr_val);
;;;150                        s_tState = START;
;;;151                        return fsm_rt_cpl;
;;;152                    }
;;;153                }
;;;154            }
;;;155            break;
;;;156        }
;;;157        
;;;158        return fsm_rt_on_going;
;;;159        
;;;160        fail:
;;;161        s_tState = START;
;;;162        return ret;
;;;163    }
00001e  bd38              POP      {r3-r5,pc}
                  |L1.32|
000020  4863              LDR      r0,|L1.432|
000022  6880              LDR      r0,[r0,#8]            ;47  ; efuse_otp_data_brom
000024  f3c06080          UBFX     r0,r0,#26,#1          ;47
000028  b108              CBZ      r0,|L1.46|
00002a  2000              MOVS     r0,#0                 ;47
00002c  e7f7              B        |L1.30|
                  |L1.46|
00002e  4861              LDR      r0,|L1.436|
000030  6800              LDR      r0,[r0,#0]            ;48  ; dut
000032  f890004c          LDRB     r0,[r0,#0x4c]         ;48
000036  b108              CBZ      r0,|L1.60|
000038  2000              MOVS     r0,#0                 ;48
00003a  e7f0              B        |L1.30|
                  |L1.60|
00003c  2000              MOVS     r0,#0                 ;50
00003e  495e              LDR      r1,|L1.440|
000040  7008              STRB     r0,[r1,#0]            ;50
000042  4859              LDR      r0,|L1.424|
000044  7800              LDRB     r0,[r0,#0]            ;52  ; s_tState
000046  1c40              ADDS     r0,r0,#1              ;52
000048  4957              LDR      r1,|L1.424|
00004a  7008              STRB     r0,[r1,#0]            ;52
00004c  bf00              NOP                            ;55
00004e  bf00              NOP                            ;57
                  |L1.80|
000050  2200              MOVS     r2,#0                 ;59
000052  4611              MOV      r1,r2                 ;59
000054  2024              MOVS     r0,#0x24              ;59
000056  f7fffffe          BL       spl_send_and_paser
00005a  4605              MOV      r5,r0                 ;59
00005c  2d01              CMP      r5,#1                 ;60
00005e  d0f7              BEQ      |L1.80|
000060  b10d              CBZ      r5,|L1.102|
000062  4628              MOV      r0,r5                 ;64
000064  e7db              B        |L1.30|
                  |L1.102|
000066  2001              MOVS     r0,#1                 ;68
000068  f7fffffe          BL       tx_rx_mode_set
00006c  2001              MOVS     r0,#1                 ;69
00006e  f7fffffe          BL       comClearTxFifo
000072  2001              MOVS     r0,#1                 ;70
000074  f7fffffe          BL       comClearRxFifo
000078  2032              MOVS     r0,#0x32              ;71
00007a  f7fffffe          BL       bsp_DelayMS
00007e  2002              MOVS     r0,#2                 ;73
000080  f7fffffe          BL       tx_rx_mode_set
000084  2032              MOVS     r0,#0x32              ;74
000086  f7fffffe          BL       bsp_DelayMS
00008a  2000              MOVS     r0,#0                 ;75
00008c  f7fffffe          BL       tx_rx_mode_set
000090  2005              MOVS     r0,#5                 ;76
000092  f7fffffe          BL       bsp_DelayMS
000096  2002              MOVS     r0,#2                 ;77
000098  4943              LDR      r1,|L1.424|
00009a  7008              STRB     r0,[r1,#0]            ;77
                  |L1.156|
00009c  e07c              B        |L1.408|
00009e  2180              MOVS     r1,#0x80              ;84
0000a0  2001              MOVS     r0,#1                 ;84
0000a2  f7fffffe          BL       comSendChar
0000a6  4669              MOV      r1,sp                 ;86
0000a8  f04f5000          MOV      r0,#0x20000000        ;86
0000ac  f7fffffe          BL       brom_read_word
0000b0  4605              MOV      r5,r0                 ;86
0000b2  b105              CBZ      r5,|L1.182|
0000b4  e073              B        |L1.414|
                  |L1.182|
0000b6  9800              LDR      r0,[sp,#0]            ;88
0000b8  f36f000f          BFC      r0,#0,#16             ;88
0000bc  2853              CMP      r0,#0x53              ;88
0000be  d002              BEQ      |L1.198|
0000c0  f06f0525          MVN      r5,#0x25              ;90
0000c4  e06b              B        |L1.414|
                  |L1.198|
0000c6  a03d              ADR      r0,|L1.444|
0000c8  9900              LDR      r1,[sp,#0]            ;93
0000ca  f7fffffe          BL       __2printf
0000ce  f7fffffe          BL       efuse_readback_repower
0000d2  4605              MOV      r5,r0                 ;94
0000d4  b105              CBZ      r5,|L1.216|
0000d6  e062              B        |L1.414|
                  |L1.216|
0000d8  2003              MOVS     r0,#3                 ;96
0000da  4933              LDR      r1,|L1.424|
0000dc  7008              STRB     r0,[r1,#0]            ;96
0000de  e05b              B        |L1.408|
0000e0  2001              MOVS     r0,#1                 ;105
0000e2  f7fffffe          BL       ram_pattern_selecct
0000e6  f7fffffe          BL       bsp_kiwi_ft_relay_on
0000ea  bf00              NOP                            ;108
                  |L1.236|
0000ec  f7fffffe          BL       test_load_into_ram
0000f0  4605              MOV      r5,r0                 ;110
0000f2  2d01              CMP      r5,#1                 ;111
0000f4  d0fa              BEQ      |L1.236|
0000f6  b105              CBZ      r5,|L1.250|
0000f8  e051              B        |L1.414|
                  |L1.250|
0000fa  2004              MOVS     r0,#4                 ;113
0000fc  492a              LDR      r1,|L1.424|
0000fe  7008              STRB     r0,[r1,#0]            ;113
000100  4833              LDR      r0,|L1.464|
000102  6800              LDR      r0,[r0,#0]            ;114  ; g_iRunTime
000104  30b4              ADDS     r0,r0,#0xb4           ;114
000106  4933              LDR      r1,|L1.468|
000108  6008              STR      r0,[r1,#0]            ;114  ; timer
00010a  e045              B        |L1.408|
00010c  4830              LDR      r0,|L1.464|
00010e  6800              LDR      r0,[r0,#0]            ;121  ; g_iRunTime
000110  4930              LDR      r1,|L1.468|
000112  6809              LDR      r1,[r1,#0]            ;121  ; timer
000114  1a40              SUBS     r0,r0,r1              ;121
000116  f06f4100          MVN      r1,#0x80000000        ;121
00011a  4288              CMP      r0,r1                 ;121
00011c  d23b              BCS      |L1.406|
00011e  bf00              NOP                            ;123
                  |L1.288|
000120  2200              MOVS     r2,#0                 ;125
000122  4611              MOV      r1,r2                 ;125
000124  20f1              MOVS     r0,#0xf1              ;125
000126  f7fffffe          BL       spl_send_and_paser
00012a  4605              MOV      r5,r0                 ;125
00012c  2d01              CMP      r5,#1                 ;126
00012e  d0f7              BEQ      |L1.288|
000130  b105              CBZ      r5,|L1.308|
000132  e034              B        |L1.414|
                  |L1.308|
000134  4c28              LDR      r4,|L1.472|
000136  7820              LDRB     r0,[r4,#0]            ;130
000138  f3c01080          UBFX     r0,r0,#6,#1           ;130
00013c  2800              CMP      r0,#0                 ;130
00013e  d029              BEQ      |L1.404|
000140  69a0              LDR      r0,[r4,#0x18]         ;134
000142  281b              CMP      r0,#0x1b              ;134
000144  dc02              BGT      |L1.332|
000146  69a0              LDR      r0,[r4,#0x18]         ;134
000148  2819              CMP      r0,#0x19              ;134
00014a  da02              BGE      |L1.338|
                  |L1.332|
00014c  2001              MOVS     r0,#1                 ;136
00014e  491a              LDR      r1,|L1.440|
000150  7008              STRB     r0,[r1,#0]            ;136
                  |L1.338|
000152  69e0              LDR      r0,[r4,#0x1c]         ;138
000154  2832              CMP      r0,#0x32              ;138
000156  dc02              BGT      |L1.350|
000158  69e0              LDR      r0,[r4,#0x1c]         ;138
00015a  2817              CMP      r0,#0x17              ;138
00015c  da02              BGE      |L1.356|
                  |L1.350|
00015e  2001              MOVS     r0,#1                 ;140
000160  4915              LDR      r1,|L1.440|
000162  7008              STRB     r0,[r1,#0]            ;140
                  |L1.356|
000164  4814              LDR      r0,|L1.440|
000166  7800              LDRB     r0,[r0,#0]            ;143  ; audio_fail_flg
000168  b148              CBZ      r0,|L1.382|
00016a  4819              LDR      r0,|L1.464|
00016c  e9d42306          LDRD     r2,r3,[r4,#0x18]      ;145
000170  6801              LDR      r1,[r0,#0]            ;145  ; g_iRunTime
000172  a01a              ADR      r0,|L1.476|
000174  f7fffffe          BL       logger_buffer_write
000178  f06f050d          MVN      r5,#0xd               ;146
00017c  e00f              B        |L1.414|
                  |L1.382|
00017e  4814              LDR      r0,|L1.464|
000180  e9d42306          LDRD     r2,r3,[r4,#0x18]      ;149
000184  6801              LDR      r1,[r0,#0]            ;149  ; g_iRunTime
000186  a01f              ADR      r0,|L1.516|
000188  f7fffffe          BL       logger_buffer_write
00018c  2000              MOVS     r0,#0                 ;150
00018e  4906              LDR      r1,|L1.424|
000190  7008              STRB     r0,[r1,#0]            ;150
000192  e744              B        |L1.30|
                  |L1.404|
000194  bf00              NOP                            ;153
                  |L1.406|
000196  bf00              NOP                            ;155
                  |L1.408|
000198  bf00              NOP                            ;80
00019a  2001              MOVS     r0,#1                 ;158
00019c  e73f              B        |L1.30|
                  |L1.414|
00019e  2000              MOVS     r0,#0                 ;161
0001a0  4901              LDR      r1,|L1.424|
0001a2  7008              STRB     r0,[r1,#0]            ;161
0001a4  4628              MOV      r0,r5                 ;162
0001a6  e73a              B        |L1.30|
                          ENDP

                  |L1.424|
                          DCD      s_tState
                  |L1.428|
                          DCD      pattern_performance_en
                  |L1.432|
                          DCD      efuse_otp_data_brom
                  |L1.436|
                          DCD      ||dut||
                  |L1.440|
                          DCD      audio_fail_flg
                  |L1.444|
0001bc  63686970          DCB      "chip_id=0x%08X\r\n",0
0001c0  5f69643d
0001c4  30782530
0001c8  38580d0a
0001cc  00      
0001cd  00                DCB      0
0001ce  00                DCB      0
0001cf  00                DCB      0
                  |L1.464|
                          DCD      g_iRunTime
                  |L1.468|
                          DCD      timer
                  |L1.472|
                          DCD      msg_recv+0x10
                  |L1.476|
0001dc  5b253864          DCB      "[%8d]fail: audio snr,index:%d db:%d\r\n",0
0001e0  5d666169
0001e4  6c3a2061
0001e8  7564696f
0001ec  20736e72
0001f0  2c696e64
0001f4  65783a25
0001f8  64206462
0001fc  3a25640d
000200  0a00    
000202  00                DCB      0
000203  00                DCB      0
                  |L1.516|
000204  5b253864          DCB      "[%8d]SUCCESS audio snr,index:%d db:%d\r\n",0
000208  5d535543
00020c  43455353
000210  20617564
000214  696f2073
000218  6e722c69
00021c  6e646578
000220  3a256420
000224  64623a25
000228  640d0a00

                          AREA ||.data||, DATA, ALIGN=2

                  pmu_item_en
000000  01                DCB      0x01
                  osc_audio_item_en
000001  01                DCB      0x01
                  osc_pmu_item_en
000002  01                DCB      0x01
                  osc_core_item_en
000003  01                DCB      0x01
                  pattern_item_en
000004  01                DCB      0x01
                  s_tState
000005  00                DCB      0x00
                  audio_fail_flg
000006  0000              DCB      0x00,0x00
                  timer
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\kiwi_ft\\test_reboot_to_brom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_test_reboot_to_brom_c_fc30dbde____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___21_test_reboot_to_brom_c_fc30dbde____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_test_reboot_to_brom_c_fc30dbde____REVSH|
#line 144
|__asm___21_test_reboot_to_brom_c_fc30dbde____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
