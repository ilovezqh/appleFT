; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\usbd_msc_scsi.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usbd_msc_scsi.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\usbd_msc_scsi.crf ..\..\Libraries\STM32_USB_Device_Library\Class\msc\src\usbd_msc_scsi.c]
                          THUMB

                          AREA ||i.SCSI_CheckAddressRange||, CODE, READONLY, ALIGN=2

                  SCSI_CheckAddressRange PROC
;;;616    */
;;;617    static int8_t SCSI_CheckAddressRange (uint8_t lun , uint32_t blk_offset , uint16_t blk_nbr)
000000  b570              PUSH     {r4-r6,lr}
;;;618    {
000002  4606              MOV      r6,r0
000004  460c              MOV      r4,r1
000006  4615              MOV      r5,r2
;;;619      
;;;620      if ((blk_offset + blk_nbr) > SCSI_blk_nbr )
000008  1960              ADDS     r0,r4,r5
00000a  4907              LDR      r1,|L1.40|
00000c  6809              LDR      r1,[r1,#0]  ; SCSI_blk_nbr
00000e  4288              CMP      r0,r1
000010  d907              BLS      |L1.34|
;;;621      {
;;;622        SCSI_SenseCode(lun, ILLEGAL_REQUEST, ADDRESS_OUT_OF_RANGE);
000012  2221              MOVS     r2,#0x21
000014  2105              MOVS     r1,#5
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       SCSI_SenseCode
;;;623        return -1;
00001c  f04f30ff          MOV      r0,#0xffffffff
                  |L1.32|
;;;624      }
;;;625      return 0;
;;;626    }
000020  bd70              POP      {r4-r6,pc}
                  |L1.34|
000022  2000              MOVS     r0,#0                 ;625
000024  e7fc              B        |L1.32|
;;;627    
                          ENDP

000026  0000              DCW      0x0000
                  |L1.40|
                          DCD      SCSI_blk_nbr

                          AREA ||i.SCSI_Inquiry||, CODE, READONLY, ALIGN=2

                  SCSI_Inquiry PROC
;;;217    */
;;;218    static int8_t  SCSI_Inquiry(uint8_t lun, uint8_t *params)
000000  b530              PUSH     {r4,r5,lr}
;;;219    {
000002  4604              MOV      r4,r0
000004  460a              MOV      r2,r1
;;;220      uint8_t* pPage;
;;;221      uint16_t len;
;;;222      
;;;223      if (params[1] & 0x01)/*Evpd is set*/
000006  7850              LDRB     r0,[r2,#1]
000008  f0000001          AND      r0,r0,#1
00000c  b110              CBZ      r0,|L2.20|
;;;224      {
;;;225        pPage = (uint8_t *)MSC_Page00_Inquiry_Data;
00000e  4b0e              LDR      r3,|L2.72|
;;;226        len = LENGTH_INQUIRY_PAGE00;
000010  2107              MOVS     r1,#7
000012  e00c              B        |L2.46|
                  |L2.20|
;;;227      }
;;;228      else
;;;229      {
;;;230        
;;;231        pPage = (uint8_t *)&USBD_STORAGE_fops->pInquiry[lun * USBD_STD_INQUIRY_LENGTH];
000014  480d              LDR      r0,|L2.76|
000016  6800              LDR      r0,[r0,#0]  ; USBD_STORAGE_fops
000018  69c0              LDR      r0,[r0,#0x1c]
00001a  eb0405c4          ADD      r5,r4,r4,LSL #3
00001e  eb000385          ADD      r3,r0,r5,LSL #2
;;;232        len = pPage[4] + 5;
000022  7918              LDRB     r0,[r3,#4]
000024  1d41              ADDS     r1,r0,#5
;;;233        
;;;234        if (params[4] <= len)
000026  7910              LDRB     r0,[r2,#4]
000028  4288              CMP      r0,r1
00002a  dc00              BGT      |L2.46|
;;;235        {
;;;236          len = params[4];
00002c  7911              LDRB     r1,[r2,#4]
                  |L2.46|
;;;237        }
;;;238      }
;;;239      MSC_BOT_DataLen = len;
00002e  4808              LDR      r0,|L2.80|
000030  8001              STRH     r1,[r0,#0]
;;;240      
;;;241      while (len) 
000032  e004              B        |L2.62|
                  |L2.52|
;;;242      {
;;;243        len--;
000034  1e48              SUBS     r0,r1,#1
000036  b281              UXTH     r1,r0
;;;244        MSC_BOT_Data[len] = pPage[len];
000038  5c58              LDRB     r0,[r3,r1]
00003a  4d06              LDR      r5,|L2.84|
00003c  5468              STRB     r0,[r5,r1]
                  |L2.62|
00003e  2900              CMP      r1,#0                 ;241
000040  d1f8              BNE      |L2.52|
;;;245      }
;;;246      return 0;
000042  2000              MOVS     r0,#0
;;;247    }
000044  bd30              POP      {r4,r5,pc}
;;;248    
                          ENDP

000046  0000              DCW      0x0000
                  |L2.72|
                          DCD      MSC_Page00_Inquiry_Data
                  |L2.76|
                          DCD      USBD_STORAGE_fops
                  |L2.80|
                          DCD      MSC_BOT_DataLen
                  |L2.84|
                          DCD      MSC_BOT_Data

                          AREA ||i.SCSI_ModeSense10||, CODE, READONLY, ALIGN=2

                  SCSI_ModeSense10 PROC
;;;353    */
;;;354    static int8_t SCSI_ModeSense10 (uint8_t lun, uint8_t *params)
000000  b510              PUSH     {r4,lr}
;;;355    {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;356     uint16_t len = 8;
000006  2108              MOVS     r1,#8
;;;357    
;;;358     MSC_BOT_DataLen = len;
000008  4806              LDR      r0,|L3.36|
00000a  8001              STRH     r1,[r0,#0]
;;;359    
;;;360     while (len) 
00000c  e005              B        |L3.26|
                  |L3.14|
;;;361      {
;;;362        len--;
00000e  1e48              SUBS     r0,r1,#1
000010  b281              UXTH     r1,r0
;;;363        MSC_BOT_Data[len] = MSC_Mode_Sense10_data[len];
000012  4805              LDR      r0,|L3.40|
000014  5c40              LDRB     r0,[r0,r1]
000016  4c05              LDR      r4,|L3.44|
000018  5460              STRB     r0,[r4,r1]
                  |L3.26|
00001a  2900              CMP      r1,#0                 ;360
00001c  d1f7              BNE      |L3.14|
;;;364      }
;;;365      return 0;
00001e  2000              MOVS     r0,#0
;;;366    }
000020  bd10              POP      {r4,pc}
;;;367    
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      MSC_BOT_DataLen
                  |L3.40|
                          DCD      MSC_Mode_Sense10_data
                  |L3.44|
                          DCD      MSC_BOT_Data

                          AREA ||i.SCSI_ModeSense6||, CODE, READONLY, ALIGN=2

                  SCSI_ModeSense6 PROC
;;;332    */
;;;333    static int8_t SCSI_ModeSense6 (uint8_t lun, uint8_t *params)
000000  b510              PUSH     {r4,lr}
;;;334    {
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;335      
;;;336      uint16_t len = 8 ;
000006  2108              MOVS     r1,#8
;;;337      MSC_BOT_DataLen = len;
000008  4806              LDR      r0,|L4.36|
00000a  8001              STRH     r1,[r0,#0]
;;;338      
;;;339      while (len) 
00000c  e005              B        |L4.26|
                  |L4.14|
;;;340      {
;;;341        len--;
00000e  1e48              SUBS     r0,r1,#1
000010  b281              UXTH     r1,r0
;;;342        MSC_BOT_Data[len] = MSC_Mode_Sense6_data[len];
000012  4805              LDR      r0,|L4.40|
000014  5c40              LDRB     r0,[r0,r1]
000016  4c05              LDR      r4,|L4.44|
000018  5460              STRB     r0,[r4,r1]
                  |L4.26|
00001a  2900              CMP      r1,#0                 ;339
00001c  d1f7              BNE      |L4.14|
;;;343      }
;;;344      return 0;
00001e  2000              MOVS     r0,#0
;;;345    }
000020  bd10              POP      {r4,pc}
;;;346    
                          ENDP

000022  0000              DCW      0x0000
                  |L4.36|
                          DCD      MSC_BOT_DataLen
                  |L4.40|
                          DCD      MSC_Mode_Sense6_data
                  |L4.44|
                          DCD      MSC_BOT_Data

                          AREA ||i.SCSI_ProcessCmd||, CODE, READONLY, ALIGN=2

                  SCSI_ProcessCmd PROC
;;;128    */
;;;129    int8_t SCSI_ProcessCmd(USB_OTG_CORE_HANDLE  *pdev,
000000  b570              PUSH     {r4-r6,lr}
;;;130                               uint8_t lun, 
;;;131                               uint8_t *params)
;;;132    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
000006  4614              MOV      r4,r2
;;;133      cdev = pdev;
000008  4832              LDR      r0,|L5.212|
00000a  6005              STR      r5,[r0,#0]  ; cdev
;;;134      
;;;135      switch (params[0])
00000c  7820              LDRB     r0,[r4,#0]
00000e  2823              CMP      r0,#0x23
000010  d03e              BEQ      |L5.144|
000012  dc0d              BGT      |L5.48|
000014  281a              CMP      r0,#0x1a
000016  d031              BEQ      |L5.124|
000018  dc05              BGT      |L5.38|
00001a  b1b0              CBZ      r0,|L5.74|
00001c  2803              CMP      r0,#3
00001e  d019              BEQ      |L5.84|
000020  2812              CMP      r0,#0x12
000022  d14e              BNE      |L5.194|
000024  e01b              B        |L5.94|
                  |L5.38|
000026  281b              CMP      r0,#0x1b
000028  d01e              BEQ      |L5.104|
00002a  281e              CMP      r0,#0x1e
00002c  d149              BNE      |L5.194|
00002e  e020              B        |L5.114|
                  |L5.48|
000030  282a              CMP      r0,#0x2a
000032  d03c              BEQ      |L5.174|
000034  dc04              BGT      |L5.64|
000036  2825              CMP      r0,#0x25
000038  d02f              BEQ      |L5.154|
00003a  2828              CMP      r0,#0x28
00003c  d141              BNE      |L5.194|
00003e  e031              B        |L5.164|
                  |L5.64|
000040  282f              CMP      r0,#0x2f
000042  d039              BEQ      |L5.184|
000044  285a              CMP      r0,#0x5a
000046  d13c              BNE      |L5.194|
000048  e01d              B        |L5.134|
                  |L5.74|
;;;136      {
;;;137      case SCSI_TEST_UNIT_READY:
;;;138        return SCSI_TestUnitReady(lun, params);
00004a  4621              MOV      r1,r4
00004c  4630              MOV      r0,r6
00004e  f7fffffe          BL       SCSI_TestUnitReady
                  |L5.82|
;;;139        
;;;140      case SCSI_REQUEST_SENSE:
;;;141        return SCSI_RequestSense (lun, params);
;;;142      case SCSI_INQUIRY:
;;;143        return SCSI_Inquiry(lun, params);
;;;144        
;;;145      case SCSI_START_STOP_UNIT:
;;;146        return SCSI_StartStopUnit(lun, params);
;;;147        
;;;148      case SCSI_ALLOW_MEDIUM_REMOVAL:
;;;149        return SCSI_StartStopUnit(lun, params);
;;;150        
;;;151      case SCSI_MODE_SENSE6:
;;;152        return SCSI_ModeSense6 (lun, params);
;;;153        
;;;154      case SCSI_MODE_SENSE10:
;;;155        return SCSI_ModeSense10 (lun, params);
;;;156        
;;;157      case SCSI_READ_FORMAT_CAPACITIES:
;;;158        return SCSI_ReadFormatCapacity(lun, params);
;;;159        
;;;160      case SCSI_READ_CAPACITY10:
;;;161        return SCSI_ReadCapacity10(lun, params);
;;;162        
;;;163      case SCSI_READ10:
;;;164        return SCSI_Read10(lun, params); 
;;;165        
;;;166      case SCSI_WRITE10:
;;;167        return SCSI_Write10(lun, params);
;;;168        
;;;169      case SCSI_VERIFY10:
;;;170        return SCSI_Verify10(lun, params);
;;;171        
;;;172      default:
;;;173        SCSI_SenseCode(lun,
;;;174                       ILLEGAL_REQUEST, 
;;;175                       INVALID_CDB);    
;;;176        return -1;
;;;177      }
;;;178    }
000052  bd70              POP      {r4-r6,pc}
                  |L5.84|
000054  4621              MOV      r1,r4                 ;141
000056  4630              MOV      r0,r6                 ;141
000058  f7fffffe          BL       SCSI_RequestSense
00005c  e7f9              B        |L5.82|
                  |L5.94|
00005e  4621              MOV      r1,r4                 ;143
000060  4630              MOV      r0,r6                 ;143
000062  f7fffffe          BL       SCSI_Inquiry
000066  e7f4              B        |L5.82|
                  |L5.104|
000068  4621              MOV      r1,r4                 ;146
00006a  4630              MOV      r0,r6                 ;146
00006c  f7fffffe          BL       SCSI_StartStopUnit
000070  e7ef              B        |L5.82|
                  |L5.114|
000072  4621              MOV      r1,r4                 ;149
000074  4630              MOV      r0,r6                 ;149
000076  f7fffffe          BL       SCSI_StartStopUnit
00007a  e7ea              B        |L5.82|
                  |L5.124|
00007c  4621              MOV      r1,r4                 ;152
00007e  4630              MOV      r0,r6                 ;152
000080  f7fffffe          BL       SCSI_ModeSense6
000084  e7e5              B        |L5.82|
                  |L5.134|
000086  4621              MOV      r1,r4                 ;155
000088  4630              MOV      r0,r6                 ;155
00008a  f7fffffe          BL       SCSI_ModeSense10
00008e  e7e0              B        |L5.82|
                  |L5.144|
000090  4621              MOV      r1,r4                 ;158
000092  4630              MOV      r0,r6                 ;158
000094  f7fffffe          BL       SCSI_ReadFormatCapacity
000098  e7db              B        |L5.82|
                  |L5.154|
00009a  4621              MOV      r1,r4                 ;161
00009c  4630              MOV      r0,r6                 ;161
00009e  f7fffffe          BL       SCSI_ReadCapacity10
0000a2  e7d6              B        |L5.82|
                  |L5.164|
0000a4  4621              MOV      r1,r4                 ;164
0000a6  4630              MOV      r0,r6                 ;164
0000a8  f7fffffe          BL       SCSI_Read10
0000ac  e7d1              B        |L5.82|
                  |L5.174|
0000ae  4621              MOV      r1,r4                 ;167
0000b0  4630              MOV      r0,r6                 ;167
0000b2  f7fffffe          BL       SCSI_Write10
0000b6  e7cc              B        |L5.82|
                  |L5.184|
0000b8  4621              MOV      r1,r4                 ;170
0000ba  4630              MOV      r0,r6                 ;170
0000bc  f7fffffe          BL       SCSI_Verify10
0000c0  e7c7              B        |L5.82|
                  |L5.194|
0000c2  2220              MOVS     r2,#0x20              ;173
0000c4  2105              MOVS     r1,#5                 ;173
0000c6  4630              MOV      r0,r6                 ;173
0000c8  f7fffffe          BL       SCSI_SenseCode
0000cc  f04f30ff          MOV      r0,#0xffffffff        ;176
0000d0  e7bf              B        |L5.82|
;;;179    
                          ENDP

0000d2  0000              DCW      0x0000
                  |L5.212|
                          DCD      cdev

                          AREA ||i.SCSI_ProcessRead||, CODE, READONLY, ALIGN=2

                  SCSI_ProcessRead PROC
;;;633    */
;;;634    static int8_t SCSI_ProcessRead (uint8_t lun)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;635    {
000004  4605              MOV      r5,r0
;;;636      uint32_t len;
;;;637      
;;;638      len = MIN(SCSI_blk_len , MSC_MEDIA_PACKET); 
000006  4824              LDR      r0,|L6.152|
000008  6800              LDR      r0,[r0,#0]  ; SCSI_blk_len
00000a  f5b05f80          CMP      r0,#0x1000
00000e  d202              BCS      |L6.22|
000010  4821              LDR      r0,|L6.152|
000012  6800              LDR      r0,[r0,#0]  ; SCSI_blk_len
000014  e001              B        |L6.26|
                  |L6.22|
000016  f44f5080          MOV      r0,#0x1000
                  |L6.26|
00001a  4604              MOV      r4,r0
;;;639      
;;;640      if( USBD_STORAGE_fops->Read(lun ,
00001c  481f              LDR      r0,|L6.156|
00001e  6800              LDR      r0,[r0,#0]  ; SCSI_blk_size
000020  fbb4f0f0          UDIV     r0,r4,r0
000024  b286              UXTH     r6,r0
000026  481e              LDR      r0,|L6.160|
000028  6800              LDR      r0,[r0,#0]  ; SCSI_blk_addr
00002a  491c              LDR      r1,|L6.156|
00002c  6809              LDR      r1,[r1,#0]  ; SCSI_blk_size
00002e  fbb0f7f1          UDIV     r7,r0,r1
000032  481c              LDR      r0,|L6.164|
000034  6800              LDR      r0,[r0,#0]  ; USBD_STORAGE_fops
000036  4633              MOV      r3,r6
000038  463a              MOV      r2,r7
00003a  491b              LDR      r1,|L6.168|
00003c  f8d0c010          LDR      r12,[r0,#0x10]
000040  4628              MOV      r0,r5
000042  47e0              BLX      r12
000044  2800              CMP      r0,#0
000046  da08              BGE      |L6.90|
;;;641                                  MSC_BOT_Data, 
;;;642                                  SCSI_blk_addr / SCSI_blk_size, 
;;;643                                  len / SCSI_blk_size) < 0)
;;;644      {
;;;645        
;;;646        SCSI_SenseCode(lun, HARDWARE_ERROR, UNRECOVERED_READ_ERROR);
000048  2211              MOVS     r2,#0x11
00004a  2104              MOVS     r1,#4
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       SCSI_SenseCode
;;;647        return -1; 
000052  f04f30ff          MOV      r0,#0xffffffff
                  |L6.86|
;;;648      }
;;;649      
;;;650      
;;;651      DCD_EP_Tx (cdev, 
;;;652                 MSC_IN_EP,
;;;653                 MSC_BOT_Data,
;;;654                 len);
;;;655      
;;;656      
;;;657      SCSI_blk_addr   += len; 
;;;658      SCSI_blk_len    -= len;  
;;;659      
;;;660      /* case 6 : Hi = Di */
;;;661      MSC_BOT_csw.dDataResidue -= len;
;;;662      
;;;663      if (SCSI_blk_len == 0)
;;;664      {
;;;665        MSC_BOT_State = BOT_LAST_DATA_IN;
;;;666      }
;;;667      return 0;
;;;668    }
000056  e8bd81f0          POP      {r4-r8,pc}
                  |L6.90|
00005a  4623              MOV      r3,r4                 ;651
00005c  4a12              LDR      r2,|L6.168|
00005e  2181              MOVS     r1,#0x81              ;651
000060  4812              LDR      r0,|L6.172|
000062  6800              LDR      r0,[r0,#0]            ;651  ; cdev
000064  f7fffffe          BL       DCD_EP_Tx
000068  480d              LDR      r0,|L6.160|
00006a  6800              LDR      r0,[r0,#0]            ;657  ; SCSI_blk_addr
00006c  4420              ADD      r0,r0,r4              ;657
00006e  490c              LDR      r1,|L6.160|
000070  6008              STR      r0,[r1,#0]            ;657  ; SCSI_blk_addr
000072  4809              LDR      r0,|L6.152|
000074  6800              LDR      r0,[r0,#0]            ;658  ; SCSI_blk_len
000076  1b00              SUBS     r0,r0,r4              ;658
000078  4907              LDR      r1,|L6.152|
00007a  6008              STR      r0,[r1,#0]            ;658  ; SCSI_blk_len
00007c  480c              LDR      r0,|L6.176|
00007e  6880              LDR      r0,[r0,#8]            ;661  ; MSC_BOT_csw
000080  1b00              SUBS     r0,r0,r4              ;661
000082  490b              LDR      r1,|L6.176|
000084  6088              STR      r0,[r1,#8]            ;661  ; MSC_BOT_csw
000086  4804              LDR      r0,|L6.152|
000088  6800              LDR      r0,[r0,#0]            ;663  ; SCSI_blk_len
00008a  b910              CBNZ     r0,|L6.146|
00008c  2003              MOVS     r0,#3                 ;665
00008e  4909              LDR      r1,|L6.180|
000090  7008              STRB     r0,[r1,#0]            ;665
                  |L6.146|
000092  2000              MOVS     r0,#0                 ;667
000094  e7df              B        |L6.86|
;;;669    
                          ENDP

000096  0000              DCW      0x0000
                  |L6.152|
                          DCD      SCSI_blk_len
                  |L6.156|
                          DCD      SCSI_blk_size
                  |L6.160|
                          DCD      SCSI_blk_addr
                  |L6.164|
                          DCD      USBD_STORAGE_fops
                  |L6.168|
                          DCD      MSC_BOT_Data
                  |L6.172|
                          DCD      cdev
                  |L6.176|
                          DCD      MSC_BOT_csw
                  |L6.180|
                          DCD      MSC_BOT_State

                          AREA ||i.SCSI_ProcessWrite||, CODE, READONLY, ALIGN=2

                  SCSI_ProcessWrite PROC
;;;676    
;;;677    static int8_t SCSI_ProcessWrite (uint8_t lun)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;678    {
000004  4605              MOV      r5,r0
;;;679      uint32_t len;
;;;680      
;;;681      len = MIN(SCSI_blk_len , MSC_MEDIA_PACKET); 
000006  482a              LDR      r0,|L7.176|
000008  6800              LDR      r0,[r0,#0]  ; SCSI_blk_len
00000a  f5b05f80          CMP      r0,#0x1000
00000e  d202              BCS      |L7.22|
000010  4827              LDR      r0,|L7.176|
000012  6800              LDR      r0,[r0,#0]  ; SCSI_blk_len
000014  e001              B        |L7.26|
                  |L7.22|
000016  f44f5080          MOV      r0,#0x1000
                  |L7.26|
00001a  4604              MOV      r4,r0
;;;682      
;;;683      if(USBD_STORAGE_fops->Write(lun ,
00001c  4825              LDR      r0,|L7.180|
00001e  6800              LDR      r0,[r0,#0]  ; SCSI_blk_size
000020  fbb4f0f0          UDIV     r0,r4,r0
000024  b286              UXTH     r6,r0
000026  4824              LDR      r0,|L7.184|
000028  6800              LDR      r0,[r0,#0]  ; SCSI_blk_addr
00002a  4922              LDR      r1,|L7.180|
00002c  6809              LDR      r1,[r1,#0]  ; SCSI_blk_size
00002e  fbb0f7f1          UDIV     r7,r0,r1
000032  4822              LDR      r0,|L7.188|
000034  6800              LDR      r0,[r0,#0]  ; USBD_STORAGE_fops
000036  4633              MOV      r3,r6
000038  463a              MOV      r2,r7
00003a  4921              LDR      r1,|L7.192|
00003c  f8d0c014          LDR      r12,[r0,#0x14]
000040  4628              MOV      r0,r5
000042  47e0              BLX      r12
000044  2800              CMP      r0,#0
000046  da08              BGE      |L7.90|
;;;684                                  MSC_BOT_Data, 
;;;685                                  SCSI_blk_addr / SCSI_blk_size, 
;;;686                                  len / SCSI_blk_size) < 0)
;;;687      {
;;;688        SCSI_SenseCode(lun, HARDWARE_ERROR, WRITE_FAULT);     
000048  2203              MOVS     r2,#3
00004a  2104              MOVS     r1,#4
00004c  4628              MOV      r0,r5
00004e  f7fffffe          BL       SCSI_SenseCode
;;;689        return -1; 
000052  f04f30ff          MOV      r0,#0xffffffff
                  |L7.86|
;;;690      }
;;;691      
;;;692      
;;;693      SCSI_blk_addr  += len; 
;;;694      SCSI_blk_len   -= len; 
;;;695      
;;;696      /* case 12 : Ho = Do */
;;;697      MSC_BOT_csw.dDataResidue -= len;
;;;698      
;;;699      if (SCSI_blk_len == 0)
;;;700      {
;;;701        MSC_BOT_SendCSW (cdev, CSW_CMD_PASSED);
;;;702      }
;;;703      else
;;;704      {
;;;705        /* Prapare EP to Receive next packet */
;;;706        DCD_EP_PrepareRx (cdev,
;;;707                          MSC_OUT_EP,
;;;708                          MSC_BOT_Data, 
;;;709                          MIN (SCSI_blk_len, MSC_MEDIA_PACKET)); 
;;;710      }
;;;711      
;;;712      return 0;
;;;713    }
000056  e8bd81f0          POP      {r4-r8,pc}
                  |L7.90|
00005a  4817              LDR      r0,|L7.184|
00005c  6800              LDR      r0,[r0,#0]            ;693  ; SCSI_blk_addr
00005e  4420              ADD      r0,r0,r4              ;693
000060  4915              LDR      r1,|L7.184|
000062  6008              STR      r0,[r1,#0]            ;693  ; SCSI_blk_addr
000064  4812              LDR      r0,|L7.176|
000066  6800              LDR      r0,[r0,#0]            ;694  ; SCSI_blk_len
000068  1b00              SUBS     r0,r0,r4              ;694
00006a  4911              LDR      r1,|L7.176|
00006c  6008              STR      r0,[r1,#0]            ;694  ; SCSI_blk_len
00006e  4815              LDR      r0,|L7.196|
000070  6880              LDR      r0,[r0,#8]            ;697  ; MSC_BOT_csw
000072  1b00              SUBS     r0,r0,r4              ;697
000074  4913              LDR      r1,|L7.196|
000076  6088              STR      r0,[r1,#8]            ;697  ; MSC_BOT_csw
000078  480d              LDR      r0,|L7.176|
00007a  6800              LDR      r0,[r0,#0]            ;699  ; SCSI_blk_len
00007c  b928              CBNZ     r0,|L7.138|
00007e  2100              MOVS     r1,#0                 ;701
000080  4811              LDR      r0,|L7.200|
000082  6800              LDR      r0,[r0,#0]            ;701  ; cdev
000084  f7fffffe          BL       MSC_BOT_SendCSW
000088  e010              B        |L7.172|
                  |L7.138|
00008a  4809              LDR      r0,|L7.176|
00008c  6800              LDR      r0,[r0,#0]            ;706  ; SCSI_blk_len
00008e  f5b05f80          CMP      r0,#0x1000            ;706
000092  d202              BCS      |L7.154|
000094  4806              LDR      r0,|L7.176|
000096  6800              LDR      r0,[r0,#0]            ;709  ; SCSI_blk_len
000098  e001              B        |L7.158|
                  |L7.154|
00009a  f44f5080          MOV      r0,#0x1000            ;709
                  |L7.158|
00009e  b283              UXTH     r3,r0                 ;709
0000a0  4a07              LDR      r2,|L7.192|
0000a2  2101              MOVS     r1,#1                 ;709
0000a4  4808              LDR      r0,|L7.200|
0000a6  6800              LDR      r0,[r0,#0]            ;709  ; cdev
0000a8  f7fffffe          BL       DCD_EP_PrepareRx
                  |L7.172|
0000ac  2000              MOVS     r0,#0                 ;712
0000ae  e7d2              B        |L7.86|
;;;714    /**
                          ENDP

                  |L7.176|
                          DCD      SCSI_blk_len
                  |L7.180|
                          DCD      SCSI_blk_size
                  |L7.184|
                          DCD      SCSI_blk_addr
                  |L7.188|
                          DCD      USBD_STORAGE_fops
                  |L7.192|
                          DCD      MSC_BOT_Data
                  |L7.196|
                          DCD      MSC_BOT_csw
                  |L7.200|
                          DCD      cdev

                          AREA ||i.SCSI_Read10||, CODE, READONLY, ALIGN=2

                  SCSI_Read10 PROC
;;;447    */
;;;448    static int8_t SCSI_Read10(uint8_t lun , uint8_t *params)
000000  b570              PUSH     {r4-r6,lr}
;;;449    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;450      if(MSC_BOT_State == BOT_IDLE)  /* Idle */
000006  4833              LDR      r0,|L8.212|
000008  7800              LDRB     r0,[r0,#0]  ; MSC_BOT_State
00000a  2800              CMP      r0,#0
00000c  d15a              BNE      |L8.196|
;;;451      {
;;;452        
;;;453        /* case 10 : Ho <> Di */
;;;454        
;;;455        if ((MSC_BOT_cbw.bmFlags & 0x80) != 0x80)
00000e  4832              LDR      r0,|L8.216|
000010  7b00              LDRB     r0,[r0,#0xc]  ; MSC_BOT_cbw
000012  f0000080          AND      r0,r0,#0x80
000016  2880              CMP      r0,#0x80
000018  d008              BEQ      |L8.44|
;;;456        {
;;;457          SCSI_SenseCode(MSC_BOT_cbw.bLUN, 
00001a  492f              LDR      r1,|L8.216|
00001c  7b48              LDRB     r0,[r1,#0xd]  ; MSC_BOT_cbw
00001e  2220              MOVS     r2,#0x20
000020  2105              MOVS     r1,#5
000022  f7fffffe          BL       SCSI_SenseCode
;;;458                         ILLEGAL_REQUEST, 
;;;459                         INVALID_CDB);
;;;460          return -1;
000026  f04f30ff          MOV      r0,#0xffffffff
                  |L8.42|
;;;461        }    
;;;462        
;;;463        if(USBD_STORAGE_fops->IsReady(lun) !=0 )
;;;464        {
;;;465          SCSI_SenseCode(lun,
;;;466                         NOT_READY, 
;;;467                         MEDIUM_NOT_PRESENT);
;;;468          return -1;
;;;469        } 
;;;470        
;;;471        SCSI_blk_addr = (params[2] << 24) | \
;;;472          (params[3] << 16) | \
;;;473            (params[4] <<  8) | \
;;;474              params[5];
;;;475        
;;;476        SCSI_blk_len =  (params[7] <<  8) | \
;;;477          params[8];  
;;;478        
;;;479        
;;;480        
;;;481        if( SCSI_CheckAddressRange(lun, SCSI_blk_addr, SCSI_blk_len) < 0)
;;;482        {
;;;483          return -1; /* error */
;;;484        }
;;;485        
;;;486        MSC_BOT_State = BOT_DATA_IN;
;;;487        SCSI_blk_addr *= SCSI_blk_size;
;;;488        SCSI_blk_len  *= SCSI_blk_size;
;;;489        
;;;490        /* cases 4,5 : Hi <> Dn */
;;;491        if (MSC_BOT_cbw.dDataLength != SCSI_blk_len)
;;;492        {
;;;493          SCSI_SenseCode(MSC_BOT_cbw.bLUN, 
;;;494                         ILLEGAL_REQUEST, 
;;;495                         INVALID_CDB);
;;;496          return -1;
;;;497        }
;;;498      }
;;;499      MSC_BOT_DataLen = MSC_MEDIA_PACKET;  
;;;500      
;;;501      return SCSI_ProcessRead(lun);
;;;502    }
00002a  bd70              POP      {r4-r6,pc}
                  |L8.44|
00002c  482b              LDR      r0,|L8.220|
00002e  6800              LDR      r0,[r0,#0]            ;463  ; USBD_STORAGE_fops
000030  6881              LDR      r1,[r0,#8]            ;463
000032  4628              MOV      r0,r5                 ;463
000034  4788              BLX      r1                    ;463
000036  b138              CBZ      r0,|L8.72|
000038  223a              MOVS     r2,#0x3a              ;465
00003a  2102              MOVS     r1,#2                 ;465
00003c  4628              MOV      r0,r5                 ;465
00003e  f7fffffe          BL       SCSI_SenseCode
000042  f04f30ff          MOV      r0,#0xffffffff        ;468
000046  e7f0              B        |L8.42|
                  |L8.72|
000048  78a0              LDRB     r0,[r4,#2]            ;471
00004a  0600              LSLS     r0,r0,#24             ;471
00004c  78e1              LDRB     r1,[r4,#3]            ;471
00004e  ea404001          ORR      r0,r0,r1,LSL #16      ;471
000052  7921              LDRB     r1,[r4,#4]            ;471
000054  ea402001          ORR      r0,r0,r1,LSL #8       ;471
000058  7961              LDRB     r1,[r4,#5]            ;471
00005a  4308              ORRS     r0,r0,r1              ;471
00005c  4920              LDR      r1,|L8.224|
00005e  6008              STR      r0,[r1,#0]            ;471  ; SCSI_blk_addr
000060  7a20              LDRB     r0,[r4,#8]            ;476
000062  79e1              LDRB     r1,[r4,#7]            ;476
000064  ea402001          ORR      r0,r0,r1,LSL #8       ;476
000068  491e              LDR      r1,|L8.228|
00006a  6008              STR      r0,[r1,#0]            ;476  ; SCSI_blk_len
00006c  4608              MOV      r0,r1                 ;481
00006e  8800              LDRH     r0,[r0,#0]            ;481  ; SCSI_blk_len
000070  b282              UXTH     r2,r0                 ;481
000072  481b              LDR      r0,|L8.224|
000074  6801              LDR      r1,[r0,#0]            ;481  ; SCSI_blk_addr
000076  4628              MOV      r0,r5                 ;481
000078  f7fffffe          BL       SCSI_CheckAddressRange
00007c  2800              CMP      r0,#0                 ;481
00007e  da02              BGE      |L8.134|
000080  f04f30ff          MOV      r0,#0xffffffff        ;483
000084  e7d1              B        |L8.42|
                  |L8.134|
000086  2002              MOVS     r0,#2                 ;486
000088  4912              LDR      r1,|L8.212|
00008a  7008              STRB     r0,[r1,#0]            ;486
00008c  4814              LDR      r0,|L8.224|
00008e  6800              LDR      r0,[r0,#0]            ;487  ; SCSI_blk_addr
000090  4915              LDR      r1,|L8.232|
000092  6809              LDR      r1,[r1,#0]            ;487  ; SCSI_blk_size
000094  4348              MULS     r0,r1,r0              ;487
000096  4912              LDR      r1,|L8.224|
000098  6008              STR      r0,[r1,#0]            ;487  ; SCSI_blk_addr
00009a  4812              LDR      r0,|L8.228|
00009c  6800              LDR      r0,[r0,#0]            ;488  ; SCSI_blk_len
00009e  4912              LDR      r1,|L8.232|
0000a0  6809              LDR      r1,[r1,#0]            ;488  ; SCSI_blk_size
0000a2  4348              MULS     r0,r1,r0              ;488
0000a4  490f              LDR      r1,|L8.228|
0000a6  6008              STR      r0,[r1,#0]            ;488  ; SCSI_blk_len
0000a8  480b              LDR      r0,|L8.216|
0000aa  6880              LDR      r0,[r0,#8]            ;491  ; MSC_BOT_cbw
0000ac  6809              LDR      r1,[r1,#0]            ;491  ; SCSI_blk_len
0000ae  4288              CMP      r0,r1                 ;491
0000b0  d008              BEQ      |L8.196|
0000b2  4909              LDR      r1,|L8.216|
0000b4  7b48              LDRB     r0,[r1,#0xd]          ;493  ; MSC_BOT_cbw
0000b6  2220              MOVS     r2,#0x20              ;493
0000b8  2105              MOVS     r1,#5                 ;493
0000ba  f7fffffe          BL       SCSI_SenseCode
0000be  f04f30ff          MOV      r0,#0xffffffff        ;496
0000c2  e7b2              B        |L8.42|
                  |L8.196|
0000c4  f44f5080          MOV      r0,#0x1000            ;499
0000c8  4908              LDR      r1,|L8.236|
0000ca  8008              STRH     r0,[r1,#0]            ;499
0000cc  4628              MOV      r0,r5                 ;501
0000ce  f7fffffe          BL       SCSI_ProcessRead
0000d2  e7aa              B        |L8.42|
;;;503    
                          ENDP

                  |L8.212|
                          DCD      MSC_BOT_State
                  |L8.216|
                          DCD      MSC_BOT_cbw
                  |L8.220|
                          DCD      USBD_STORAGE_fops
                  |L8.224|
                          DCD      SCSI_blk_addr
                  |L8.228|
                          DCD      SCSI_blk_len
                  |L8.232|
                          DCD      SCSI_blk_size
                  |L8.236|
                          DCD      MSC_BOT_DataLen

                          AREA ||i.SCSI_ReadCapacity10||, CODE, READONLY, ALIGN=2

                  SCSI_ReadCapacity10 PROC
;;;255    */
;;;256    static int8_t SCSI_ReadCapacity10(uint8_t lun, uint8_t *params)
000000  b570              PUSH     {r4-r6,lr}
;;;257    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;258      
;;;259      if(USBD_STORAGE_fops->GetCapacity(lun, &SCSI_blk_nbr, &SCSI_blk_size) != 0)
000006  481c              LDR      r0,|L9.120|
000008  6800              LDR      r0,[r0,#0]  ; USBD_STORAGE_fops
00000a  4a1c              LDR      r2,|L9.124|
00000c  491c              LDR      r1,|L9.128|
00000e  6843              LDR      r3,[r0,#4]
000010  4620              MOV      r0,r4
000012  4798              BLX      r3
000014  b138              CBZ      r0,|L9.38|
;;;260      {
;;;261        SCSI_SenseCode(lun,
000016  223a              MOVS     r2,#0x3a
000018  2102              MOVS     r1,#2
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       SCSI_SenseCode
;;;262                       NOT_READY, 
;;;263                       MEDIUM_NOT_PRESENT);
;;;264        return -1;
000020  f04f30ff          MOV      r0,#0xffffffff
                  |L9.36|
;;;265      } 
;;;266      else
;;;267      {
;;;268        
;;;269        MSC_BOT_Data[0] = (uint8_t)(SCSI_blk_nbr - 1 >> 24);
;;;270        MSC_BOT_Data[1] = (uint8_t)(SCSI_blk_nbr - 1 >> 16);
;;;271        MSC_BOT_Data[2] = (uint8_t)(SCSI_blk_nbr - 1 >>  8);
;;;272        MSC_BOT_Data[3] = (uint8_t)(SCSI_blk_nbr - 1);
;;;273        
;;;274        MSC_BOT_Data[4] = (uint8_t)(SCSI_blk_size >>  24);
;;;275        MSC_BOT_Data[5] = (uint8_t)(SCSI_blk_size >>  16);
;;;276        MSC_BOT_Data[6] = (uint8_t)(SCSI_blk_size >>  8);
;;;277        MSC_BOT_Data[7] = (uint8_t)(SCSI_blk_size);
;;;278        
;;;279        MSC_BOT_DataLen = 8;
;;;280        return 0;
;;;281      }
;;;282    }
000024  bd70              POP      {r4-r6,pc}
                  |L9.38|
000026  4816              LDR      r0,|L9.128|
000028  6800              LDR      r0,[r0,#0]            ;269  ; SCSI_blk_nbr
00002a  1e40              SUBS     r0,r0,#1              ;269
00002c  0e00              LSRS     r0,r0,#24             ;269
00002e  4915              LDR      r1,|L9.132|
000030  7008              STRB     r0,[r1,#0]            ;269
000032  4813              LDR      r0,|L9.128|
000034  6800              LDR      r0,[r0,#0]            ;270  ; SCSI_blk_nbr
000036  1e40              SUBS     r0,r0,#1              ;270
000038  0c00              LSRS     r0,r0,#16             ;270
00003a  7048              STRB     r0,[r1,#1]            ;270
00003c  4810              LDR      r0,|L9.128|
00003e  8800              LDRH     r0,[r0,#0]            ;271  ; SCSI_blk_nbr
000040  1e40              SUBS     r0,r0,#1              ;271
000042  0a00              LSRS     r0,r0,#8              ;271
000044  7088              STRB     r0,[r1,#2]            ;271
000046  480e              LDR      r0,|L9.128|
000048  7800              LDRB     r0,[r0,#0]            ;272  ; SCSI_blk_nbr
00004a  1e40              SUBS     r0,r0,#1              ;272
00004c  70c8              STRB     r0,[r1,#3]            ;272
00004e  480b              LDR      r0,|L9.124|
000050  6800              LDR      r0,[r0,#0]            ;274  ; SCSI_blk_size
000052  0e00              LSRS     r0,r0,#24             ;274
000054  7108              STRB     r0,[r1,#4]            ;274
000056  4809              LDR      r0,|L9.124|
000058  6800              LDR      r0,[r0,#0]            ;275  ; SCSI_blk_size
00005a  0c00              LSRS     r0,r0,#16             ;275
00005c  7148              STRB     r0,[r1,#5]            ;275
00005e  4807              LDR      r0,|L9.124|
000060  8800              LDRH     r0,[r0,#0]            ;276  ; SCSI_blk_size
000062  0a00              LSRS     r0,r0,#8              ;276
000064  7188              STRB     r0,[r1,#6]            ;276
000066  4805              LDR      r0,|L9.124|
000068  7800              LDRB     r0,[r0,#0]            ;277  ; SCSI_blk_size
00006a  71c8              STRB     r0,[r1,#7]            ;277
00006c  2008              MOVS     r0,#8                 ;279
00006e  4906              LDR      r1,|L9.136|
000070  8008              STRH     r0,[r1,#0]            ;279
000072  2000              MOVS     r0,#0                 ;280
000074  e7d6              B        |L9.36|
;;;283    /**
                          ENDP

000076  0000              DCW      0x0000
                  |L9.120|
                          DCD      USBD_STORAGE_fops
                  |L9.124|
                          DCD      SCSI_blk_size
                  |L9.128|
                          DCD      SCSI_blk_nbr
                  |L9.132|
                          DCD      MSC_BOT_Data
                  |L9.136|
                          DCD      MSC_BOT_DataLen

                          AREA ||i.SCSI_ReadFormatCapacity||, CODE, READONLY, ALIGN=2

                  SCSI_ReadFormatCapacity PROC
;;;289    */
;;;290    static int8_t SCSI_ReadFormatCapacity(uint8_t lun, uint8_t *params)
000000  b57c              PUSH     {r2-r6,lr}
;;;291    {
000002  4605              MOV      r5,r0
000004  460e              MOV      r6,r1
;;;292      
;;;293      uint32_t blk_size;
;;;294      uint32_t blk_nbr;
;;;295      uint16_t i;
;;;296      
;;;297      for(i=0 ; i < 12 ; i++) 
000006  2400              MOVS     r4,#0
000008  e004              B        |L10.20|
                  |L10.10|
;;;298      {
;;;299        MSC_BOT_Data[i] = 0;
00000a  2000              MOVS     r0,#0
00000c  491b              LDR      r1,|L10.124|
00000e  5508              STRB     r0,[r1,r4]
000010  1c60              ADDS     r0,r4,#1              ;297
000012  b284              UXTH     r4,r0                 ;297
                  |L10.20|
000014  2c0c              CMP      r4,#0xc               ;297
000016  dbf8              BLT      |L10.10|
;;;300      }
;;;301      
;;;302      if(USBD_STORAGE_fops->GetCapacity(lun, &blk_nbr, &blk_size) != 0)
000018  4819              LDR      r0,|L10.128|
00001a  6800              LDR      r0,[r0,#0]  ; USBD_STORAGE_fops
00001c  aa01              ADD      r2,sp,#4
00001e  4669              MOV      r1,sp
000020  6843              LDR      r3,[r0,#4]
000022  4628              MOV      r0,r5
000024  4798              BLX      r3
000026  b138              CBZ      r0,|L10.56|
;;;303      {
;;;304        SCSI_SenseCode(lun,
000028  223a              MOVS     r2,#0x3a
00002a  2102              MOVS     r1,#2
00002c  4628              MOV      r0,r5
00002e  f7fffffe          BL       SCSI_SenseCode
;;;305                       NOT_READY, 
;;;306                       MEDIUM_NOT_PRESENT);
;;;307        return -1;
000032  f04f30ff          MOV      r0,#0xffffffff
                  |L10.54|
;;;308      } 
;;;309      else
;;;310      {
;;;311        MSC_BOT_Data[3] = 0x08;
;;;312        MSC_BOT_Data[4] = (uint8_t)(blk_nbr - 1 >> 24);
;;;313        MSC_BOT_Data[5] = (uint8_t)(blk_nbr - 1 >> 16);
;;;314        MSC_BOT_Data[6] = (uint8_t)(blk_nbr - 1 >>  8);
;;;315        MSC_BOT_Data[7] = (uint8_t)(blk_nbr - 1);
;;;316        
;;;317        MSC_BOT_Data[8] = 0x02;
;;;318        MSC_BOT_Data[9] = (uint8_t)(blk_size >>  16);
;;;319        MSC_BOT_Data[10] = (uint8_t)(blk_size >>  8);
;;;320        MSC_BOT_Data[11] = (uint8_t)(blk_size);
;;;321        
;;;322        MSC_BOT_DataLen = 12;
;;;323        return 0;
;;;324      }
;;;325    }
000036  bd7c              POP      {r2-r6,pc}
                  |L10.56|
000038  2008              MOVS     r0,#8                 ;311
00003a  4910              LDR      r1,|L10.124|
00003c  70c8              STRB     r0,[r1,#3]            ;311
00003e  9800              LDR      r0,[sp,#0]            ;312
000040  1e40              SUBS     r0,r0,#1              ;312
000042  0e00              LSRS     r0,r0,#24             ;312
000044  7108              STRB     r0,[r1,#4]            ;312
000046  9800              LDR      r0,[sp,#0]            ;313
000048  1e40              SUBS     r0,r0,#1              ;313
00004a  0c00              LSRS     r0,r0,#16             ;313
00004c  7148              STRB     r0,[r1,#5]            ;313
00004e  9800              LDR      r0,[sp,#0]            ;314
000050  1e40              SUBS     r0,r0,#1              ;314
000052  0a00              LSRS     r0,r0,#8              ;314
000054  7188              STRB     r0,[r1,#6]            ;314
000056  9800              LDR      r0,[sp,#0]            ;315
000058  1e40              SUBS     r0,r0,#1              ;315
00005a  71c8              STRB     r0,[r1,#7]            ;315
00005c  2002              MOVS     r0,#2                 ;317
00005e  7208              STRB     r0,[r1,#8]            ;317
000060  9801              LDR      r0,[sp,#4]            ;318
000062  0c00              LSRS     r0,r0,#16             ;318
000064  7248              STRB     r0,[r1,#9]            ;318
000066  9801              LDR      r0,[sp,#4]            ;319
000068  0a00              LSRS     r0,r0,#8              ;319
00006a  7288              STRB     r0,[r1,#0xa]          ;319
00006c  9801              LDR      r0,[sp,#4]            ;320
00006e  72c8              STRB     r0,[r1,#0xb]          ;320
000070  200c              MOVS     r0,#0xc               ;322
000072  4904              LDR      r1,|L10.132|
000074  8008              STRH     r0,[r1,#0]            ;322
000076  2000              MOVS     r0,#0                 ;323
000078  e7dd              B        |L10.54|
;;;326    /**
                          ENDP

00007a  0000              DCW      0x0000
                  |L10.124|
                          DCD      MSC_BOT_Data
                  |L10.128|
                          DCD      USBD_STORAGE_fops
                  |L10.132|
                          DCD      MSC_BOT_DataLen

                          AREA ||i.SCSI_RequestSense||, CODE, READONLY, ALIGN=2

                  SCSI_RequestSense PROC
;;;375    
;;;376    static int8_t SCSI_RequestSense (uint8_t lun, uint8_t *params)
000000  b510              PUSH     {r4,lr}
;;;377    {
000002  4603              MOV      r3,r0
;;;378      uint8_t i;
;;;379      
;;;380      for(i=0 ; i < REQUEST_SENSE_DATA_LEN ; i++) 
000004  2200              MOVS     r2,#0
000006  e004              B        |L11.18|
                  |L11.8|
;;;381      {
;;;382        MSC_BOT_Data[i] = 0;
000008  2000              MOVS     r0,#0
00000a  4c1e              LDR      r4,|L11.132|
00000c  54a0              STRB     r0,[r4,r2]
00000e  1c50              ADDS     r0,r2,#1              ;380
000010  b2c2              UXTB     r2,r0                 ;380
                  |L11.18|
000012  2a12              CMP      r2,#0x12              ;380
000014  dbf8              BLT      |L11.8|
;;;383      }
;;;384      
;;;385      MSC_BOT_Data[0]	= 0x70;		
000016  2070              MOVS     r0,#0x70
000018  4c1a              LDR      r4,|L11.132|
00001a  7020              STRB     r0,[r4,#0]
;;;386      MSC_BOT_Data[7]	= REQUEST_SENSE_DATA_LEN - 6;	
00001c  200c              MOVS     r0,#0xc
00001e  71e0              STRB     r0,[r4,#7]
;;;387      
;;;388      if((SCSI_Sense_Head != SCSI_Sense_Tail)) {
000020  4819              LDR      r0,|L11.136|
000022  7800              LDRB     r0,[r0,#0]  ; SCSI_Sense_Head
000024  4c19              LDR      r4,|L11.140|
000026  7824              LDRB     r4,[r4,#0]  ; SCSI_Sense_Tail
000028  42a0              CMP      r0,r4
00002a  d021              BEQ      |L11.112|
;;;389        
;;;390        MSC_BOT_Data[2]     = SCSI_Sense[SCSI_Sense_Head].Skey;		
00002c  4818              LDR      r0,|L11.144|
00002e  4c16              LDR      r4,|L11.136|
000030  7824              LDRB     r4,[r4,#0]  ; SCSI_Sense_Head
000032  f8100034          LDRB     r0,[r0,r4,LSL #3]
000036  4c13              LDR      r4,|L11.132|
000038  70a0              STRB     r0,[r4,#2]
;;;391        MSC_BOT_Data[12]    = SCSI_Sense[SCSI_Sense_Head].w.b.ASCQ;	
00003a  4815              LDR      r0,|L11.144|
00003c  4c12              LDR      r4,|L11.136|
00003e  7824              LDRB     r4,[r4,#0]  ; SCSI_Sense_Head
000040  eb0000c4          ADD      r0,r0,r4,LSL #3
000044  7940              LDRB     r0,[r0,#5]
000046  4c0f              LDR      r4,|L11.132|
000048  7320              STRB     r0,[r4,#0xc]
;;;392        MSC_BOT_Data[13]    = SCSI_Sense[SCSI_Sense_Head].w.b.ASC;	
00004a  4811              LDR      r0,|L11.144|
00004c  4c0e              LDR      r4,|L11.136|
00004e  7824              LDRB     r4,[r4,#0]  ; SCSI_Sense_Head
000050  eb0000c4          ADD      r0,r0,r4,LSL #3
000054  7900              LDRB     r0,[r0,#4]
000056  4c0b              LDR      r4,|L11.132|
000058  7360              STRB     r0,[r4,#0xd]
;;;393        SCSI_Sense_Head++;
00005a  480b              LDR      r0,|L11.136|
00005c  7800              LDRB     r0,[r0,#0]  ; SCSI_Sense_Head
00005e  1c40              ADDS     r0,r0,#1
000060  4c09              LDR      r4,|L11.136|
000062  7020              STRB     r0,[r4,#0]
;;;394        
;;;395        if (SCSI_Sense_Head == SENSE_LIST_DEEPTH)
000064  4620              MOV      r0,r4
000066  7800              LDRB     r0,[r0,#0]  ; SCSI_Sense_Head
000068  2804              CMP      r0,#4
00006a  d101              BNE      |L11.112|
;;;396        {
;;;397          SCSI_Sense_Head = 0;
00006c  2000              MOVS     r0,#0
00006e  7020              STRB     r0,[r4,#0]
                  |L11.112|
;;;398        }
;;;399      }
;;;400      MSC_BOT_DataLen = REQUEST_SENSE_DATA_LEN;  
000070  2012              MOVS     r0,#0x12
000072  4c08              LDR      r4,|L11.148|
000074  8020              STRH     r0,[r4,#0]
;;;401      
;;;402      if (params[4] <= REQUEST_SENSE_DATA_LEN)
000076  7908              LDRB     r0,[r1,#4]
000078  2812              CMP      r0,#0x12
00007a  dc01              BGT      |L11.128|
;;;403      {
;;;404        MSC_BOT_DataLen = params[4];
00007c  7908              LDRB     r0,[r1,#4]
00007e  8020              STRH     r0,[r4,#0]
                  |L11.128|
;;;405      }
;;;406      return 0;
000080  2000              MOVS     r0,#0
;;;407    }
000082  bd10              POP      {r4,pc}
;;;408    
                          ENDP

                  |L11.132|
                          DCD      MSC_BOT_Data
                  |L11.136|
                          DCD      SCSI_Sense_Head
                  |L11.140|
                          DCD      SCSI_Sense_Tail
                  |L11.144|
                          DCD      SCSI_Sense
                  |L11.148|
                          DCD      MSC_BOT_DataLen

                          AREA ||i.SCSI_SenseCode||, CODE, READONLY, ALIGN=2

                  SCSI_SenseCode PROC
;;;417    */
;;;418    void SCSI_SenseCode(uint8_t lun, uint8_t sKey, uint8_t ASC)
000000  b530              PUSH     {r4,r5,lr}
;;;419    {
;;;420      SCSI_Sense[SCSI_Sense_Tail].Skey  = sKey;
000002  b24b              SXTB     r3,r1
000004  4c0b              LDR      r4,|L12.52|
000006  4d0c              LDR      r5,|L12.56|
000008  782d              LDRB     r5,[r5,#0]  ; SCSI_Sense_Tail
00000a  f8043035          STRB     r3,[r4,r5,LSL #3]
;;;421      SCSI_Sense[SCSI_Sense_Tail].w.ASC = ASC << 8;
00000e  0213              LSLS     r3,r2,#8
000010  4d09              LDR      r5,|L12.56|
000012  782d              LDRB     r5,[r5,#0]  ; SCSI_Sense_Tail
000014  eb0404c5          ADD      r4,r4,r5,LSL #3
000018  6063              STR      r3,[r4,#4]
;;;422      SCSI_Sense_Tail++;
00001a  4b07              LDR      r3,|L12.56|
00001c  781b              LDRB     r3,[r3,#0]  ; SCSI_Sense_Tail
00001e  1c5b              ADDS     r3,r3,#1
000020  4c05              LDR      r4,|L12.56|
000022  7023              STRB     r3,[r4,#0]
;;;423      if (SCSI_Sense_Tail == SENSE_LIST_DEEPTH)
000024  4623              MOV      r3,r4
000026  781b              LDRB     r3,[r3,#0]  ; SCSI_Sense_Tail
000028  2b04              CMP      r3,#4
00002a  d101              BNE      |L12.48|
;;;424      {
;;;425        SCSI_Sense_Tail = 0;
00002c  2300              MOVS     r3,#0
00002e  7023              STRB     r3,[r4,#0]
                  |L12.48|
;;;426      }
;;;427    }
000030  bd30              POP      {r4,r5,pc}
;;;428    /**
                          ENDP

000032  0000              DCW      0x0000
                  |L12.52|
                          DCD      SCSI_Sense
                  |L12.56|
                          DCD      SCSI_Sense_Tail

                          AREA ||i.SCSI_StartStopUnit||, CODE, READONLY, ALIGN=2

                  SCSI_StartStopUnit PROC
;;;434    */
;;;435    static int8_t SCSI_StartStopUnit(uint8_t lun, uint8_t *params)
000000  4602              MOV      r2,r0
;;;436    {
;;;437      MSC_BOT_DataLen = 0;
000002  2000              MOVS     r0,#0
000004  4b01              LDR      r3,|L13.12|
000006  8018              STRH     r0,[r3,#0]
;;;438      return 0;
;;;439    }
000008  4770              BX       lr
;;;440    
                          ENDP

00000a  0000              DCW      0x0000
                  |L13.12|
                          DCD      MSC_BOT_DataLen

                          AREA ||i.SCSI_TestUnitReady||, CODE, READONLY, ALIGN=2

                  SCSI_TestUnitReady PROC
;;;187    */
;;;188    static int8_t SCSI_TestUnitReady(uint8_t lun, uint8_t *params)
000000  b570              PUSH     {r4-r6,lr}
;;;189    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;190      
;;;191      /* case 9 : Hi > D0 */
;;;192      if (MSC_BOT_cbw.dDataLength != 0)
000006  480f              LDR      r0,|L14.68|
000008  6880              LDR      r0,[r0,#8]  ; MSC_BOT_cbw
00000a  b140              CBZ      r0,|L14.30|
;;;193      {
;;;194        SCSI_SenseCode(MSC_BOT_cbw.bLUN, 
00000c  490d              LDR      r1,|L14.68|
00000e  7b48              LDRB     r0,[r1,#0xd]  ; MSC_BOT_cbw
000010  2220              MOVS     r2,#0x20
000012  2105              MOVS     r1,#5
000014  f7fffffe          BL       SCSI_SenseCode
;;;195                       ILLEGAL_REQUEST, 
;;;196                       INVALID_CDB);
;;;197        return -1;
000018  f04f30ff          MOV      r0,#0xffffffff
                  |L14.28|
;;;198      }  
;;;199      
;;;200      if(USBD_STORAGE_fops->IsReady(lun) !=0 )
;;;201      {
;;;202        SCSI_SenseCode(lun,
;;;203                       NOT_READY, 
;;;204                       MEDIUM_NOT_PRESENT);
;;;205        return -1;
;;;206      } 
;;;207      MSC_BOT_DataLen = 0;
;;;208      return 0;
;;;209    }
00001c  bd70              POP      {r4-r6,pc}
                  |L14.30|
00001e  480a              LDR      r0,|L14.72|
000020  6800              LDR      r0,[r0,#0]            ;200  ; USBD_STORAGE_fops
000022  6881              LDR      r1,[r0,#8]            ;200
000024  4620              MOV      r0,r4                 ;200
000026  4788              BLX      r1                    ;200
000028  b138              CBZ      r0,|L14.58|
00002a  223a              MOVS     r2,#0x3a              ;202
00002c  2102              MOVS     r1,#2                 ;202
00002e  4620              MOV      r0,r4                 ;202
000030  f7fffffe          BL       SCSI_SenseCode
000034  f04f30ff          MOV      r0,#0xffffffff        ;205
000038  e7f0              B        |L14.28|
                  |L14.58|
00003a  2000              MOVS     r0,#0                 ;207
00003c  4903              LDR      r1,|L14.76|
00003e  8008              STRH     r0,[r1,#0]            ;207
000040  bf00              NOP                            ;208
000042  e7eb              B        |L14.28|
;;;210    
                          ENDP

                  |L14.68|
                          DCD      MSC_BOT_cbw
                  |L14.72|
                          DCD      USBD_STORAGE_fops
                  |L14.76|
                          DCD      MSC_BOT_DataLen

                          AREA ||i.SCSI_Verify10||, CODE, READONLY, ALIGN=2

                  SCSI_Verify10 PROC
;;;593    
;;;594    static int8_t SCSI_Verify10(uint8_t lun , uint8_t *params){
000000  b570              PUSH     {r4-r6,lr}
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;595      if ((params[1]& 0x02) == 0x02) 
000006  7860              LDRB     r0,[r4,#1]
000008  f0000002          AND      r0,r0,#2
00000c  2802              CMP      r0,#2
00000e  d107              BNE      |L15.32|
;;;596      {
;;;597        SCSI_SenseCode (lun, ILLEGAL_REQUEST, INVALID_FIELED_IN_COMMAND);
000010  2224              MOVS     r2,#0x24
000012  2105              MOVS     r1,#5
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       SCSI_SenseCode
;;;598        return -1; /* Error, Verify Mode Not supported*/
00001a  f04f30ff          MOV      r0,#0xffffffff
                  |L15.30|
;;;599      }
;;;600      
;;;601      if(SCSI_CheckAddressRange(lun, SCSI_blk_addr, SCSI_blk_len) < 0)
;;;602      {
;;;603        return -1; /* error */      
;;;604      }
;;;605      MSC_BOT_DataLen = 0;
;;;606      return 0;
;;;607    }
00001e  bd70              POP      {r4-r6,pc}
                  |L15.32|
000020  4808              LDR      r0,|L15.68|
000022  8800              LDRH     r0,[r0,#0]            ;601  ; SCSI_blk_len
000024  b282              UXTH     r2,r0                 ;601
000026  4808              LDR      r0,|L15.72|
000028  6801              LDR      r1,[r0,#0]            ;601  ; SCSI_blk_addr
00002a  4628              MOV      r0,r5                 ;601
00002c  f7fffffe          BL       SCSI_CheckAddressRange
000030  2800              CMP      r0,#0                 ;601
000032  da02              BGE      |L15.58|
000034  f04f30ff          MOV      r0,#0xffffffff        ;603
000038  e7f1              B        |L15.30|
                  |L15.58|
00003a  2000              MOVS     r0,#0                 ;605
00003c  4903              LDR      r1,|L15.76|
00003e  8008              STRH     r0,[r1,#0]            ;605
000040  bf00              NOP                            ;606
000042  e7ec              B        |L15.30|
;;;608    
                          ENDP

                  |L15.68|
                          DCD      SCSI_blk_len
                  |L15.72|
                          DCD      SCSI_blk_addr
                  |L15.76|
                          DCD      MSC_BOT_DataLen

                          AREA ||i.SCSI_Write10||, CODE, READONLY, ALIGN=2

                  SCSI_Write10 PROC
;;;511    
;;;512    static int8_t SCSI_Write10 (uint8_t lun , uint8_t *params)
000000  b570              PUSH     {r4-r6,lr}
;;;513    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;514      if (MSC_BOT_State == BOT_IDLE) /* Idle */
000006  4843              LDR      r0,|L16.276|
000008  7800              LDRB     r0,[r0,#0]  ; MSC_BOT_State
00000a  2800              CMP      r0,#0
00000c  d17b              BNE      |L16.262|
;;;515      {
;;;516        
;;;517        /* case 8 : Hi <> Do */
;;;518        
;;;519        if ((MSC_BOT_cbw.bmFlags & 0x80) == 0x80)
00000e  4842              LDR      r0,|L16.280|
000010  7b00              LDRB     r0,[r0,#0xc]  ; MSC_BOT_cbw
000012  f0000080          AND      r0,r0,#0x80
000016  2880              CMP      r0,#0x80
000018  d108              BNE      |L16.44|
;;;520        {
;;;521          SCSI_SenseCode(MSC_BOT_cbw.bLUN, 
00001a  493f              LDR      r1,|L16.280|
00001c  7b48              LDRB     r0,[r1,#0xd]  ; MSC_BOT_cbw
00001e  2220              MOVS     r2,#0x20
000020  2105              MOVS     r1,#5
000022  f7fffffe          BL       SCSI_SenseCode
;;;522                         ILLEGAL_REQUEST, 
;;;523                         INVALID_CDB);
;;;524          return -1;
000026  f04f30ff          MOV      r0,#0xffffffff
                  |L16.42|
;;;525        }
;;;526        
;;;527        /* Check whether Media is ready */
;;;528        if(USBD_STORAGE_fops->IsReady(lun) !=0 )
;;;529        {
;;;530          SCSI_SenseCode(lun,
;;;531                         NOT_READY, 
;;;532                         MEDIUM_NOT_PRESENT);
;;;533          return -1;
;;;534        } 
;;;535        
;;;536        /* Check If media is write-protected */
;;;537        if(USBD_STORAGE_fops->IsWriteProtected(lun) !=0 )
;;;538        {
;;;539          SCSI_SenseCode(lun,
;;;540                         NOT_READY, 
;;;541                         WRITE_PROTECTED);
;;;542          return -1;
;;;543        } 
;;;544        
;;;545        
;;;546        SCSI_blk_addr = (params[2] << 24) | \
;;;547          (params[3] << 16) | \
;;;548            (params[4] <<  8) | \
;;;549              params[5];
;;;550        SCSI_blk_len = (params[7] <<  8) | \
;;;551          params[8];  
;;;552        
;;;553        /* check if LBA address is in the right range */
;;;554        if(SCSI_CheckAddressRange(lun, SCSI_blk_addr, SCSI_blk_len) < 0)
;;;555        {
;;;556          return -1; /* error */      
;;;557        }
;;;558        
;;;559        SCSI_blk_addr *= SCSI_blk_size;
;;;560        SCSI_blk_len  *= SCSI_blk_size;
;;;561        
;;;562        /* cases 3,11,13 : Hn,Ho <> D0 */
;;;563        if (MSC_BOT_cbw.dDataLength != SCSI_blk_len)
;;;564        {
;;;565          SCSI_SenseCode(MSC_BOT_cbw.bLUN, 
;;;566                         ILLEGAL_REQUEST, 
;;;567                         INVALID_CDB);
;;;568          return -1;
;;;569        }
;;;570        
;;;571        /* Prepare EP to receive first data packet */
;;;572        MSC_BOT_State = BOT_DATA_OUT;  
;;;573        DCD_EP_PrepareRx (cdev,
;;;574                          MSC_OUT_EP,
;;;575                          MSC_BOT_Data, 
;;;576                          MIN (SCSI_blk_len, MSC_MEDIA_PACKET));  
;;;577      }
;;;578      else /* Write Process ongoing */
;;;579      {
;;;580        return SCSI_ProcessWrite(lun);
;;;581      }
;;;582      return 0;
;;;583    }
00002a  bd70              POP      {r4-r6,pc}
                  |L16.44|
00002c  483b              LDR      r0,|L16.284|
00002e  6800              LDR      r0,[r0,#0]            ;528  ; USBD_STORAGE_fops
000030  6881              LDR      r1,[r0,#8]            ;528
000032  4628              MOV      r0,r5                 ;528
000034  4788              BLX      r1                    ;528
000036  b138              CBZ      r0,|L16.72|
000038  223a              MOVS     r2,#0x3a              ;530
00003a  2102              MOVS     r1,#2                 ;530
00003c  4628              MOV      r0,r5                 ;530
00003e  f7fffffe          BL       SCSI_SenseCode
000042  f04f30ff          MOV      r0,#0xffffffff        ;533
000046  e7f0              B        |L16.42|
                  |L16.72|
000048  4834              LDR      r0,|L16.284|
00004a  6800              LDR      r0,[r0,#0]            ;537  ; USBD_STORAGE_fops
00004c  68c1              LDR      r1,[r0,#0xc]          ;537
00004e  4628              MOV      r0,r5                 ;537
000050  4788              BLX      r1                    ;537
000052  b138              CBZ      r0,|L16.100|
000054  2227              MOVS     r2,#0x27              ;539
000056  2102              MOVS     r1,#2                 ;539
000058  4628              MOV      r0,r5                 ;539
00005a  f7fffffe          BL       SCSI_SenseCode
00005e  f04f30ff          MOV      r0,#0xffffffff        ;542
000062  e7e2              B        |L16.42|
                  |L16.100|
000064  78a0              LDRB     r0,[r4,#2]            ;546
000066  0600              LSLS     r0,r0,#24             ;546
000068  78e1              LDRB     r1,[r4,#3]            ;546
00006a  ea404001          ORR      r0,r0,r1,LSL #16      ;546
00006e  7921              LDRB     r1,[r4,#4]            ;546
000070  ea402001          ORR      r0,r0,r1,LSL #8       ;546
000074  7961              LDRB     r1,[r4,#5]            ;546
000076  4308              ORRS     r0,r0,r1              ;546
000078  4929              LDR      r1,|L16.288|
00007a  6008              STR      r0,[r1,#0]            ;546  ; SCSI_blk_addr
00007c  7a20              LDRB     r0,[r4,#8]            ;550
00007e  79e1              LDRB     r1,[r4,#7]            ;550
000080  ea402001          ORR      r0,r0,r1,LSL #8       ;550
000084  4927              LDR      r1,|L16.292|
000086  6008              STR      r0,[r1,#0]            ;550  ; SCSI_blk_len
000088  4608              MOV      r0,r1                 ;554
00008a  8800              LDRH     r0,[r0,#0]            ;554  ; SCSI_blk_len
00008c  b282              UXTH     r2,r0                 ;554
00008e  4824              LDR      r0,|L16.288|
000090  6801              LDR      r1,[r0,#0]            ;554  ; SCSI_blk_addr
000092  4628              MOV      r0,r5                 ;554
000094  f7fffffe          BL       SCSI_CheckAddressRange
000098  2800              CMP      r0,#0                 ;554
00009a  da02              BGE      |L16.162|
00009c  f04f30ff          MOV      r0,#0xffffffff        ;556
0000a0  e7c3              B        |L16.42|
                  |L16.162|
0000a2  481f              LDR      r0,|L16.288|
0000a4  6800              LDR      r0,[r0,#0]            ;559  ; SCSI_blk_addr
0000a6  4920              LDR      r1,|L16.296|
0000a8  6809              LDR      r1,[r1,#0]            ;559  ; SCSI_blk_size
0000aa  4348              MULS     r0,r1,r0              ;559
0000ac  491c              LDR      r1,|L16.288|
0000ae  6008              STR      r0,[r1,#0]            ;559  ; SCSI_blk_addr
0000b0  481c              LDR      r0,|L16.292|
0000b2  6800              LDR      r0,[r0,#0]            ;560  ; SCSI_blk_len
0000b4  491c              LDR      r1,|L16.296|
0000b6  6809              LDR      r1,[r1,#0]            ;560  ; SCSI_blk_size
0000b8  4348              MULS     r0,r1,r0              ;560
0000ba  491a              LDR      r1,|L16.292|
0000bc  6008              STR      r0,[r1,#0]            ;560  ; SCSI_blk_len
0000be  4816              LDR      r0,|L16.280|
0000c0  6880              LDR      r0,[r0,#8]            ;563  ; MSC_BOT_cbw
0000c2  6809              LDR      r1,[r1,#0]            ;563  ; SCSI_blk_len
0000c4  4288              CMP      r0,r1                 ;563
0000c6  d008              BEQ      |L16.218|
0000c8  4913              LDR      r1,|L16.280|
0000ca  7b48              LDRB     r0,[r1,#0xd]          ;565  ; MSC_BOT_cbw
0000cc  2220              MOVS     r2,#0x20              ;565
0000ce  2105              MOVS     r1,#5                 ;565
0000d0  f7fffffe          BL       SCSI_SenseCode
0000d4  f04f30ff          MOV      r0,#0xffffffff        ;568
0000d8  e7a7              B        |L16.42|
                  |L16.218|
0000da  2001              MOVS     r0,#1                 ;572
0000dc  490d              LDR      r1,|L16.276|
0000de  7008              STRB     r0,[r1,#0]            ;572
0000e0  4810              LDR      r0,|L16.292|
0000e2  6800              LDR      r0,[r0,#0]            ;573  ; SCSI_blk_len
0000e4  f5b05f80          CMP      r0,#0x1000            ;573
0000e8  d203              BCS      |L16.242|
0000ea  480e              LDR      r0,|L16.292|
0000ec  6800              LDR      r0,[r0,#0]            ;576  ; SCSI_blk_len
0000ee  e002              B        |L16.246|
0000f0  e009              B        |L16.262|
                  |L16.242|
0000f2  f44f5080          MOV      r0,#0x1000            ;576
                  |L16.246|
0000f6  b283              UXTH     r3,r0                 ;576
0000f8  4a0c              LDR      r2,|L16.300|
0000fa  2101              MOVS     r1,#1                 ;576
0000fc  480c              LDR      r0,|L16.304|
0000fe  6800              LDR      r0,[r0,#0]            ;576  ; cdev
000100  f7fffffe          BL       DCD_EP_PrepareRx
000104  e003              B        |L16.270|
                  |L16.262|
000106  4628              MOV      r0,r5                 ;580
000108  f7fffffe          BL       SCSI_ProcessWrite
00010c  e78d              B        |L16.42|
                  |L16.270|
00010e  2000              MOVS     r0,#0                 ;582
000110  e78b              B        |L16.42|
;;;584    
                          ENDP

000112  0000              DCW      0x0000
                  |L16.276|
                          DCD      MSC_BOT_State
                  |L16.280|
                          DCD      MSC_BOT_cbw
                  |L16.284|
                          DCD      USBD_STORAGE_fops
                  |L16.288|
                          DCD      SCSI_blk_addr
                  |L16.292|
                          DCD      SCSI_blk_len
                  |L16.296|
                          DCD      SCSI_blk_size
                  |L16.300|
                          DCD      MSC_BOT_Data
                  |L16.304|
                          DCD      cdev

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  SCSI_Sense
                          %        32

                          AREA ||.data||, DATA, ALIGN=2

                  SCSI_Sense_Head
000000  00                DCB      0x00
                  SCSI_Sense_Tail
000001  000000            DCB      0x00,0x00,0x00
                  SCSI_blk_size
                          DCD      0x00000000
                  SCSI_blk_nbr
                          DCD      0x00000000
                  SCSI_blk_addr
                          DCD      0x00000000
                  SCSI_blk_len
                          DCD      0x00000000
                  cdev
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32_USB_Device_Library\\Class\\msc\\src\\usbd_msc_scsi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_usbd_msc_scsi_c_2466a178____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_usbd_msc_scsi_c_2466a178____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_usbd_msc_scsi_c_2466a178____REVSH|
#line 144
|__asm___15_usbd_msc_scsi_c_2466a178____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
