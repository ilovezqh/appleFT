; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\asu_bus_kiwi_1.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\asu_bus_kiwi_1.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\BERRY_TWI -I..\..\User\berry_ft -I..\..\User\ft_support -I..\..\User\berry_test -I..\..\User\factory_test -I..\..\User\emenu -I..\..\User\kiwi_ft -I..\..\User\kiwi_ft\spv40 -I..\..\User\kiwi_ft\spv40\peripheral -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\kiwi_ft -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\asu_bus_kiwi_1.crf ..\..\User\kiwi_ft\asu_bus_kiwi.c]
                          THUMB

                          AREA ||i.asu_bus_kiwi_test||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  asu_bus_kiwi_test PROC
;;;10         
;;;11     void asu_bus_kiwi_test(void)
000000  b538              PUSH     {r3-r5,lr}
;;;12     {
;;;13         static enum
;;;14         {
;;;15             START = 0,
;;;16             IS_CONNECTED,   
;;;17             IS_GET_KIWI_ID,
;;;18             IS_VREF_TRIM_CPL,        
;;;19             IS_AVDD_CMU_TRIM_CPL,
;;;20             
;;;21         } s_tState = START;
;;;22     
;;;23         uint8_t data;
;;;24         timer_creat();
;;;25         switch(s_tState)
000002  482e              LDR      r0,|L1.188|
000004  7800              LDRB     r0,[r0,#0]  ; s_tState
000006  b120              CBZ      r0,|L1.18|
000008  2801              CMP      r0,#1
00000a  d016              BEQ      |L1.58|
00000c  2802              CMP      r0,#2
00000e  d131              BNE      |L1.116|
000010  e025              B        |L1.94|
                  |L1.18|
;;;26         {
;;;27         case START:
;;;28             debug("send baud rate:0x80!\r\n");
000012  a02b              ADR      r0,|L1.192|
000014  f7fffffe          BL       __2printf
;;;29             //comSendBuf(COM1,sync_tab,sizeof(sync_tab));
;;;30             //sendOnly(USART2);
;;;31             comSendBuf(COM2,&sync_baud_rate,1);
000018  2201              MOVS     r2,#1
00001a  492f              LDR      r1,|L1.216|
00001c  4610              MOV      r0,r2
00001e  f7fffffe          BL       comSendBuf
;;;32             //comSendChar(COM1,sync_baud_rate);
;;;33             timer_start(1000);
000022  482e              LDR      r0,|L1.220|
000024  6800              LDR      r0,[r0,#0]  ; g_iRunTime
000026  f500707a          ADD      r0,r0,#0x3e8
00002a  492d              LDR      r1,|L1.224|
00002c  6008              STR      r0,[r1,#0]  ; timer
;;;34             s_tState++;
00002e  4823              LDR      r0,|L1.188|
000030  7800              LDRB     r0,[r0,#0]  ; s_tState
000032  1c40              ADDS     r0,r0,#1
000034  4921              LDR      r1,|L1.188|
000036  7008              STRB     r0,[r1,#0]
;;;35             //break;
;;;36         case IS_CONNECTED:
000038  bf00              NOP      
                  |L1.58|
;;;37             {
;;;38                 if(is_time_up())
00003a  4828              LDR      r0,|L1.220|
00003c  6800              LDR      r0,[r0,#0]  ; g_iRunTime
00003e  4928              LDR      r1,|L1.224|
000040  6809              LDR      r1,[r1,#0]  ; timer
000042  1a40              SUBS     r0,r0,r1
000044  f06f4100          MVN      r1,#0x80000000
000048  4288              CMP      r0,r1
00004a  d207              BCS      |L1.92|
;;;39                 {
;;;40                     //debug("send cmd get kiwi id\r\n");
;;;41                     //sendOnly(USART2);
;;;42                     comSendBuf(COM2,sync_tab,sizeof(sync_tab));
00004c  2214              MOVS     r2,#0x14
00004e  4925              LDR      r1,|L1.228|
000050  2001              MOVS     r0,#1
000052  f7fffffe          BL       comSendBuf
;;;43                     //comSendBuf(COM1,sync_tab,sizeof(sync_tab)); 
;;;44                     //readOnly(USART2);
;;;45                    // readOnly(UART2);
;;;46                     s_tState = IS_GET_KIWI_ID;
000056  2002              MOVS     r0,#2
000058  4918              LDR      r1,|L1.188|
00005a  7008              STRB     r0,[r1,#0]
                  |L1.92|
;;;47                 }
;;;48             }
;;;49             break;
00005c  e00b              B        |L1.118|
                  |L1.94|
;;;50             
;;;51         case IS_GET_KIWI_ID:
;;;52             if(comGetChar(COM2,&data))
00005e  4669              MOV      r1,sp
000060  2001              MOVS     r0,#1
000062  f7fffffe          BL       comGetChar
000066  b120              CBZ      r0,|L1.114|
;;;53             {
;;;54                 //comSendChar(COM1,data);
;;;55                 debug("0x%02x  ",data);
000068  f89d1000          LDRB     r1,[sp,#0]
00006c  a01e              ADR      r0,|L1.232|
00006e  f7fffffe          BL       __2printf
                  |L1.114|
;;;56             }
;;;57             break;
000072  e000              B        |L1.118|
                  |L1.116|
;;;58         default:
;;;59             break;
000074  bf00              NOP      
                  |L1.118|
000076  bf00              NOP                            ;49
;;;60         }
;;;61         
;;;62         uint8_t key_code = bsp_GetKey();
000078  f7fffffe          BL       bsp_GetKey
00007c  4604              MOV      r4,r0
;;;63         if(key_code != KEY_NONE)
00007e  b1e4              CBZ      r4,|L1.186|
;;;64         {
;;;65             switch(key_code)
000080  2c0e              CMP      r4,#0xe
000082  d219              BCS      |L1.184|
000084  e8dff004          TBB      [pc,r4]
000088  18161815          DCB      0x18,0x16,0x18,0x15
00008c  0e181407          DCB      0x0e,0x18,0x14,0x07
000090  18181818          DCB      0x18,0x18,0x18,0x18
000094  1708              DCB      0x17,0x08
;;;66             {
;;;67             case SET_KEY_PRESSED:
;;;68             case START_SIGNAL_DOWN:
000096  bf00              NOP      
;;;69                 
;;;70                // comSendBuf(COM1,sync_tab,4);
;;;71             comSendBuf(COM2,sync_tab,sizeof(sync_tab));
000098  2214              MOVS     r2,#0x14
00009a  4912              LDR      r1,|L1.228|
00009c  2001              MOVS     r0,#1
00009e  f7fffffe          BL       comSendBuf
;;;72            
;;;73                  
;;;74                 break;
0000a2  e009              B        |L1.184|
;;;75             case DOWN_KEY_PRESSED:
;;;76                  comSendChar(COM1,data);
0000a4  f89d1000          LDRB     r1,[sp,#0]
0000a8  2000              MOVS     r0,#0
0000aa  f7fffffe          BL       comSendChar
;;;77                 break;
0000ae  e003              B        |L1.184|
;;;78             
;;;79             case DOWN_KEY_LONG_PRESS:
;;;80                
;;;81                 break;
0000b0  e002              B        |L1.184|
;;;82             case UP_KEY_LONG_PRESS:
;;;83                  
;;;84                 
;;;85                 break;
0000b2  e001              B        |L1.184|
;;;86             case UP_KEY_PRESSED:
;;;87                  
;;;88                 break;
0000b4  e000              B        |L1.184|
;;;89             
;;;90             case ESC_KEY_LONG_PRESS:// 退出键 上电前10秒长安可以进入U盘模式
;;;91                  break;
0000b6  bf00              NOP      
                  |L1.184|
0000b8  bf00              NOP                            ;74
                  |L1.186|
;;;92             }
;;;93         }
;;;94         
;;;95         
;;;96     }
0000ba  bd38              POP      {r3-r5,pc}
;;;97     
                          ENDP

                  |L1.188|
                          DCD      s_tState
                  |L1.192|
0000c0  73656e64          DCB      "send baud rate:0x80!\r\n",0
0000c4  20626175
0000c8  64207261
0000cc  74653a30
0000d0  78383021
0000d4  0d0a00  
0000d7  00                DCB      0
                  |L1.216|
                          DCD      sync_baud_rate
                  |L1.220|
                          DCD      g_iRunTime
                  |L1.224|
                          DCD      timer
                  |L1.228|
                          DCD      sync_tab
                  |L1.232|
0000e8  30782530          DCB      "0x%02x  ",0
0000ec  32782020
0000f0  00      
0000f1  00                DCB      0
0000f2  00                DCB      0
0000f3  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  sync_tab
000000  4b495749          DCB      0x4b,0x49,0x57,0x49
000004  81000000          DCB      0x81,0x00,0x00,0x00
000008  00000020          DCB      0x00,0x00,0x00,0x20
00000c  04000000          DCB      0x04,0x00,0x00,0x00
000010  a5000000          DCB      0xa5,0x00,0x00,0x00
                  sync_baud_rate
000014  80                DCB      0x80
                  s_tState
000015  000000            DCB      0x00,0x00,0x00
                  timer
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\kiwi_ft\\asu_bus_kiwi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_asu_bus_kiwi_c_sync_tab____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_asu_bus_kiwi_c_sync_tab____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_asu_bus_kiwi_c_sync_tab____REVSH|
#line 144
|__asm___14_asu_bus_kiwi_c_sync_tab____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
