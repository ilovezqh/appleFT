; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\bsp_prog_robot_comm.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_prog_robot_comm.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\bsp_prog_robot_comm.crf ..\..\User\bsp_stm32f4xx\src\bsp_prog_robot_comm.c]
                          THUMB

                          AREA ||i.msg_to_robot||, CODE, READONLY, ALIGN=2

                  msg_to_robot PROC
;;;138    
;;;139    void msg_to_robot(robot_ctrl_e ack_status)
000000  b570              PUSH     {r4-r6,lr}
;;;140    {
000002  4604              MOV      r4,r0
;;;141    	GPIO_ResetBits(PG_NG_PORT,      PG_NG_PIN);
000004  f44f5100          MOV      r1,#0x2000
000008  4839              LDR      r0,|L1.240|
00000a  f7fffffe          BL       GPIO_ResetBits
;;;142        GPIO_ResetBits(PG_OK_PORT,      PG_OK_PIN);
00000e  f44f4100          MOV      r1,#0x8000
000012  4837              LDR      r0,|L1.240|
000014  f7fffffe          BL       GPIO_ResetBits
;;;143        GPIO_ResetBits(PG_BUSY_PORT,    PG_BUSY_PIN);
000018  f44f4180          MOV      r1,#0x4000
00001c  4834              LDR      r0,|L1.240|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;144        
;;;145    	GPIO_ResetBits(DUT_OK_PORT,     DUT_OK_PIN);
000022  f44f4100          MOV      r1,#0x8000
000026  4832              LDR      r0,|L1.240|
000028  f7fffffe          BL       GPIO_ResetBits
;;;146        GPIO_ResetBits(DUT_BUSY_PORT,   DUT_BUSY_PIN);
00002c  f44f4180          MOV      r1,#0x4000
000030  482f              LDR      r0,|L1.240|
000032  f7fffffe          BL       GPIO_ResetBits
;;;147        GPIO_ResetBits(DUT_NG2_PORT,    DUT_NG2_PIN);
000036  f44f5100          MOV      r1,#0x2000
00003a  482d              LDR      r0,|L1.240|
00003c  f7fffffe          BL       GPIO_ResetBits
;;;148        GPIO_ResetBits(DUT_NG3_PORT,    DUT_NG3_PIN);
000040  f44f5100          MOV      r1,#0x2000
000044  482a              LDR      r0,|L1.240|
000046  f7fffffe          BL       GPIO_ResetBits
;;;149        GPIO_ResetBits(DUT_NG4_PORT,    DUT_NG4_PIN);
00004a  f44f5100          MOV      r1,#0x2000
00004e  4828              LDR      r0,|L1.240|
000050  f7fffffe          BL       GPIO_ResetBits
;;;150        GPIO_ResetBits(DUT_NG5_PORT,    DUT_NG5_PIN);
000054  f44f5100          MOV      r1,#0x2000
000058  4825              LDR      r0,|L1.240|
00005a  f7fffffe          BL       GPIO_ResetBits
;;;151     
;;;152        /* DUT测试和 烧录机台测试信号兼容；DUT分bin；多个NG bin统一为NG */
;;;153        if((ack_status == DUT_NG2) || (ack_status == DUT_NG3) || (ack_status == DUT_NG4) || (ack_status == DUT_NG5))
00005e  2c06              CMP      r4,#6
000060  d005              BEQ      |L1.110|
000062  2c07              CMP      r4,#7
000064  d003              BEQ      |L1.110|
000066  2c08              CMP      r4,#8
000068  d001              BEQ      |L1.110|
00006a  2c09              CMP      r4,#9
00006c  d105              BNE      |L1.122|
                  |L1.110|
;;;154        {
;;;155            GPIO_SetBits(PG_NG_PORT,    PG_NG_PIN);
00006e  f44f5100          MOV      r1,#0x2000
000072  481f              LDR      r0,|L1.240|
000074  f7fffffe          BL       GPIO_SetBits
000078  e01c              B        |L1.180|
                  |L1.122|
;;;156        }
;;;157        else if((ack_status == PG_OK) || (ack_status == DUT_OK))
00007a  2c02              CMP      r4,#2
00007c  d001              BEQ      |L1.130|
00007e  2c05              CMP      r4,#5
000080  d10a              BNE      |L1.152|
                  |L1.130|
;;;158        {
;;;159            GPIO_SetBits(PG_OK_PORT,    PG_OK_PIN);
000082  f44f4100          MOV      r1,#0x8000
000086  481a              LDR      r0,|L1.240|
000088  f7fffffe          BL       GPIO_SetBits
;;;160            GPIO_SetBits(DUT_OK_PORT,   DUT_OK_PIN);
00008c  f44f4100          MOV      r1,#0x8000
000090  4817              LDR      r0,|L1.240|
000092  f7fffffe          BL       GPIO_SetBits
000096  e00d              B        |L1.180|
                  |L1.152|
;;;161        }
;;;162        else if((ack_status == PG_BUSY) || (ack_status == DUT_BUSY))
000098  2c01              CMP      r4,#1
00009a  d001              BEQ      |L1.160|
00009c  2c04              CMP      r4,#4
00009e  d109              BNE      |L1.180|
                  |L1.160|
;;;163        {
;;;164            GPIO_SetBits(PG_BUSY_PORT,  PG_BUSY_PIN);
0000a0  f44f4180          MOV      r1,#0x4000
0000a4  4812              LDR      r0,|L1.240|
0000a6  f7fffffe          BL       GPIO_SetBits
;;;165            GPIO_SetBits(DUT_BUSY_PORT, DUT_BUSY_PIN);
0000aa  f44f4180          MOV      r1,#0x4000
0000ae  4810              LDR      r0,|L1.240|
0000b0  f7fffffe          BL       GPIO_SetBits
                  |L1.180|
;;;166        }
;;;167    
;;;168        if(ack_status == PG_IDLE)
0000b4  b904              CBNZ     r4,|L1.184|
                  |L1.182|
;;;169    	{
;;;170    		return;
;;;171    	}
;;;172        else
;;;173        {
;;;174            for(uint8_t i=0; i<ARRY_SIZE(ng_bin_msg_table); i++)
;;;175            {
;;;176                if( ack_status == ng_bin_msg_table[i].ack_ )
;;;177                {
;;;178                    GPIO_SetBits(ng_bin_msg_table[i].GPIOx, ng_bin_msg_table[i].GPIO_Pin);
;;;179                }
;;;180            }
;;;181        }
;;;182    }
0000b6  bd70              POP      {r4-r6,pc}
                  |L1.184|
0000b8  2500              MOVS     r5,#0                 ;174
0000ba  e015              B        |L1.232|
                  |L1.188|
0000bc  eb050045          ADD      r0,r5,r5,LSL #1       ;176
0000c0  490c              LDR      r1,|L1.244|
0000c2  f8110020          LDRB     r0,[r1,r0,LSL #2]     ;176
0000c6  42a0              CMP      r0,r4                 ;176
0000c8  d10c              BNE      |L1.228|
0000ca  eb050245          ADD      r2,r5,r5,LSL #1       ;178
0000ce  460b              MOV      r3,r1                 ;178
0000d0  eb030282          ADD      r2,r3,r2,LSL #2       ;178
0000d4  8911              LDRH     r1,[r2,#8]            ;178
0000d6  eb050245          ADD      r2,r5,r5,LSL #1       ;178
0000da  eb030282          ADD      r2,r3,r2,LSL #2       ;178
0000de  6850              LDR      r0,[r2,#4]            ;178
0000e0  f7fffffe          BL       GPIO_SetBits
                  |L1.228|
0000e4  1c68              ADDS     r0,r5,#1              ;174
0000e6  b2c5              UXTB     r5,r0                 ;174
                  |L1.232|
0000e8  2d05              CMP      r5,#5                 ;174
0000ea  d3e7              BCC      |L1.188|
0000ec  bf00              NOP      
0000ee  e7e2              B        |L1.182|
;;;183        
                          ENDP

                  |L1.240|
                          DCD      0x40021000
                  |L1.244|
                          DCD      ng_bin_msg_table

                          AREA ||i.robot_com_init||, CODE, READONLY, ALIGN=2

                  robot_com_init PROC
;;;49     
;;;50     void robot_com_init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;51     {
;;;52     	GPIO_InitTypeDef gpio_init={0};
000002  2000              MOVS     r0,#0
000004  9000              STR      r0,[sp,#0]
000006  9001              STR      r0,[sp,#4]
;;;53         RCC_AHB1PeriphClockCmd(RCC_ALL_ROBOT , ENABLE); 
000008  2101              MOVS     r1,#1
00000a  2010              MOVS     r0,#0x10
00000c  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;54      
;;;55     	GPIO_ResetBits(PG_NG_PORT,      PG_NG_PIN);
000010  f44f5100          MOV      r1,#0x2000
000014  4839              LDR      r0,|L2.252|
000016  f7fffffe          BL       GPIO_ResetBits
;;;56         GPIO_ResetBits(PG_OK_PORT,      PG_OK_PIN);
00001a  f44f4100          MOV      r1,#0x8000
00001e  4837              LDR      r0,|L2.252|
000020  f7fffffe          BL       GPIO_ResetBits
;;;57         GPIO_ResetBits(PG_BUSY_PORT,    PG_BUSY_PIN);
000024  f44f4180          MOV      r1,#0x4000
000028  4834              LDR      r0,|L2.252|
00002a  f7fffffe          BL       GPIO_ResetBits
;;;58         
;;;59     	GPIO_ResetBits(DUT_OK_PORT,     DUT_OK_PIN);
00002e  f44f4100          MOV      r1,#0x8000
000032  4832              LDR      r0,|L2.252|
000034  f7fffffe          BL       GPIO_ResetBits
;;;60         GPIO_ResetBits(DUT_BUSY_PORT,   DUT_BUSY_PIN);
000038  f44f4180          MOV      r1,#0x4000
00003c  482f              LDR      r0,|L2.252|
00003e  f7fffffe          BL       GPIO_ResetBits
;;;61         GPIO_ResetBits(DUT_NG2_PORT,    DUT_NG2_PIN);
000042  f44f5100          MOV      r1,#0x2000
000046  482d              LDR      r0,|L2.252|
000048  f7fffffe          BL       GPIO_ResetBits
;;;62         GPIO_ResetBits(DUT_NG3_PORT,    DUT_NG3_PIN);
00004c  f44f5100          MOV      r1,#0x2000
000050  482a              LDR      r0,|L2.252|
000052  f7fffffe          BL       GPIO_ResetBits
;;;63         GPIO_ResetBits(DUT_NG4_PORT,    DUT_NG4_PIN);
000056  f44f5100          MOV      r1,#0x2000
00005a  4828              LDR      r0,|L2.252|
00005c  f7fffffe          BL       GPIO_ResetBits
;;;64         GPIO_ResetBits(DUT_NG5_PORT,    DUT_NG5_PIN);
000060  f44f5100          MOV      r1,#0x2000
000064  4825              LDR      r0,|L2.252|
000066  f7fffffe          BL       GPIO_ResetBits
;;;65         
;;;66     	gpio_init.GPIO_Mode     = GPIO_Mode_OUT;
00006a  2001              MOVS     r0,#1
00006c  f88d0004          STRB     r0,[sp,#4]
;;;67     	gpio_init.GPIO_OType    = GPIO_OType_PP;
000070  2000              MOVS     r0,#0
000072  f88d0006          STRB     r0,[sp,#6]
;;;68         gpio_init.GPIO_PuPd     = GPIO_PuPd_UP;
000076  2001              MOVS     r0,#1
000078  f88d0007          STRB     r0,[sp,#7]
;;;69     	gpio_init.GPIO_Pin      = PG_BUSY_PIN ;
00007c  0380              LSLS     r0,r0,#14
00007e  9000              STR      r0,[sp,#0]
;;;70     	GPIO_Init(PG_BUSY_PORT, &gpio_init);
000080  4669              MOV      r1,sp
000082  481e              LDR      r0,|L2.252|
000084  f7fffffe          BL       GPIO_Init
;;;71         
;;;72         gpio_init.GPIO_Pin  = PG_OK_PIN;
000088  f44f4000          MOV      r0,#0x8000
00008c  9000              STR      r0,[sp,#0]
;;;73     	GPIO_Init(PG_OK_PORT, &gpio_init);
00008e  4669              MOV      r1,sp
000090  481a              LDR      r0,|L2.252|
000092  f7fffffe          BL       GPIO_Init
;;;74         
;;;75         gpio_init.GPIO_Pin  = PG_NG_PIN;
000096  f44f5000          MOV      r0,#0x2000
00009a  9000              STR      r0,[sp,#0]
;;;76     	GPIO_Init(PG_NG_PORT, &gpio_init);
00009c  4669              MOV      r1,sp
00009e  4817              LDR      r0,|L2.252|
0000a0  f7fffffe          BL       GPIO_Init
;;;77         
;;;78         gpio_init.GPIO_Pin  = DUT_BUSY_PIN;
0000a4  f44f4080          MOV      r0,#0x4000
0000a8  9000              STR      r0,[sp,#0]
;;;79     	GPIO_Init(DUT_BUSY_PORT, &gpio_init);
0000aa  4669              MOV      r1,sp
0000ac  4813              LDR      r0,|L2.252|
0000ae  f7fffffe          BL       GPIO_Init
;;;80         
;;;81         gpio_init.GPIO_Pin  = DUT_OK_PIN;
0000b2  f44f4000          MOV      r0,#0x8000
0000b6  9000              STR      r0,[sp,#0]
;;;82     	GPIO_Init(DUT_OK_PORT, &gpio_init);
0000b8  4669              MOV      r1,sp
0000ba  4810              LDR      r0,|L2.252|
0000bc  f7fffffe          BL       GPIO_Init
;;;83         
;;;84         gpio_init.GPIO_Pin  = DUT_NG2_PIN;
0000c0  f44f5000          MOV      r0,#0x2000
0000c4  9000              STR      r0,[sp,#0]
;;;85     	GPIO_Init(DUT_NG2_PORT, &gpio_init);
0000c6  4669              MOV      r1,sp
0000c8  480c              LDR      r0,|L2.252|
0000ca  f7fffffe          BL       GPIO_Init
;;;86         
;;;87         gpio_init.GPIO_Pin  = DUT_NG3_PIN;
0000ce  f44f5000          MOV      r0,#0x2000
0000d2  9000              STR      r0,[sp,#0]
;;;88     	GPIO_Init(DUT_NG3_PORT, &gpio_init);
0000d4  4669              MOV      r1,sp
0000d6  4809              LDR      r0,|L2.252|
0000d8  f7fffffe          BL       GPIO_Init
;;;89         
;;;90         gpio_init.GPIO_Pin  = DUT_NG4_PIN;
0000dc  f44f5000          MOV      r0,#0x2000
0000e0  9000              STR      r0,[sp,#0]
;;;91     	GPIO_Init(DUT_NG4_PORT, &gpio_init);
0000e2  4669              MOV      r1,sp
0000e4  4805              LDR      r0,|L2.252|
0000e6  f7fffffe          BL       GPIO_Init
;;;92         
;;;93         gpio_init.GPIO_Pin  = DUT_NG5_PIN;
0000ea  f44f5000          MOV      r0,#0x2000
0000ee  9000              STR      r0,[sp,#0]
;;;94     	GPIO_Init(DUT_NG5_PORT, &gpio_init);
0000f0  4669              MOV      r1,sp
0000f2  4802              LDR      r0,|L2.252|
0000f4  f7fffffe          BL       GPIO_Init
;;;95     }
0000f8  bd1c              POP      {r2-r4,pc}
;;;96     
                          ENDP

0000fa  0000              DCW      0x0000
                  |L2.252|
                          DCD      0x40021000

                          AREA ||.data||, DATA, ALIGN=2

                  ng_bin_msg_table
000000  05000000          DCB      0x05,0x00,0x00,0x00
                          DCD      0x40021000
000008  8000              DCW      0x8000
00000a  0000              DCB      0x00,0x00
00000c  06000000          DCB      0x06,0x00,0x00,0x00
                          DCD      0x40021000
000014  2000              DCW      0x2000
000016  0000              DCB      0x00,0x00
000018  07000000          DCB      0x07,0x00,0x00,0x00
                          DCD      0x40021000
000020  2000              DCW      0x2000
000022  0000              DCB      0x00,0x00
000024  08000000          DCB      0x08,0x00,0x00,0x00
                          DCD      0x40021000
00002c  2000              DCW      0x2000
00002e  0000              DCB      0x00,0x00
000030  09000000          DCB      0x09,0x00,0x00,0x00
                          DCD      0x40021000
000038  2000              DCW      0x2000
00003a  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_prog_robot_comm.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_bsp_prog_robot_comm_c_6cb6deca____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___21_bsp_prog_robot_comm_c_6cb6deca____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_bsp_prog_robot_comm_c_6cb6deca____REVSH|
#line 144
|__asm___21_bsp_prog_robot_comm_c_6cb6deca____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
