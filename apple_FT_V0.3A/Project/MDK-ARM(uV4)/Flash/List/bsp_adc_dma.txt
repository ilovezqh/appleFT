; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\bsp_adc_dma.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_adc_dma.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\bsp_adc_dma.crf ..\..\User\bsp_stm32f4xx\src\bsp_adc_dma.c]
                          THUMB

                          AREA ||i.GetTemp||, CODE, READONLY, ALIGN=2

                  GetTemp PROC
;;;180    */
;;;181    float GetTemp(uint16_t advalue)
000000  ee010a10          VMOV     s2,r0
;;;182    {
;;;183        float Vtemp_sensor;
;;;184        float  Current_Temp;
;;;185        
;;;186        Vtemp_sensor = advalue * 3.3f/ 4095;  				           
000004  eeb81a41          VCVT.F32.U32 s2,s2
000008  eddf1a0c          VLDR     s3,|L1.60|
00000c  ee211a21          VMUL.F32 s2,s2,s3
000010  eddf1a0b          VLDR     s3,|L1.64|
000014  ee812a21          VDIV.F32 s4,s2,s3
000018  eef00a42          VMOV.F32 s1,s4
;;;187        Current_Temp = (Vtemp_sensor - 0.76f)/0.0025f + 25;  
00001c  ed9f1a09          VLDR     s2,|L1.68|
000020  ee301ac1          VSUB.F32 s2,s1,s2
000024  eddf1a08          VLDR     s3,|L1.72|
000028  ee812a21          VDIV.F32 s4,s2,s3
00002c  eeb31a09          VMOV.F32 s2,#25.00000000
000030  ee321a01          VADD.F32 s2,s4,s2
000034  eeb00a41          VMOV.F32 s0,s2
;;;188        
;;;189        return Current_Temp;
;;;190    }
000038  4770              BX       lr
;;;191    
                          ENDP

00003a  0000              DCW      0x0000
                  |L1.60|
00003c  40533333          DCFS     0x40533333 ; 3.2999999523162842
                  |L1.64|
000040  457ff000          DCFS     0x457ff000 ; 4095
                  |L1.68|
000044  3f428f5c          DCFS     0x3f428f5c ; 0.75999999046325684
                  |L1.72|
000048  3b23d70a          DCFS     0x3b23d70a ; 0.0024999999441206455

                          AREA ||i.bsp_InitADC||, CODE, READONLY, ALIGN=2

                  bsp_InitADC PROC
;;;35     */
;;;36     void bsp_InitADC(void)
000000  b500              PUSH     {lr}
;;;37     {
000002  b09b              SUB      sp,sp,#0x6c
;;;38         ADC_InitTypeDef       ADC_InitStructure={0};
000004  2118              MOVS     r1,#0x18
000006  a815              ADD      r0,sp,#0x54
000008  f7fffffe          BL       __aeabi_memclr4
;;;39     	ADC_CommonInitTypeDef ADC_CommonInitStructure={0};
00000c  2000              MOVS     r0,#0
00000e  9011              STR      r0,[sp,#0x44]
000010  9012              STR      r0,[sp,#0x48]
000012  9013              STR      r0,[sp,#0x4c]
000014  9014              STR      r0,[sp,#0x50]
;;;40     	DMA_InitTypeDef       DMA_InitStructure={0};
000016  213c              MOVS     r1,#0x3c
000018  a802              ADD      r0,sp,#8
00001a  f7fffffe          BL       __aeabi_memclr4
;;;41     	GPIO_InitTypeDef      GPIO_InitStructure={0};
00001e  2000              MOVS     r0,#0
000020  9000              STR      r0,[sp,#0]
000022  9001              STR      r0,[sp,#4]
;;;42     	
;;;43     	/* 使能外设时钟 */
;;;44     	RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_DMA2 | RCC_AHB1Periph_GPIOA | RCC_AHB1Periph_GPIOC, ENABLE);
000024  2101              MOVS     r1,#1
000026  4872              LDR      r0,|L2.496|
000028  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;45     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);
00002c  2101              MOVS     r1,#1
00002e  0208              LSLS     r0,r1,#8
000030  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;46         
;;;47         
;;;48         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;                                   //ADC123_IN2  
000034  2004              MOVS     r0,#4
000036  9000              STR      r0,[sp,#0]
;;;49     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000038  2003              MOVS     r0,#3
00003a  f88d0004          STRB     r0,[sp,#4]
;;;50     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00003e  2000              MOVS     r0,#0
000040  f88d0007          STRB     r0,[sp,#7]
;;;51     	GPIO_Init(GPIOA, &GPIO_InitStructure);
000044  4669              MOV      r1,sp
000046  486b              LDR      r0,|L2.500|
000048  f7fffffe          BL       GPIO_Init
;;;52         
;;;53         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;                                   //ADC123_IN3
00004c  2008              MOVS     r0,#8
00004e  9000              STR      r0,[sp,#0]
;;;54     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000050  2003              MOVS     r0,#3
000052  f88d0004          STRB     r0,[sp,#4]
;;;55     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
000056  2000              MOVS     r0,#0
000058  f88d0007          STRB     r0,[sp,#7]
;;;56     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00005c  4669              MOV      r1,sp
00005e  4865              LDR      r0,|L2.500|
000060  f7fffffe          BL       GPIO_Init
;;;57         
;;;58         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0; 
000064  2001              MOVS     r0,#1
000066  9000              STR      r0,[sp,#0]
;;;59     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000068  2003              MOVS     r0,#3
00006a  f88d0004          STRB     r0,[sp,#4]
;;;60     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00006e  2000              MOVS     r0,#0
000070  f88d0007          STRB     r0,[sp,#7]
;;;61     	GPIO_Init(GPIOC, &GPIO_InitStructure);
000074  4669              MOV      r1,sp
000076  4860              LDR      r0,|L2.504|
000078  f7fffffe          BL       GPIO_Init
;;;62         
;;;63         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
00007c  2002              MOVS     r0,#2
00007e  9000              STR      r0,[sp,#0]
;;;64     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000080  2003              MOVS     r0,#3
000082  f88d0004          STRB     r0,[sp,#4]
;;;65     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
000086  2000              MOVS     r0,#0
000088  f88d0007          STRB     r0,[sp,#7]
;;;66     	GPIO_Init(GPIOC, &GPIO_InitStructure);
00008c  4669              MOV      r1,sp
00008e  485a              LDR      r0,|L2.504|
000090  f7fffffe          BL       GPIO_Init
;;;67         
;;;68         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;  
000094  2004              MOVS     r0,#4
000096  9000              STR      r0,[sp,#0]
;;;69     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000098  2003              MOVS     r0,#3
00009a  f88d0004          STRB     r0,[sp,#4]
;;;70     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
00009e  2000              MOVS     r0,#0
0000a0  f88d0007          STRB     r0,[sp,#7]
;;;71     	GPIO_Init(GPIOC, &GPIO_InitStructure);
0000a4  4669              MOV      r1,sp
0000a6  4854              LDR      r0,|L2.504|
0000a8  f7fffffe          BL       GPIO_Init
;;;72         
;;;73         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;                                   ////ADC123_IN13 IOVCC
0000ac  2008              MOVS     r0,#8
0000ae  9000              STR      r0,[sp,#0]
;;;74     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
0000b0  2003              MOVS     r0,#3
0000b2  f88d0004          STRB     r0,[sp,#4]
;;;75     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
0000b6  2000              MOVS     r0,#0
0000b8  f88d0007          STRB     r0,[sp,#7]
;;;76     	GPIO_Init(GPIOC, &GPIO_InitStructure);
0000bc  4669              MOV      r1,sp
0000be  484e              LDR      r0,|L2.504|
0000c0  f7fffffe          BL       GPIO_Init
;;;77         
;;;78      
;;;79         
;;;80         
;;;81     
;;;82     	/* DMA2 Stream0 channel0 配置-------------------------------------------------- */
;;;83     	DMA_InitStructure.DMA_Channel = DMA_Channel_0;  
0000c4  2000              MOVS     r0,#0
0000c6  9002              STR      r0,[sp,#8]
;;;84     	DMA_InitStructure.DMA_PeripheralBaseAddr = (uint32_t)ADC1_DR_ADDRESS;
0000c8  484c              LDR      r0,|L2.508|
0000ca  9003              STR      r0,[sp,#0xc]
;;;85     	DMA_InitStructure.DMA_Memory0BaseAddr = (uint32_t)&g_adc_value;;
0000cc  484c              LDR      r0,|L2.512|
0000ce  9004              STR      r0,[sp,#0x10]
;;;86     	DMA_InitStructure.DMA_DIR = DMA_DIR_PeripheralToMemory;
0000d0  2000              MOVS     r0,#0
0000d2  9005              STR      r0,[sp,#0x14]
;;;87     	DMA_InitStructure.DMA_BufferSize = ADC_DMA_CH_SUM;
0000d4  2008              MOVS     r0,#8
0000d6  9006              STR      r0,[sp,#0x18]
;;;88     	DMA_InitStructure.DMA_PeripheralInc = DMA_PeripheralInc_Disable;
0000d8  2000              MOVS     r0,#0
0000da  9007              STR      r0,[sp,#0x1c]
;;;89     	DMA_InitStructure.DMA_MemoryInc = DMA_MemoryInc_Enable;
0000dc  f44f6080          MOV      r0,#0x400
0000e0  9008              STR      r0,[sp,#0x20]
;;;90         
;;;91         DMA_InitStructure.DMA_PeripheralDataSize = DMA_PeripheralDataSize_HalfWord;
0000e2  0040              LSLS     r0,r0,#1
0000e4  9009              STR      r0,[sp,#0x24]
;;;92         DMA_InitStructure.DMA_MemoryDataSize = DMA_MemoryDataSize_HalfWord;
0000e6  0080              LSLS     r0,r0,#2
0000e8  900a              STR      r0,[sp,#0x28]
;;;93         
;;;94     	DMA_InitStructure.DMA_Mode = DMA_Mode_Circular;
0000ea  1140              ASRS     r0,r0,#5
0000ec  900b              STR      r0,[sp,#0x2c]
;;;95     	DMA_InitStructure.DMA_Priority = DMA_Priority_High;
0000ee  0240              LSLS     r0,r0,#9
0000f0  900c              STR      r0,[sp,#0x30]
;;;96     	DMA_InitStructure.DMA_FIFOMode = DMA_FIFOMode_Disable;         
0000f2  2000              MOVS     r0,#0
0000f4  900d              STR      r0,[sp,#0x34]
;;;97     	DMA_InitStructure.DMA_FIFOThreshold = DMA_FIFOThreshold_HalfFull;
0000f6  2001              MOVS     r0,#1
0000f8  900e              STR      r0,[sp,#0x38]
;;;98     	DMA_InitStructure.DMA_MemoryBurst = DMA_MemoryBurst_Single;
0000fa  2000              MOVS     r0,#0
0000fc  900f              STR      r0,[sp,#0x3c]
;;;99     	DMA_InitStructure.DMA_PeripheralBurst = DMA_PeripheralBurst_Single;
0000fe  9010              STR      r0,[sp,#0x40]
;;;100    	DMA_Init(DMA2_Stream0, &DMA_InitStructure);
000100  a902              ADD      r1,sp,#8
000102  4840              LDR      r0,|L2.516|
000104  f7fffffe          BL       DMA_Init
;;;101    
;;;102    	/* DMA2_Stream0 enable */
;;;103    	DMA_Cmd(DMA2_Stream0, ENABLE);
000108  2101              MOVS     r1,#1
00010a  483e              LDR      r0,|L2.516|
00010c  f7fffffe          BL       DMA_Cmd
;;;104        bsp_DelayMS(100);
000110  2064              MOVS     r0,#0x64
000112  f7fffffe          BL       bsp_DelayMS
;;;105        /****************************************************************************   
;;;106    	  PCLK2 = HCLK / 2 
;;;107    	  下面选择的是2分频
;;;108    	  ADCCLK = PCLK2 /8 = HCLK / 8 = 168 / 8 = 21M
;;;109          ADC采样频率： Sampling Time + Conversion Time = 480 + 12 cycles = 492cyc
;;;110                        Conversion Time = 21MHz / 492cyc = 42.6ksps. 
;;;111    	*****************************************************************************/
;;;112        
;;;113    	/* ADC Common 配置 ----------------------------------------------------------*/
;;;114        ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
000116  2000              MOVS     r0,#0
000118  9011              STR      r0,[sp,#0x44]
;;;115        ADC_CommonInitStructure.ADC_Prescaler = ADC_Prescaler_Div2;
00011a  9012              STR      r0,[sp,#0x48]
;;;116        ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
00011c  9013              STR      r0,[sp,#0x4c]
;;;117        ADC_CommonInitStructure.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
00011e  9014              STR      r0,[sp,#0x50]
;;;118        ADC_CommonInit(&ADC_CommonInitStructure);
000120  a811              ADD      r0,sp,#0x44
000122  f7fffffe          BL       ADC_CommonInit
;;;119    
;;;120    	/* ADC1 regular channel 12 configuration ************************************/
;;;121    	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
000126  2000              MOVS     r0,#0
000128  9015              STR      r0,[sp,#0x54]
;;;122    	ADC_InitStructure.ADC_ScanConvMode = ENABLE;
00012a  2001              MOVS     r0,#1
00012c  f88d0058          STRB     r0,[sp,#0x58]
;;;123    	ADC_InitStructure.ADC_ContinuousConvMode = ENABLE;
000130  f88d0059          STRB     r0,[sp,#0x59]
;;;124    	ADC_InitStructure.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
000134  2000              MOVS     r0,#0
000136  9017              STR      r0,[sp,#0x5c]
;;;125    	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
000138  9019              STR      r0,[sp,#0x64]
;;;126    	ADC_InitStructure.ADC_NbrOfConversion = ADC_DMA_CH_SUM;
00013a  2008              MOVS     r0,#8
00013c  f88d0068          STRB     r0,[sp,#0x68]
;;;127        ADC_Init(ADC1, &ADC_InitStructure);
000140  a915              ADD      r1,sp,#0x54
000142  482e              LDR      r0,|L2.508|
000144  384c              SUBS     r0,r0,#0x4c
000146  f7fffffe          BL       ADC_Init
;;;128        
;;;129         /* Enable ADC1 DMA */
;;;130        ADC_DMACmd(ADC1, ENABLE);
00014a  2101              MOVS     r1,#1
00014c  482b              LDR      r0,|L2.508|
00014e  384c              SUBS     r0,r0,#0x4c
000150  f7fffffe          BL       ADC_DMACmd
;;;131     
;;;132        /* ADC1 regular channel18 (VBAT) configuration ******************************/
;;;133        ADC_RegularChannelConfig(ADC1, ADC_Channel_2, 1, ADC_SampleTime_480Cycles);    //PA_OUT_N
000154  2307              MOVS     r3,#7
000156  2201              MOVS     r2,#1
000158  2102              MOVS     r1,#2
00015a  4828              LDR      r0,|L2.508|
00015c  384c              SUBS     r0,r0,#0x4c
00015e  f7fffffe          BL       ADC_RegularChannelConfig
;;;134        /* ADC1 regular channel18 (VBAT) configuration ******************************/
;;;135        ADC_RegularChannelConfig(ADC1, ADC_Channel_3, 2, ADC_SampleTime_480Cycles);    //PA_OUT_P
000162  2307              MOVS     r3,#7
000164  2202              MOVS     r2,#2
000166  2103              MOVS     r1,#3
000168  4824              LDR      r0,|L2.508|
00016a  384c              SUBS     r0,r0,#0x4c
00016c  f7fffffe          BL       ADC_RegularChannelConfig
;;;136        
;;;137        ADC_RegularChannelConfig(ADC1, ADC_Channel_11, 3,  ADC_SampleTime_480Cycles );//电流测量
000170  2307              MOVS     r3,#7
000172  2203              MOVS     r2,#3
000174  210b              MOVS     r1,#0xb
000176  4821              LDR      r0,|L2.508|
000178  384c              SUBS     r0,r0,#0x4c
00017a  f7fffffe          BL       ADC_RegularChannelConfig
;;;138        /* ADC1 regular channels 10, 11 configuration */ 
;;;139        ADC_RegularChannelConfig(ADC1, ADC_Channel_12, 4, ADC_SampleTime_480Cycles);
00017e  2307              MOVS     r3,#7
000180  2204              MOVS     r2,#4
000182  210c              MOVS     r1,#0xc
000184  481d              LDR      r0,|L2.508|
000186  384c              SUBS     r0,r0,#0x4c
000188  f7fffffe          BL       ADC_RegularChannelConfig
;;;140        
;;;141        ADC_RegularChannelConfig(ADC1, ADC_Channel_13, 5, ADC_SampleTime_480Cycles);   
00018c  2307              MOVS     r3,#7
00018e  2205              MOVS     r2,#5
000190  210d              MOVS     r1,#0xd
000192  481a              LDR      r0,|L2.508|
000194  384c              SUBS     r0,r0,#0x4c
000196  f7fffffe          BL       ADC_RegularChannelConfig
;;;142        
;;;143        //ADC_RegularChannelConfig(ADC1, ADC_Channel_7, 6, ADC_SampleTime_480Cycles); 
;;;144        
;;;145        ADC_RegularChannelConfig(ADC1, ADC_Channel_Vrefint, 6, ADC_SampleTime_480Cycles);
00019a  2307              MOVS     r3,#7
00019c  2206              MOVS     r2,#6
00019e  2111              MOVS     r1,#0x11
0001a0  4816              LDR      r0,|L2.508|
0001a2  384c              SUBS     r0,r0,#0x4c
0001a4  f7fffffe          BL       ADC_RegularChannelConfig
;;;146        ADC_RegularChannelConfig(ADC1, ADC_Channel_Vbat,    7, ADC_SampleTime_480Cycles);
0001a8  2307              MOVS     r3,#7
0001aa  461a              MOV      r2,r3
0001ac  2112              MOVS     r1,#0x12
0001ae  4813              LDR      r0,|L2.508|
0001b0  384c              SUBS     r0,r0,#0x4c
0001b2  f7fffffe          BL       ADC_RegularChannelConfig
;;;147        
;;;148        ADC_RegularChannelConfig(ADC1, ADC_Channel_10,  8, ADC_SampleTime_480Cycles);
0001b6  2307              MOVS     r3,#7
0001b8  2208              MOVS     r2,#8
0001ba  210a              MOVS     r1,#0xa
0001bc  480f              LDR      r0,|L2.508|
0001be  384c              SUBS     r0,r0,#0x4c
0001c0  f7fffffe          BL       ADC_RegularChannelConfig
;;;149        
;;;150        /* Enable VBAT channel */
;;;151        ADC_VBATCmd(ENABLE); 
0001c4  2001              MOVS     r0,#1
0001c6  f7fffffe          BL       ADC_VBATCmd
;;;152        
;;;153        ADC_TempSensorVrefintCmd(ENABLE); 
0001ca  2001              MOVS     r0,#1
0001cc  f7fffffe          BL       ADC_TempSensorVrefintCmd
;;;154    
;;;155        /* Enable DMA request after last transfer (Single-ADC mode) */
;;;156        ADC_DMARequestAfterLastTransferCmd(ADC1, ENABLE);
0001d0  2101              MOVS     r1,#1
0001d2  480a              LDR      r0,|L2.508|
0001d4  384c              SUBS     r0,r0,#0x4c
0001d6  f7fffffe          BL       ADC_DMARequestAfterLastTransferCmd
;;;157     
;;;158        /* Enable ADC1 **************************************************************/
;;;159        ADC_Cmd(ADC1, ENABLE);
0001da  2101              MOVS     r1,#1
0001dc  4807              LDR      r0,|L2.508|
0001de  384c              SUBS     r0,r0,#0x4c
0001e0  f7fffffe          BL       ADC_Cmd
;;;160         
;;;161            /* Start ADC1 Software Conversion */
;;;162        ADC_SoftwareStartConv(ADC1);
0001e4  4805              LDR      r0,|L2.508|
0001e6  384c              SUBS     r0,r0,#0x4c
0001e8  f7fffffe          BL       ADC_SoftwareStartConv
;;;163    //    bsp_DelayMS(3000);
;;;164    }
0001ec  b01b              ADD      sp,sp,#0x6c
0001ee  bd00              POP      {pc}
;;;165    
                          ENDP

                  |L2.496|
                          DCD      0x00400005
                  |L2.500|
                          DCD      0x40020000
                  |L2.504|
                          DCD      0x40020800
                  |L2.508|
                          DCD      0x4001204c
                  |L2.512|
                          DCD      g_adc_value
                  |L2.516|
                          DCD      0x40026410

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_adc_value
                          %        16

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_adc_dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_adc_dma_c_9b6e839a____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_bsp_adc_dma_c_9b6e839a____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_bsp_adc_dma_c_9b6e839a____REVSH|
#line 144
|__asm___13_bsp_adc_dma_c_9b6e839a____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
