; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\usbd_desc.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usbd_desc.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\usbd_desc.crf ..\..\User\usbd_mass_storage\usbd_desc.c]
                          THUMB

                          AREA ||i.USBD_USR_ConfigStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_USR_ConfigStrDescriptor PROC
;;;267    */
;;;268    uint8_t *  USBD_USR_ConfigStrDescriptor( uint8_t speed , uint16_t *length)
000000  b570              PUSH     {r4-r6,lr}
;;;269    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;270      if(speed  == USB_OTG_SPEED_HIGH)
000006  b92d              CBNZ     r5,|L1.20|
;;;271      {  
;;;272        USBD_GetString (USBD_CONFIGURATION_HS_STRING, USBD_StrDesc, length);
000008  4622              MOV      r2,r4
00000a  4906              LDR      r1,|L1.36|
00000c  a006              ADR      r0,|L1.40|
00000e  f7fffffe          BL       USBD_GetString
000012  e004              B        |L1.30|
                  |L1.20|
;;;273      }
;;;274      else
;;;275      {
;;;276        USBD_GetString (USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length); 
000014  4622              MOV      r2,r4
000016  4903              LDR      r1,|L1.36|
000018  a003              ADR      r0,|L1.40|
00001a  f7fffffe          BL       USBD_GetString
                  |L1.30|
;;;277      }
;;;278      return USBD_StrDesc;  
00001e  4801              LDR      r0,|L1.36|
;;;279    }
000020  bd70              POP      {r4-r6,pc}
;;;280    
                          ENDP

000022  0000              DCW      0x0000
                  |L1.36|
                          DCD      USBD_StrDesc
                  |L1.40|
000028  4d534320          DCB      "MSC Config",0
00002c  436f6e66
000030  696700  
000033  00                DCB      0

                          AREA ||i.USBD_USR_DeviceDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_USR_DeviceDescriptor PROC
;;;185    */
;;;186    uint8_t *  USBD_USR_DeviceDescriptor( uint8_t speed , uint16_t *length)
000000  4602              MOV      r2,r0
;;;187    {
;;;188      *length = sizeof(USBD_DeviceDesc);
000002  2012              MOVS     r0,#0x12
000004  8008              STRH     r0,[r1,#0]
;;;189      return USBD_DeviceDesc;
000006  4801              LDR      r0,|L2.12|
;;;190    }
000008  4770              BX       lr
;;;191    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      USBD_DeviceDesc

                          AREA ||i.USBD_USR_InterfaceStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_USR_InterfaceStrDescriptor PROC
;;;288    */
;;;289    uint8_t *  USBD_USR_InterfaceStrDescriptor( uint8_t speed , uint16_t *length)
000000  b570              PUSH     {r4-r6,lr}
;;;290    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;291      if(speed == 0)
000006  b92d              CBNZ     r5,|L3.20|
;;;292      {
;;;293        USBD_GetString (USBD_INTERFACE_HS_STRING, USBD_StrDesc, length);
000008  4622              MOV      r2,r4
00000a  4906              LDR      r1,|L3.36|
00000c  a006              ADR      r0,|L3.40|
00000e  f7fffffe          BL       USBD_GetString
000012  e004              B        |L3.30|
                  |L3.20|
;;;294      }
;;;295      else
;;;296      {
;;;297        USBD_GetString (USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
000014  4622              MOV      r2,r4
000016  4903              LDR      r1,|L3.36|
000018  a003              ADR      r0,|L3.40|
00001a  f7fffffe          BL       USBD_GetString
                  |L3.30|
;;;298      }
;;;299      return USBD_StrDesc;  
00001e  4801              LDR      r0,|L3.36|
;;;300    }
000020  bd70              POP      {r4-r6,pc}
;;;301    
                          ENDP

000022  0000              DCW      0x0000
                  |L3.36|
                          DCD      USBD_StrDesc
                  |L3.40|
000028  4d534320          DCB      "MSC Interface",0
00002c  496e7465
000030  72666163
000034  6500    
000036  00                DCB      0
000037  00                DCB      0

                          AREA ||i.USBD_USR_LangIDStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_USR_LangIDStrDescriptor PROC
;;;198    */
;;;199    uint8_t *  USBD_USR_LangIDStrDescriptor( uint8_t speed , uint16_t *length)
000000  4602              MOV      r2,r0
;;;200    {
;;;201      *length =  sizeof(USBD_LangIDDesc);  
000002  2004              MOVS     r0,#4
000004  8008              STRH     r0,[r1,#0]
;;;202      return USBD_LangIDDesc;
000006  4801              LDR      r0,|L4.12|
;;;203    }
000008  4770              BX       lr
;;;204    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      USBD_LangIDDesc

                          AREA ||i.USBD_USR_ManufacturerStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_USR_ManufacturerStrDescriptor PROC
;;;234    */
;;;235    uint8_t *  USBD_USR_ManufacturerStrDescriptor( uint8_t speed , uint16_t *length)
000000  b570              PUSH     {r4-r6,lr}
;;;236    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;237      USBD_GetString (USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
000006  4622              MOV      r2,r4
000008  4902              LDR      r1,|L5.20|
00000a  a003              ADR      r0,|L5.24|
00000c  f7fffffe          BL       USBD_GetString
;;;238      return USBD_StrDesc;
000010  4800              LDR      r0,|L5.20|
;;;239    }
000012  bd70              POP      {r4-r6,pc}
;;;240    
                          ENDP

                  |L5.20|
                          DCD      USBD_StrDesc
                  |L5.24|
000018  53544d69          DCB      "STMicroelectronics",0
00001c  63726f65
000020  6c656374
000024  726f6e69
000028  637300  
00002b  00                DCB      0

                          AREA ||i.USBD_USR_ProductStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_USR_ProductStrDescriptor PROC
;;;212    */
;;;213    uint8_t *  USBD_USR_ProductStrDescriptor( uint8_t speed , uint16_t *length)
000000  b570              PUSH     {r4-r6,lr}
;;;214    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;215     
;;;216      
;;;217      if(speed == 0)
000006  b92d              CBNZ     r5,|L6.20|
;;;218      {   
;;;219        USBD_GetString (USBD_PRODUCT_HS_STRING, USBD_StrDesc, length);
000008  4622              MOV      r2,r4
00000a  4906              LDR      r1,|L6.36|
00000c  a006              ADR      r0,|L6.40|
00000e  f7fffffe          BL       USBD_GetString
000012  e004              B        |L6.30|
                  |L6.20|
;;;220      }
;;;221      else
;;;222      {
;;;223        USBD_GetString (USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);    
000014  4622              MOV      r2,r4
000016  4903              LDR      r1,|L6.36|
000018  a009              ADR      r0,|L6.64|
00001a  f7fffffe          BL       USBD_GetString
                  |L6.30|
;;;224      }
;;;225      return USBD_StrDesc;
00001e  4801              LDR      r0,|L6.36|
;;;226    }
000020  bd70              POP      {r4-r6,pc}
;;;227    
                          ENDP

000022  0000              DCW      0x0000
                  |L6.36|
                          DCD      USBD_StrDesc
                  |L6.40|
000028  4d617373          DCB      "Mass Storage in HS Mode",0
00002c  2053746f
000030  72616765
000034  20696e20
000038  4853204d
00003c  6f646500
                  |L6.64|
000040  4d617373          DCB      "Mass Storage in FS Mode",0
000044  2053746f
000048  72616765
00004c  20696e20
000050  4653204d
000054  6f646500

                          AREA ||i.USBD_USR_SerialStrDescriptor||, CODE, READONLY, ALIGN=2

                  USBD_USR_SerialStrDescriptor PROC
;;;247    */
;;;248    uint8_t *  USBD_USR_SerialStrDescriptor( uint8_t speed , uint16_t *length)
000000  b570              PUSH     {r4-r6,lr}
;;;249    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;250      if(speed  == USB_OTG_SPEED_HIGH)
000006  b92d              CBNZ     r5,|L7.20|
;;;251      {    
;;;252        USBD_GetString (USBD_SERIALNUMBER_HS_STRING, USBD_StrDesc, length);
000008  4622              MOV      r2,r4
00000a  4906              LDR      r1,|L7.36|
00000c  a006              ADR      r0,|L7.40|
00000e  f7fffffe          BL       USBD_GetString
000012  e004              B        |L7.30|
                  |L7.20|
;;;253      }
;;;254      else
;;;255      {
;;;256        USBD_GetString (USBD_SERIALNUMBER_FS_STRING, USBD_StrDesc, length);    
000014  4622              MOV      r2,r4
000016  4903              LDR      r1,|L7.36|
000018  a007              ADR      r0,|L7.56|
00001a  f7fffffe          BL       USBD_GetString
                  |L7.30|
;;;257      }
;;;258      return USBD_StrDesc;
00001e  4801              LDR      r0,|L7.36|
;;;259    }
000020  bd70              POP      {r4-r6,pc}
;;;260    
                          ENDP

000022  0000              DCW      0x0000
                  |L7.36|
                          DCD      USBD_StrDesc
                  |L7.40|
000028  30303030          DCB      "00000000001A",0
00002c  30303030
000030  30303141
000034  00      
000035  00                DCB      0
000036  00                DCB      0
000037  00                DCB      0
                  |L7.56|
000038  30303030          DCB      "00000000001B",0
00003c  30303030
000040  30303142
000044  00      
000045  00                DCB      0
000046  00                DCB      0
000047  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  USR_desc
                          DCD      USBD_USR_DeviceDescriptor
                          DCD      USBD_USR_LangIDStrDescriptor
                          DCD      USBD_USR_ManufacturerStrDescriptor
                          DCD      USBD_USR_ProductStrDescriptor
                          DCD      USBD_USR_SerialStrDescriptor
                          DCD      USBD_USR_ConfigStrDescriptor
                          DCD      USBD_USR_InterfaceStrDescriptor
                  USBD_DeviceDesc
00001c  12010002          DCB      0x12,0x01,0x00,0x02
000020  00000040          DCB      0x00,0x00,0x00,0x40
000024  83042057          DCB      0x83,0x04,0x20,0x57
000028  00020102          DCB      0x00,0x02,0x01,0x02
00002c  0301              DCB      0x03,0x01
                  USBD_DeviceQualifierDesc
00002e  0a06              DCB      0x0a,0x06
000030  00020000          DCB      0x00,0x02,0x00,0x00
000034  00400100          DCB      0x00,0x40,0x01,0x00
                  USBD_LangIDDesc
000038  04030904          DCB      0x04,0x03,0x09,0x04

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\usbd_mass_storage\\usbd_desc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_usbd_desc_c_USR_desc____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_usbd_desc_c_USR_desc____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_usbd_desc_c_USR_desc____REVSH|
#line 144
|__asm___11_usbd_desc_c_USR_desc____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
