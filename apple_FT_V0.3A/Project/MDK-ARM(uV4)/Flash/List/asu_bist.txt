; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\asu_bist.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\asu_bist.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\BERRY_TWI -I..\..\User\berry_ft -I..\..\User\ft_support -I..\..\User\berry_test -I..\..\User\factory_test -I..\..\User\emenu -I..\..\User\kiwi_ft -I..\..\User\kiwi_ft\spv40 -I..\..\User\kiwi_ft\spv40\peripheral -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\kiwi_ft -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\asu_bist.crf ..\..\User\kiwi_ft\asu_bist.c]
                          THUMB

                          AREA ||i.asu_bist_state||, CODE, READONLY, ALIGN=2

                  asu_bist_state PROC
;;;32     /* bist测试会配置很多模块，影响pattern运行，建议加 */
;;;33     fsm_rt_t asu_bist_state(void)
000000  b538              PUSH     {r3-r5,lr}
;;;34     {
;;;35         static enum
;;;36         {
;;;37             START = 0,
;;;38             IS_CONNECTED,           
;;;39             IS_BIST_TEST_CPL,
;;;40             
;;;41         } s_tState = START;
;;;42         fsm_rt_t ret = fsm_rt_cpl;
000002  2400              MOVS     r4,#0
;;;43     
;;;44        
;;;45         timer_creat();
;;;46         switch(s_tState)
000004  48f5              LDR      r0,|L1.988|
000006  7800              LDRB     r0,[r0,#0]  ; s_tState
000008  b120              CBZ      r0,|L1.20|
00000a  2801              CMP      r0,#1
00000c  d00f              BEQ      |L1.46|
00000e  2802              CMP      r0,#2
000010  d146              BNE      |L1.160|
000012  e046              B        |L1.162|
                  |L1.20|
;;;47         {
;;;48         case START:
;;;49             //logging("---- start ram BIST\r\n");
;;;50             asu_bus_set(asu_dis);
000014  2004              MOVS     r0,#4
000016  f7fffffe          BL       asu_bus_set
;;;51             is_bist_no_done.all = 0xffff;
00001a  f64f70ff          MOV      r0,#0xffff
00001e  49f0              LDR      r1,|L1.992|
000020  8008              STRH     r0,[r1,#0]
;;;52             s_tState++;
000022  48ee              LDR      r0,|L1.988|
000024  7800              LDRB     r0,[r0,#0]  ; s_tState
000026  1c40              ADDS     r0,r0,#1
000028  49ec              LDR      r1,|L1.988|
00002a  7008              STRB     r0,[r1,#0]
;;;53             //break;
;;;54         
;;;55         case IS_CONNECTED:
00002c  bf00              NOP      
                  |L1.46|
;;;56             {
;;;57                 int32_t err;
;;;58                 err = asu_bus_set(asu_asu);                                         //ASU连接
00002e  2003              MOVS     r0,#3
000030  f7fffffe          BL       asu_bus_set
000034  4605              MOV      r5,r0
;;;59                 if(err)   
000036  b115              CBZ      r5,|L1.62|
;;;60                 {
;;;61                     ret = fsm_rt_err_asu;
000038  f06f0406          MVN      r4,#6
;;;62                     goto fail;
00003c  e1c6              B        |L1.972|
                  |L1.62|
;;;63                 }
;;;64                 else
;;;65                 {
;;;66                     bist_init();
00003e  f7fffffe          BL       bist_init
;;;67                     //logging("start = %d\r\n",g_iRunTime);
;;;68                     asu_write_bitwise_or((uint32_t)&AON_MEM->MEMC_BIST_TEST, 1);    //AON域MEMC BIST 测试启动
000042  2101              MOVS     r1,#1
000044  48e7              LDR      r0,|L1.996|
000046  f7fffffe          BL       asu_write_bitwise_or
;;;69                     asu_write_bitwise_or((uint32_t)&DEV_MEMC->BIST_TEST, 0x7fff);   //MEMC sys_ram, cpu_ram, usb_ram 测试启动
00004a  f64771ff          MOV      r1,#0x7fff
00004e  48e6              LDR      r0,|L1.1000|
000050  f7fffffe          BL       asu_write_bitwise_or
;;;70                     asu_write_word((uint32_t)&DEV_ADC->BIST_EN, DEV_ADC_BIST_EN_CHN0_BIST_EN_ENABLE |
000054  210f              MOVS     r1,#0xf
000056  48e5              LDR      r0,|L1.1004|
000058  f7fffffe          BL       asu_write_word
;;;71                                                                 DEV_ADC_BIST_EN_CHN1_BIST_EN_ENABLE |
;;;72                                                                 DEV_ADC_BIST_EN_CHN2_BIST_EN_ENABLE |
;;;73                                                                 DEV_ADC_BIST_EN_CHN3_BIST_EN_ENABLE);
;;;74                     
;;;75                     asu_write_bitwise_or((uint32_t)&DEV_UDSP->BIST_EN, DEV_UDSP_BIST_EN_BUF0_BIST_EN_ENABLE |
00005c  2103              MOVS     r1,#3
00005e  48e4              LDR      r0,|L1.1008|
000060  f7fffffe          BL       asu_write_bitwise_or
;;;76                                                                        DEV_UDSP_BIST_EN_BUF1_BIST_EN_ENABLE);
;;;77                     
;;;78                     asu_write_bitwise_or((uint32_t)&DEV_NPU->BIST_TEST, DEV_NPU_BIST_TEST_BTEST);
000064  2101              MOVS     r1,#1
000066  48e3              LDR      r0,|L1.1012|
000068  f7fffffe          BL       asu_write_bitwise_or
;;;79                     
;;;80                     
;;;81                     asu_write_bitwise_or((uint32_t)&DEV_CACHE->BIST_TEST, DEV_CACHE_BIST_TEST_BIST_TEST);
00006c  2101              MOVS     r1,#1
00006e  48e2              LDR      r0,|L1.1016|
000070  f7fffffe          BL       asu_write_bitwise_or
;;;82                     
;;;83                     asu_write_bitwise_or((uint32_t)&AON_AUDI->BIST_TEST, AON_AUDI_BIST_TEST_TEST);
000074  2101              MOVS     r1,#1
000076  48e1              LDR      r0,|L1.1020|
000078  f7fffffe          BL       asu_write_bitwise_or
;;;84                     
;;;85                     asu_write_bitwise_or((uint32_t)&DEV_DAC->BIST_EN, DEV_DAC_BIST_EN_RAM_EN_ENABLE);
00007c  2101              MOVS     r1,#1
00007e  48e0              LDR      r0,|L1.1024|
000080  f7fffffe          BL       asu_write_bitwise_or
;;;86                     
;;;87                     asu_write_bitwise_or((uint32_t)&DEV_SRC->BIST_EN, DEV_SRC_BIST_EN_CHN0_CBUF_EN_ENABLE |
000084  f04f1115          MOV      r1,#0x150015
000088  48de              LDR      r0,|L1.1028|
00008a  f7fffffe          BL       asu_write_bitwise_or
;;;88                                                                       DEV_SRC_BIST_EN_CHN0_WBUF_EN_ENABLE | 
;;;89                                                                       DEV_SRC_BIST_EN_CHN1_CBUF_EN_ENABLE |
;;;90                                                                       DEV_SRC_BIST_EN_CHN1_RBUF_EN_ENABLE |
;;;91                                                                       DEV_SRC_BIST_EN_CHN0_FBUF_EN_ENABLE |
;;;92                                                                       DEV_SRC_BIST_EN_CHN1_FBUF_EN_ENABLE );
;;;93                     
;;;94                     timer_start(2000); //200ms超时
00008e  48de              LDR      r0,|L1.1032|
000090  6800              LDR      r0,[r0,#0]  ; g_iRunTime
000092  f50060fa          ADD      r0,r0,#0x7d0
000096  49dd              LDR      r1,|L1.1036|
000098  6008              STR      r0,[r1,#0]  ; timer
;;;95                     s_tState = IS_BIST_TEST_CPL;
00009a  2002              MOVS     r0,#2
00009c  49cf              LDR      r1,|L1.988|
00009e  7008              STRB     r0,[r1,#0]
                  |L1.160|
;;;96                 }
;;;97             }
;;;98             break;
0000a0  e191              B        |L1.966|
                  |L1.162|
;;;99             
;;;100        
;;;101        case IS_BIST_TEST_CPL:
;;;102            {
;;;103                if(is_bist_no_done.aon_mem_buf)//(!flg_bist_aon_mem_buf)
0000a2  48cf              LDR      r0,|L1.992|
0000a4  7800              LDRB     r0,[r0,#0]  ; is_bist_no_done
0000a6  f3c00040          UBFX     r0,r0,#1,#1
0000aa  b310              CBZ      r0,|L1.242|
;;;104                {
;;;105                    uint32_t data;
;;;106                    asu_read((uint32_t)&AON_MEM->MEMC_BIST_DONE, &data, 1);
0000ac  2201              MOVS     r2,#1
0000ae  4669              MOV      r1,sp
0000b0  48cc              LDR      r0,|L1.996|
0000b2  1d00              ADDS     r0,r0,#4
0000b4  f7fffffe          BL       asu_read
;;;107                    if(data & 0x01)
0000b8  9800              LDR      r0,[sp,#0]
0000ba  f0000001          AND      r0,r0,#1
0000be  b1b8              CBZ      r0,|L1.240|
;;;108                    {
;;;109    
;;;110                        is_bist_no_done.aon_mem_buf = 0;
0000c0  48c7              LDR      r0,|L1.992|
0000c2  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
0000c4  f0200002          BIC      r0,r0,#2
0000c8  49c5              LDR      r1,|L1.992|
0000ca  8008              STRH     r0,[r1,#0]
;;;111                        asu_read((uint32_t)&AON_MEM->MEMC_BIST_FAIL, &data, 1);
0000cc  2201              MOVS     r2,#1
0000ce  4669              MOV      r1,sp
0000d0  48c4              LDR      r0,|L1.996|
0000d2  3008              ADDS     r0,r0,#8
0000d4  f7fffffe          BL       asu_read
;;;112                        if(data & 0x01)
0000d8  9800              LDR      r0,[sp,#0]
0000da  f0000001          AND      r0,r0,#1
0000de  b138              CBZ      r0,|L1.240|
;;;113                        {
;;;114                            logging("FAIL AON MEM BIST!\r\n");
0000e0  48c9              LDR      r0,|L1.1032|
0000e2  6801              LDR      r1,[r0,#0]  ; g_iRunTime
0000e4  a0ca              ADR      r0,|L1.1040|
0000e6  f7fffffe          BL       logger_buffer_write
;;;115                            ret = fsm_rt_err_bist_aon_mem_buf;
0000ea  f06f0414          MVN      r4,#0x14
;;;116                            goto fail;
0000ee  e16d              B        |L1.972|
                  |L1.240|
;;;117                        }
;;;118                        else
;;;119                        {
;;;120                            //logging("SUCCESS AON MEM BIST!\r\n");
;;;121                        }
;;;122                    }
;;;123                }
0000f0  bf00              NOP      
                  |L1.242|
;;;124                
;;;125                
;;;126                if(is_bist_no_done.memc_ram)//(!flg_bist_memc_ram )
0000f2  48bb              LDR      r0,|L1.992|
0000f4  7800              LDRB     r0,[r0,#0]  ; is_bist_no_done
0000f6  f0000001          AND      r0,r0,#1
0000fa  b330              CBZ      r0,|L1.330|
;;;127                {
;;;128                    uint32_t data;
;;;129                    asu_read((uint32_t)&DEV_MEMC->BIST_DONE, &data, 1);
0000fc  2201              MOVS     r2,#1
0000fe  4669              MOV      r1,sp
000100  48b9              LDR      r0,|L1.1000|
000102  1d00              ADDS     r0,r0,#4
000104  f7fffffe          BL       asu_read
;;;130                    if((data & 0x7fff) == 0x7fff)
000108  9800              LDR      r0,[sp,#0]
00010a  f3c0000e          UBFX     r0,r0,#0,#15
00010e  f64771ff          MOV      r1,#0x7fff
000112  4288              CMP      r0,r1
000114  d118              BNE      |L1.328|
;;;131                    {
;;;132                        is_bist_no_done.memc_ram = 0;
000116  48b2              LDR      r0,|L1.992|
000118  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
00011a  f0200001          BIC      r0,r0,#1
00011e  49b0              LDR      r1,|L1.992|
000120  8008              STRH     r0,[r1,#0]
;;;133                        
;;;134                        asu_read((uint32_t)&DEV_MEMC->BIST_FAIL, &data, 1);
000122  2201              MOVS     r2,#1
000124  4669              MOV      r1,sp
000126  48b0              LDR      r0,|L1.1000|
000128  3008              ADDS     r0,r0,#8
00012a  f7fffffe          BL       asu_read
;;;135                        if(data & 0x7fff)
00012e  9800              LDR      r0,[sp,#0]
000130  f3c0000e          UBFX     r0,r0,#0,#15
000134  b140              CBZ      r0,|L1.328|
;;;136                        {
;;;137                            logging("FAIL MEMC BIST=0x%x!\r\n",data);
000136  48b4              LDR      r0,|L1.1032|
000138  9a00              LDR      r2,[sp,#0]
00013a  6801              LDR      r1,[r0,#0]  ; g_iRunTime
00013c  a0bb              ADR      r0,|L1.1068|
00013e  f7fffffe          BL       logger_buffer_write
;;;138                            ret = fsm_rt_err_bist_aon_mem_buf;
000142  f06f0414          MVN      r4,#0x14
;;;139                            goto fail;
000146  e141              B        |L1.972|
                  |L1.328|
;;;140                        }
;;;141                        else
;;;142                        {
;;;143                            //logging("SUCCESS MEMC  BIST!\r\n");
;;;144                        }
;;;145                    }
;;;146                }
000148  bf00              NOP      
                  |L1.330|
;;;147                
;;;148                if(is_bist_no_done.adc_ram)//(!flg_bist_adc_ram)
00014a  48a5              LDR      r0,|L1.992|
00014c  7800              LDRB     r0,[r0,#0]  ; is_bist_no_done
00014e  f3c00080          UBFX     r0,r0,#2,#1
000152  b320              CBZ      r0,|L1.414|
;;;149                {
;;;150                    uint32_t data;
;;;151                    asu_read((uint32_t)&DEV_ADC->BIST_DONE, &data, 1);
000154  2201              MOVS     r2,#1
000156  4669              MOV      r1,sp
000158  48a4              LDR      r0,|L1.1004|
00015a  3008              ADDS     r0,r0,#8
00015c  f7fffffe          BL       asu_read
;;;152                    if((data & 0xf) == 0xf)
000160  9800              LDR      r0,[sp,#0]
000162  f000000f          AND      r0,r0,#0xf
000166  280f              CMP      r0,#0xf
000168  d118              BNE      |L1.412|
;;;153                    {
;;;154                        is_bist_no_done.adc_ram = 0;
00016a  489d              LDR      r0,|L1.992|
00016c  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
00016e  f0200004          BIC      r0,r0,#4
000172  499b              LDR      r1,|L1.992|
000174  8008              STRH     r0,[r1,#0]
;;;155                        
;;;156                        asu_read((uint32_t)&DEV_ADC->BIST_FAIL, &data, 1);
000176  2201              MOVS     r2,#1
000178  4669              MOV      r1,sp
00017a  489c              LDR      r0,|L1.1004|
00017c  300c              ADDS     r0,r0,#0xc
00017e  f7fffffe          BL       asu_read
;;;157                        if(data & 0xf)
000182  9800              LDR      r0,[sp,#0]
000184  f000000f          AND      r0,r0,#0xf
000188  b140              CBZ      r0,|L1.412|
;;;158                        {
;;;159                            logging("FAIL ADC RAM BIST test=0x%x!\r\n",data);
00018a  489f              LDR      r0,|L1.1032|
00018c  9a00              LDR      r2,[sp,#0]
00018e  6801              LDR      r1,[r0,#0]  ; g_iRunTime
000190  a0ad              ADR      r0,|L1.1096|
000192  f7fffffe          BL       logger_buffer_write
;;;160                            ret = fsm_rt_err_bist_adc_ram;
000196  f06f0415          MVN      r4,#0x15
;;;161                            goto fail;
00019a  e117              B        |L1.972|
                  |L1.412|
;;;162                        }
;;;163                        else
;;;164                        {
;;;165                            //logging("SUCCESS ADC RAM BIST!\r\n");
;;;166                        }
;;;167                    }
;;;168                }
00019c  bf00              NOP      
                  |L1.414|
;;;169                
;;;170                if(is_bist_no_done.udsp_ram)//(!flg_bist_udsp_ram)
00019e  4890              LDR      r0,|L1.992|
0001a0  7800              LDRB     r0,[r0,#0]  ; is_bist_no_done
0001a2  f3c000c0          UBFX     r0,r0,#3,#1
0001a6  b320              CBZ      r0,|L1.498|
;;;171                {
;;;172                    uint32_t data;
;;;173                    asu_read((uint32_t)&DEV_UDSP->BIST_DONE, &data, 1);
0001a8  2201              MOVS     r2,#1
0001aa  4669              MOV      r1,sp
0001ac  4890              LDR      r0,|L1.1008|
0001ae  1d00              ADDS     r0,r0,#4
0001b0  f7fffffe          BL       asu_read
;;;174                    if((data & 0x3) == 0x3)
0001b4  9800              LDR      r0,[sp,#0]
0001b6  f0000003          AND      r0,r0,#3
0001ba  2803              CMP      r0,#3
0001bc  d118              BNE      |L1.496|
;;;175                    {
;;;176                        is_bist_no_done.udsp_ram = 0;
0001be  4888              LDR      r0,|L1.992|
0001c0  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
0001c2  f0200008          BIC      r0,r0,#8
0001c6  4986              LDR      r1,|L1.992|
0001c8  8008              STRH     r0,[r1,#0]
;;;177                        
;;;178                        asu_read((uint32_t)&DEV_UDSP->BIST_FAIL, &data, 1);
0001ca  2201              MOVS     r2,#1
0001cc  4669              MOV      r1,sp
0001ce  4888              LDR      r0,|L1.1008|
0001d0  3008              ADDS     r0,r0,#8
0001d2  f7fffffe          BL       asu_read
;;;179                        if(data & 0x3)
0001d6  9800              LDR      r0,[sp,#0]
0001d8  f0000003          AND      r0,r0,#3
0001dc  b140              CBZ      r0,|L1.496|
;;;180                        {
;;;181                            logging("FAIL UDSP RAM BIST=0x%x!\r\n",data);
0001de  488a              LDR      r0,|L1.1032|
0001e0  9a00              LDR      r2,[sp,#0]
0001e2  6801              LDR      r1,[r0,#0]  ; g_iRunTime
0001e4  a0a1              ADR      r0,|L1.1132|
0001e6  f7fffffe          BL       logger_buffer_write
;;;182                            ret = fsm_rt_err_bist_udsp_ram;
0001ea  f06f041a          MVN      r4,#0x1a
;;;183                            goto fail;
0001ee  e0ed              B        |L1.972|
                  |L1.496|
;;;184                        }
;;;185                        else
;;;186                        {
;;;187                            //logging("SUCCESS UDSP RAM BIST!\r\n");
;;;188                        }
;;;189                    }
;;;190                }
0001f0  bf00              NOP      
                  |L1.498|
;;;191                
;;;192                if(is_bist_no_done.npu_ram)//(!flg_bist_npu_ram)
0001f2  487b              LDR      r0,|L1.992|
0001f4  7800              LDRB     r0,[r0,#0]  ; is_bist_no_done
0001f6  f3c01000          UBFX     r0,r0,#4,#1
0001fa  b318              CBZ      r0,|L1.580|
;;;193                {
;;;194                    uint32_t data;
;;;195                    asu_read((uint32_t)&DEV_NPU->BIST_DONE, &data, 1);
0001fc  2201              MOVS     r2,#1
0001fe  4669              MOV      r1,sp
000200  487c              LDR      r0,|L1.1012|
000202  1d00              ADDS     r0,r0,#4
000204  f7fffffe          BL       asu_read
;;;196                    if((data & 0x1) == 0x1)
000208  9800              LDR      r0,[sp,#0]
00020a  f0000001          AND      r0,r0,#1
00020e  b1c0              CBZ      r0,|L1.578|
;;;197                    {
;;;198                        is_bist_no_done.npu_ram = 0;
000210  4873              LDR      r0,|L1.992|
000212  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
000214  f0200010          BIC      r0,r0,#0x10
000218  4971              LDR      r1,|L1.992|
00021a  8008              STRH     r0,[r1,#0]
;;;199                        
;;;200                        asu_read((uint32_t)&DEV_NPU->BIST_FAIL, &data, 1);
00021c  2201              MOVS     r2,#1
00021e  4669              MOV      r1,sp
000220  4874              LDR      r0,|L1.1012|
000222  3008              ADDS     r0,r0,#8
000224  f7fffffe          BL       asu_read
;;;201                        if(data & 0x1)
000228  9800              LDR      r0,[sp,#0]
00022a  f0000001          AND      r0,r0,#1
00022e  b140              CBZ      r0,|L1.578|
;;;202                        {
;;;203                            logging("FAIL NPU RAM BIST=0x%x!\r\n",data);
000230  4875              LDR      r0,|L1.1032|
000232  9a00              LDR      r2,[sp,#0]
000234  6801              LDR      r1,[r0,#0]  ; g_iRunTime
000236  a095              ADR      r0,|L1.1164|
000238  f7fffffe          BL       logger_buffer_write
;;;204                            ret = fsm_rt_err_bist_npu_ram;
00023c  f06f041b          MVN      r4,#0x1b
;;;205                            goto fail;
000240  e0c4              B        |L1.972|
                  |L1.578|
;;;206                        }
;;;207                        else
;;;208                        {
;;;209                            //logging("SUCCESS NPU RAM BIST!\r\n");
;;;210                        }
;;;211                    }
;;;212                }
000242  bf00              NOP      
                  |L1.580|
;;;213                
;;;214                if(is_bist_no_done.cache_ram)//(!flg_bist_cache_ram)
000244  4866              LDR      r0,|L1.992|
000246  7800              LDRB     r0,[r0,#0]  ; is_bist_no_done
000248  f3c01040          UBFX     r0,r0,#5,#1
00024c  b318              CBZ      r0,|L1.662|
;;;215                {
;;;216                    uint32_t data;
;;;217                    asu_read((uint32_t)&DEV_CACHE->BIST_DONE, &data, 1);
00024e  2201              MOVS     r2,#1
000250  4669              MOV      r1,sp
000252  4869              LDR      r0,|L1.1016|
000254  1d00              ADDS     r0,r0,#4
000256  f7fffffe          BL       asu_read
;;;218                    if((data & 0x1) == 0x1)
00025a  9800              LDR      r0,[sp,#0]
00025c  f0000001          AND      r0,r0,#1
000260  b1c0              CBZ      r0,|L1.660|
;;;219                    {
;;;220                        is_bist_no_done.cache_ram = 0;
000262  485f              LDR      r0,|L1.992|
000264  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
000266  f0200020          BIC      r0,r0,#0x20
00026a  495d              LDR      r1,|L1.992|
00026c  8008              STRH     r0,[r1,#0]
;;;221                        
;;;222                        asu_read((uint32_t)&DEV_CACHE->BIST_FAIL, &data, 1);
00026e  2201              MOVS     r2,#1
000270  4669              MOV      r1,sp
000272  4861              LDR      r0,|L1.1016|
000274  3008              ADDS     r0,r0,#8
000276  f7fffffe          BL       asu_read
;;;223                        if(data & 0x1)
00027a  9800              LDR      r0,[sp,#0]
00027c  f0000001          AND      r0,r0,#1
000280  b140              CBZ      r0,|L1.660|
;;;224                        {
;;;225                            logging("FAIL CACHE RAM BIST=0x%x!\r\n",data);
000282  4861              LDR      r0,|L1.1032|
000284  9a00              LDR      r2,[sp,#0]
000286  6801              LDR      r1,[r0,#0]  ; g_iRunTime
000288  a088              ADR      r0,|L1.1196|
00028a  f7fffffe          BL       logger_buffer_write
;;;226                            ret = fsm_rt_err_bist_cache_ram;
00028e  f06f041c          MVN      r4,#0x1c
;;;227                            goto fail;
000292  e09b              B        |L1.972|
                  |L1.660|
;;;228                        }
;;;229                        else
;;;230                        {
;;;231                            //logging("SUCCESS CACHE RAM BIST!\r\n");
;;;232                        }
;;;233                    }
;;;234                }
000294  bf00              NOP      
                  |L1.662|
;;;235                
;;;236                
;;;237                
;;;238                if(is_bist_no_done.aon_audio_ram)//(!flg_bist_cache_ram)
000296  4852              LDR      r0,|L1.992|
000298  7800              LDRB     r0,[r0,#0]  ; is_bist_no_done
00029a  f3c01080          UBFX     r0,r0,#6,#1
00029e  b318              CBZ      r0,|L1.744|
;;;239                {
;;;240                    uint32_t data;
;;;241                    asu_read((uint32_t)&AON_AUDI->BIST_DONE, &data, 1);
0002a0  2201              MOVS     r2,#1
0002a2  4669              MOV      r1,sp
0002a4  4855              LDR      r0,|L1.1020|
0002a6  1d00              ADDS     r0,r0,#4
0002a8  f7fffffe          BL       asu_read
;;;242                    if((data & 0x1) == 0x1)
0002ac  9800              LDR      r0,[sp,#0]
0002ae  f0000001          AND      r0,r0,#1
0002b2  b1c0              CBZ      r0,|L1.742|
;;;243                    {
;;;244                        is_bist_no_done.aon_audio_ram = 0;
0002b4  484a              LDR      r0,|L1.992|
0002b6  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
0002b8  f0200040          BIC      r0,r0,#0x40
0002bc  4948              LDR      r1,|L1.992|
0002be  8008              STRH     r0,[r1,#0]
;;;245                        
;;;246                        asu_read((uint32_t)&AON_AUDI->BIST_FAIL, &data, 1);
0002c0  2201              MOVS     r2,#1
0002c2  4669              MOV      r1,sp
0002c4  484d              LDR      r0,|L1.1020|
0002c6  3008              ADDS     r0,r0,#8
0002c8  f7fffffe          BL       asu_read
;;;247                        if(data & 0x1)
0002cc  9800              LDR      r0,[sp,#0]
0002ce  f0000001          AND      r0,r0,#1
0002d2  b140              CBZ      r0,|L1.742|
;;;248                        {
;;;249                            logging("FAIL AON AUDI RAM BIST =0x%x!\r\n",data);
0002d4  484c              LDR      r0,|L1.1032|
0002d6  9a00              LDR      r2,[sp,#0]
0002d8  6801              LDR      r1,[r0,#0]  ; g_iRunTime
0002da  a07d              ADR      r0,|L1.1232|
0002dc  f7fffffe          BL       logger_buffer_write
;;;250                            ret = fsm_rt_err_bist_cache_ram;
0002e0  f06f041c          MVN      r4,#0x1c
;;;251                            goto fail;
0002e4  e072              B        |L1.972|
                  |L1.742|
;;;252                        }
;;;253                        else
;;;254                        {
;;;255                            //logging("SUCCESS AON AUDI RAM BIST!\r\n");
;;;256                        }
;;;257                    }
;;;258                }
0002e6  bf00              NOP      
                  |L1.744|
;;;259                
;;;260                
;;;261                if(is_bist_no_done.dac_ram)//(!flg_bist_cache_ram)
0002e8  483d              LDR      r0,|L1.992|
0002ea  7800              LDRB     r0,[r0,#0]  ; is_bist_no_done
0002ec  f3c010c0          UBFX     r0,r0,#7,#1
0002f0  b318              CBZ      r0,|L1.826|
;;;262                {
;;;263                    uint32_t data;
;;;264                    asu_read((uint32_t)&DEV_DAC->BIST_DONE, &data, 1);
0002f2  2201              MOVS     r2,#1
0002f4  4669              MOV      r1,sp
0002f6  4842              LDR      r0,|L1.1024|
0002f8  1d00              ADDS     r0,r0,#4
0002fa  f7fffffe          BL       asu_read
;;;265                    if((data & 0x1) == 0x1)
0002fe  9800              LDR      r0,[sp,#0]
000300  f0000001          AND      r0,r0,#1
000304  b1c0              CBZ      r0,|L1.824|
;;;266                    {
;;;267                        is_bist_no_done.dac_ram = 0;
000306  4836              LDR      r0,|L1.992|
000308  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
00030a  f0200080          BIC      r0,r0,#0x80
00030e  4934              LDR      r1,|L1.992|
000310  8008              STRH     r0,[r1,#0]
;;;268                        
;;;269                        asu_read((uint32_t)&DEV_DAC->BIST_FAIL, &data, 1);
000312  2201              MOVS     r2,#1
000314  4669              MOV      r1,sp
000316  483a              LDR      r0,|L1.1024|
000318  3008              ADDS     r0,r0,#8
00031a  f7fffffe          BL       asu_read
;;;270                        if(data & 0x1)
00031e  9800              LDR      r0,[sp,#0]
000320  f0000001          AND      r0,r0,#1
000324  b140              CBZ      r0,|L1.824|
;;;271                        {
;;;272                            logging("FAIL DAC RAM BIST test=0x%x!\r\n",data);
000326  4838              LDR      r0,|L1.1032|
000328  9a00              LDR      r2,[sp,#0]
00032a  6801              LDR      r1,[r0,#0]  ; g_iRunTime
00032c  a072              ADR      r0,|L1.1272|
00032e  f7fffffe          BL       logger_buffer_write
;;;273                            ret = fsm_rt_err_bist_cache_ram;
000332  f06f041c          MVN      r4,#0x1c
;;;274                            goto fail;
000336  e049              B        |L1.972|
                  |L1.824|
;;;275                        }
;;;276                        else
;;;277                        {
;;;278                            //logging("SUCCESS DAC RAM BIST test!\r\n");
;;;279                        }
;;;280                    }
;;;281                }
000338  bf00              NOP      
                  |L1.826|
;;;282                
;;;283                if(is_bist_no_done.src_ram)//(!flg_bist_cache_ram)
00033a  4829              LDR      r0,|L1.992|
00033c  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
00033e  f3c02000          UBFX     r0,r0,#8,#1
000342  b328              CBZ      r0,|L1.912|
;;;284                {
;;;285                    uint32_t data;
;;;286                    asu_read((uint32_t)&DEV_SRC->BIST_DONE, &data, 1);
000344  2201              MOVS     r2,#1
000346  4669              MOV      r1,sp
000348  482e              LDR      r0,|L1.1028|
00034a  1d00              ADDS     r0,r0,#4
00034c  f7fffffe          BL       asu_read
;;;287                    if((data & 0x70007) == 0x70007)
000350  9800              LDR      r0,[sp,#0]
000352  f0001007          AND      r0,r0,#0x70007
000356  f1b01f07          CMP      r0,#0x70007
00035a  d118              BNE      |L1.910|
;;;288                    {
;;;289                        is_bist_no_done.src_ram = 0;
00035c  4820              LDR      r0,|L1.992|
00035e  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
000360  f4207080          BIC      r0,r0,#0x100
000364  491e              LDR      r1,|L1.992|
000366  8008              STRH     r0,[r1,#0]
;;;290                        
;;;291                        asu_read((uint32_t)&DEV_SRC->BIST_FAIL, &data, 1);
000368  2201              MOVS     r2,#1
00036a  4669              MOV      r1,sp
00036c  4825              LDR      r0,|L1.1028|
00036e  3008              ADDS     r0,r0,#8
000370  f7fffffe          BL       asu_read
;;;292                        if(data & 0x70007)
000374  9800              LDR      r0,[sp,#0]
000376  f0001007          AND      r0,r0,#0x70007
00037a  b140              CBZ      r0,|L1.910|
;;;293                        {
;;;294                            logging("FAIL SRC RAM BIST test=0x%x!\r\n",data);
00037c  4822              LDR      r0,|L1.1032|
00037e  9a00              LDR      r2,[sp,#0]
000380  6801              LDR      r1,[r0,#0]  ; g_iRunTime
000382  a066              ADR      r0,|L1.1308|
000384  f7fffffe          BL       logger_buffer_write
;;;295                            ret = fsm_rt_err_bist_cache_ram;
000388  f06f041c          MVN      r4,#0x1c
;;;296                            goto fail;
00038c  e01e              B        |L1.972|
                  |L1.910|
;;;297                        }
;;;298                        else
;;;299                        {
;;;300                            //logging("SUCCESS SRC RAM BIST test!\r\n");
;;;301                        }
;;;302                    }
;;;303                }
00038e  bf00              NOP      
                  |L1.912|
;;;304                
;;;305                if( is_time_up() )
000390  481d              LDR      r0,|L1.1032|
000392  6800              LDR      r0,[r0,#0]  ; g_iRunTime
000394  491d              LDR      r1,|L1.1036|
000396  6809              LDR      r1,[r1,#0]  ; timer
000398  1a40              SUBS     r0,r0,r1
00039a  f06f4100          MVN      r1,#0x80000000
00039e  4288              CMP      r0,r1
0003a0  d202              BCS      |L1.936|
;;;306                {
;;;307                    ret = fsm_rt_err_bist_timeout;
0003a2  f06f0416          MVN      r4,#0x16
;;;308                    goto fail;
0003a6  e011              B        |L1.972|
                  |L1.936|
;;;309                }
;;;310                
;;;311                if( is_bist_no_done.all_test ==0 ) //全部测完
0003a8  480d              LDR      r0,|L1.992|
0003aa  8800              LDRH     r0,[r0,#0]  ; is_bist_no_done
0003ac  f3c00008          UBFX     r0,r0,#0,#9
0003b0  b940              CBNZ     r0,|L1.964|
;;;312                {
;;;313                    logging("SUCCESS ram bist!\r\n");
0003b2  4815              LDR      r0,|L1.1032|
0003b4  6801              LDR      r1,[r0,#0]  ; g_iRunTime
0003b6  a062              ADR      r0,|L1.1344|
0003b8  f7fffffe          BL       logger_buffer_write
;;;314                    //logging("start = %d\r\n",g_iRunTime);
;;;315                    s_tState = START;
0003bc  2000              MOVS     r0,#0
0003be  4907              LDR      r1,|L1.988|
0003c0  7008              STRB     r0,[r1,#0]
                  |L1.962|
;;;316                    return fsm_rt_cpl;
;;;317                }
;;;318                
;;;319            }
;;;320            
;;;321            break;
;;;322        }
;;;323        
;;;324        return fsm_rt_on_going;
;;;325        
;;;326        fail:
;;;327        asu_bus_set(asu_dis);
;;;328        s_tState = START;
;;;329        return ret;
;;;330    }
0003c2  bd38              POP      {r3-r5,pc}
                  |L1.964|
0003c4  bf00              NOP                            ;321
                  |L1.966|
0003c6  bf00              NOP                            ;98
0003c8  2001              MOVS     r0,#1                 ;324
0003ca  e7fa              B        |L1.962|
                  |L1.972|
0003cc  2004              MOVS     r0,#4                 ;327
0003ce  f7fffffe          BL       asu_bus_set
0003d2  2000              MOVS     r0,#0                 ;328
0003d4  4901              LDR      r1,|L1.988|
0003d6  7008              STRB     r0,[r1,#0]            ;328
0003d8  4620              MOV      r0,r4                 ;329
0003da  e7f2              B        |L1.962|
;;;331    
                          ENDP

                  |L1.988|
                          DCD      s_tState
                  |L1.992|
                          DCD      is_bist_no_done
                  |L1.996|
                          DCD      0x21006004
                  |L1.1000|
                          DCD      0x20030050
                  |L1.1004|
                          DCD      0x20120050
                  |L1.1008|
                          DCD      0x20182004
                  |L1.1012|
                          DCD      0x20190040
                  |L1.1016|
                          DCD      0x201a0004
                  |L1.1020|
                          DCD      0x21020400
                  |L1.1024|
                          DCD      0x20132004
                  |L1.1028|
                          DCD      0x20171004
                  |L1.1032|
                          DCD      g_iRunTime
                  |L1.1036|
                          DCD      timer
                  |L1.1040|
000410  5b253864          DCB      "[%8d]FAIL AON MEM BIST!\r\n",0
000414  5d464149
000418  4c20414f
00041c  4e204d45
000420  4d204249
000424  5354210d
000428  0a00    
00042a  00                DCB      0
00042b  00                DCB      0
                  |L1.1068|
00042c  5b253864          DCB      "[%8d]FAIL MEMC BIST=0x%x!\r\n",0
000430  5d464149
000434  4c204d45
000438  4d432042
00043c  4953543d
000440  30782578
000444  210d0a00
                  |L1.1096|
000448  5b253864          DCB      "[%8d]FAIL ADC RAM BIST test=0x%x!\r\n",0
00044c  5d464149
000450  4c204144
000454  43205241
000458  4d204249
00045c  53542074
000460  6573743d
000464  30782578
000468  210d0a00
                  |L1.1132|
00046c  5b253864          DCB      "[%8d]FAIL UDSP RAM BIST=0x%x!\r\n",0
000470  5d464149
000474  4c205544
000478  53502052
00047c  414d2042
000480  4953543d
000484  30782578
000488  210d0a00
                  |L1.1164|
00048c  5b253864          DCB      "[%8d]FAIL NPU RAM BIST=0x%x!\r\n",0
000490  5d464149
000494  4c204e50
000498  55205241
00049c  4d204249
0004a0  53543d30
0004a4  78257821
0004a8  0d0a00  
0004ab  00                DCB      0
                  |L1.1196|
0004ac  5b253864          DCB      "[%8d]FAIL CACHE RAM BIST=0x%x!\r\n",0
0004b0  5d464149
0004b4  4c204341
0004b8  43484520
0004bc  52414d20
0004c0  42495354
0004c4  3d307825
0004c8  78210d0a
0004cc  00      
0004cd  00                DCB      0
0004ce  00                DCB      0
0004cf  00                DCB      0
                  |L1.1232|
0004d0  5b253864          DCB      "[%8d]FAIL AON AUDI RAM BIST =0x%x!\r\n",0
0004d4  5d464149
0004d8  4c20414f
0004dc  4e204155
0004e0  44492052
0004e4  414d2042
0004e8  49535420
0004ec  3d307825
0004f0  78210d0a
0004f4  00      
0004f5  00                DCB      0
0004f6  00                DCB      0
0004f7  00                DCB      0
                  |L1.1272|
0004f8  5b253864          DCB      "[%8d]FAIL DAC RAM BIST test=0x%x!\r\n",0
0004fc  5d464149
000500  4c204441
000504  43205241
000508  4d204249
00050c  53542074
000510  6573743d
000514  30782578
000518  210d0a00
                  |L1.1308|
00051c  5b253864          DCB      "[%8d]FAIL SRC RAM BIST test=0x%x!\r\n",0
000520  5d464149
000524  4c205352
000528  43205241
00052c  4d204249
000530  53542074
000534  6573743d
000538  30782578
00053c  210d0a00
                  |L1.1344|
000540  5b253864          DCB      "[%8d]SUCCESS ram bist!\r\n",0
000544  5d535543
000548  43455353
00054c  2072616d
000550  20626973
000554  74210d0a
000558  00      
000559  00                DCB      0
00055a  00                DCB      0
00055b  00                DCB      0

                          AREA ||i.bist_init||, CODE, READONLY, ALIGN=2

                  bist_init PROC
;;;331    
;;;332    static void bist_init(void)
000000  b510              PUSH     {r4,lr}
;;;333    {
;;;334        asu_write_bitwise_or((uint32_t)&DEV_CMU->CLKEN0, DEV_CMU_CLKEN0_AON|DEV_CMU_CLKEN0_USB);       //AON域的复位使能
000002  f04f6101          MOV      r1,#0x8100000
000006  f04f2020          MOV      r0,#0x20002000
00000a  f7fffffe          BL       asu_write_bitwise_or
;;;335        asu_write_bitwise_or((uint32_t)&DEV_RMU->RSTEN0, DEV_RMU_RSTEN0_AON|DEV_RMU_RSTEN0_USB);       //AON域的时钟使能
00000e  f04f6101          MOV      r1,#0x8100000
000012  4842              LDR      r0,|L2.284|
000014  f7fffffe          BL       asu_write_bitwise_or
;;;336        asu_write_bitwise_or((uint32_t)&AON_CMU->CLKEN0, AON_CMU_CLKEN0_BUFF);      //AON域的BUFF的时钟使能
000018  2104              MOVS     r1,#4
00001a  4841              LDR      r0,|L2.288|
00001c  f7fffffe          BL       asu_write_bitwise_or
;;;337        asu_write_bitwise_or((uint32_t)&AON_RMU->RSTEN0, AON_RMU_RSTEN0_BUFF);      //AON域的BUFF的复位使能
000020  2104              MOVS     r1,#4
000022  4840              LDR      r0,|L2.292|
000024  f7fffffe          BL       asu_write_bitwise_or
;;;338         
;;;339        asu_write_bitwise_or((uint32_t)&DEV_UREG->USB_PHY_CTRL0, (120<<16)|
000028  493f              LDR      r1,|L2.296|
00002a  4840              LDR      r0,|L2.300|
00002c  f7fffffe          BL       asu_write_bitwise_or
;;;340                                                                  (3<<12) |
;;;341                                                                  (3<<8)  |
;;;342                                                                  (1<<7)  |
;;;343                                                                  (1<<3)  |
;;;344                                                                  (1<<2)  |
;;;345                                                                  (1<<1)  |
;;;346                                                                  (0<<0));
;;;347        
;;;348        asu_write_bitwise_or((uint32_t)&DEV_UREG->USB_PLL_CTRL,   (0<<29)  |
000030  f04f61e0          MOV      r1,#0x7000000
000034  483d              LDR      r0,|L2.300|
000036  300c              ADDS     r0,r0,#0xc
000038  f7fffffe          BL       asu_write_bitwise_or
;;;349                                                                  (0<<28)  |
;;;350                                                                  (1<<26)  |
;;;351                                                                  (1<<25)  |
;;;352                                                                  (1<<24)) ;
;;;353        
;;;354        
;;;355        //------------- ADC RAM
;;;356        
;;;357        asu_write_bitwise_or((uint32_t)&DEV_CMU->CLKEN0, DEV_CMU_CLKEN0_ADC);
00003c  f44f0180          MOV      r1,#0x400000
000040  f04f2020          MOV      r0,#0x20002000
000044  f7fffffe          BL       asu_write_bitwise_or
;;;358        asu_write_bitwise_or((uint32_t)&DEV_RMU->RSTEN0, DEV_RMU_RSTEN0_ADC);
000048  f44f0180          MOV      r1,#0x400000
00004c  4833              LDR      r0,|L2.284|
00004e  f7fffffe          BL       asu_write_bitwise_or
;;;359        asu_write_bitwise_or((uint32_t)&DEV_CMU->ADCCLK, DEV_CMU_ADCCLK_EN_ENABLE);
000052  2101              MOVS     r1,#1
000054  4836              LDR      r0,|L2.304|
000056  f7fffffe          BL       asu_write_bitwise_or
;;;360        asu_write_msk_set((uint32_t)&DEV_CMU->ADCCLK, DEV_CMU_ADCCLK_DIV_MASK, 1<<4);
00005a  2210              MOVS     r2,#0x10
00005c  f44f617f          MOV      r1,#0xff0
000060  4833              LDR      r0,|L2.304|
000062  f7fffffe          BL       asu_write_msk_set
;;;361        asu_write_bitwise_or((uint32_t)&DEV_ADC->CHNn_CFG[0], DEV_ADC_CHNn_CFG_CHN_EN_ENABLE);
000066  2101              MOVS     r1,#1
000068  4832              LDR      r0,|L2.308|
00006a  f7fffffe          BL       asu_write_bitwise_or
;;;362        asu_write_bitwise_or((uint32_t)&DEV_ADC->CHNn_CFG[1], DEV_ADC_CHNn_CFG_CHN_EN_ENABLE);
00006e  2101              MOVS     r1,#1
000070  4830              LDR      r0,|L2.308|
000072  1d00              ADDS     r0,r0,#4
000074  f7fffffe          BL       asu_write_bitwise_or
;;;363        asu_write_bitwise_or((uint32_t)&DEV_ADC->CHNn_CFG[2], DEV_ADC_CHNn_CFG_CHN_EN_ENABLE);
000078  2101              MOVS     r1,#1
00007a  482e              LDR      r0,|L2.308|
00007c  3008              ADDS     r0,r0,#8
00007e  f7fffffe          BL       asu_write_bitwise_or
;;;364        asu_write_bitwise_or((uint32_t)&DEV_ADC->CHNn_CFG[3], DEV_ADC_CHNn_CFG_CHN_EN_ENABLE);
000082  2101              MOVS     r1,#1
000084  482b              LDR      r0,|L2.308|
000086  300c              ADDS     r0,r0,#0xc
000088  f7fffffe          BL       asu_write_bitwise_or
;;;365        asu_write_bitwise_or((uint32_t)&DEV_ADC->CTL, DEV_ADC_CTL_ADC_EN_ENABLE);
00008c  2101              MOVS     r1,#1
00008e  4829              LDR      r0,|L2.308|
000090  3014              ADDS     r0,r0,#0x14
000092  f7fffffe          BL       asu_write_bitwise_or
;;;366        
;;;367        //------------- uDSP
;;;368        asu_write_bitwise_or((uint32_t)&DEV_CMU->CLKEN0, DEV_CMU_CLKEN0_UDSP);
000096  f04f6180          MOV      r1,#0x4000000
00009a  f04f2020          MOV      r0,#0x20002000
00009e  f7fffffe          BL       asu_write_bitwise_or
;;;369        asu_write_bitwise_or((uint32_t)&DEV_RMU->RSTEN0, DEV_RMU_RSTEN0_UDSP);
0000a2  f04f6180          MOV      r1,#0x4000000
0000a6  481d              LDR      r0,|L2.284|
0000a8  f7fffffe          BL       asu_write_bitwise_or
;;;370        
;;;371        //------------- NPU
;;;372        asu_write_bitwise_or((uint32_t)&DEV_CMU->CLKEN0, DEV_CMU_CLKEN0_NPU);
0000ac  f04f7100          MOV      r1,#0x2000000
0000b0  f04f2020          MOV      r0,#0x20002000
0000b4  f7fffffe          BL       asu_write_bitwise_or
;;;373        asu_write_bitwise_or((uint32_t)&DEV_RMU->RSTEN0, DEV_RMU_RSTEN0_NPU);
0000b8  f04f7100          MOV      r1,#0x2000000
0000bc  4817              LDR      r0,|L2.284|
0000be  f7fffffe          BL       asu_write_bitwise_or
;;;374        
;;;375        //------------- CACHE
;;;376        asu_write_bitwise_or((uint32_t)&DEV_CMU->CLKEN1, DEV_CMU_CLKEN1_CACHE);
0000c2  2108              MOVS     r1,#8
0000c4  481a              LDR      r0,|L2.304|
0000c6  386c              SUBS     r0,r0,#0x6c
0000c8  f7fffffe          BL       asu_write_bitwise_or
;;;377        asu_write_bitwise_or((uint32_t)&DEV_RMU->RSTEN1, DEV_RMU_RSTEN1_CACHE);
0000cc  2108              MOVS     r1,#8
0000ce  4813              LDR      r0,|L2.284|
0000d0  1d00              ADDS     r0,r0,#4
0000d2  f7fffffe          BL       asu_write_bitwise_or
;;;378        
;;;379        //------------- AON AUDI
;;;380        asu_write_bitwise_or((uint32_t)&AON_CMU->CLKEN0, AON_CMU_CLKEN0_AUDI);   
0000d6  2102              MOVS     r1,#2
0000d8  4811              LDR      r0,|L2.288|
0000da  f7fffffe          BL       asu_write_bitwise_or
;;;381        asu_write_bitwise_or((uint32_t)&AON_RMU->RSTEN0, AON_RMU_RSTEN0_AUDI); 
0000de  2102              MOVS     r1,#2
0000e0  4810              LDR      r0,|L2.292|
0000e2  f7fffffe          BL       asu_write_bitwise_or
;;;382        asu_write_bitwise_or((uint32_t)&AON_AUDI->DMIC_CTL, AON_AUDI_DMIC_CTL_DMIC_EN_ENABLE        |
0000e6  2133              MOVS     r1,#0x33
0000e8  4813              LDR      r0,|L2.312|
0000ea  f7fffffe          BL       asu_write_bitwise_or
;;;383                                                            AON_AUDI_DMIC_CTL_DMIC_MODE_MASTER      |
;;;384                                                            AON_AUDI_DMIC_CTL_PCM_CLKEN_CLOCKENABLE |
;;;385                                                            AON_AUDI_DMIC_CTL_PCM_RSTEN_ENABLE       ); 
;;;386        
;;;387        //------------- DAC RAM
;;;388        asu_write_bitwise_or((uint32_t)&DEV_CMU->CLKEN0,DEV_CMU_CLKEN0_DAC);
0000ee  f44f0100          MOV      r1,#0x800000
0000f2  f04f2020          MOV      r0,#0x20002000
0000f6  f7fffffe          BL       asu_write_bitwise_or
;;;389        asu_write_bitwise_or((uint32_t)&DEV_RMU->RSTEN0,DEV_RMU_RSTEN0_DAC);
0000fa  f44f0100          MOV      r1,#0x800000
0000fe  4807              LDR      r0,|L2.284|
000100  f7fffffe          BL       asu_write_bitwise_or
;;;390        
;;;391        //------------- SRC RAM
;;;392        asu_write_bitwise_or((uint32_t)&DEV_CMU->CLKEN0,DEV_CMU_CLKEN0_SRC);
000104  f04f7180          MOV      r1,#0x1000000
000108  f04f2020          MOV      r0,#0x20002000
00010c  f7fffffe          BL       asu_write_bitwise_or
;;;393        asu_write_bitwise_or((uint32_t)&DEV_RMU->RSTEN0,DEV_RMU_RSTEN0_SRC);
000110  f04f7180          MOV      r1,#0x1000000
000114  4801              LDR      r0,|L2.284|
000116  f7fffffe          BL       asu_write_bitwise_or
;;;394        
;;;395    }
00011a  bd10              POP      {r4,pc}
;;;396    
                          ENDP

                  |L2.284|
                          DCD      0x20003000
                  |L2.288|
                          DCD      0x21002000
                  |L2.292|
                          DCD      0x21003000
                  |L2.296|
                          DCD      0x0078338e
                  |L2.300|
                          DCD      0x20006000
                  |L2.304|
                          DCD      0x20002070
                  |L2.308|
                          DCD      0x20120000
                  |L2.312|
                          DCD      0x21020010

                          AREA ||.data||, DATA, ALIGN=2

                  is_bist_no_done
000000  0000              DCB      0x00,0x00
                  s_tState
000002  0000              DCB      0x00,0x00
                  timer
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\kiwi_ft\\asu_bist.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_asu_bist_c_17bbc6e9____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_asu_bist_c_17bbc6e9____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_asu_bist_c_17bbc6e9____REVSH|
#line 144
|__asm___10_asu_bist_c_17bbc6e9____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
