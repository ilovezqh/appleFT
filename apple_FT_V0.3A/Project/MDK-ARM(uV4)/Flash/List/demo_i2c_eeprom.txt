; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\demo_i2c_eeprom.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\demo_i2c_eeprom.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\demo_i2c_eeprom.crf ..\..\User\demo_i2c_eeprom.c]
                          THUMB

                          AREA ||i.DemoEEPROM||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_s
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                  DemoEEPROM PROC
;;;36     */
;;;37     void DemoEEPROM(void)
000000  b508              PUSH     {r3,lr}
;;;38     {
;;;39     	uint8_t cmd;
;;;40     
;;;41     //	if (ee_CheckOk() == 0)
;;;42     //	{
;;;43     //		/* 没有检测到EEPROM */
;;;44     //		printf("没有检测到串行EEPROM!\r\n");
;;;45     
;;;46     //		while (1);	/* 停机 */
;;;47     //	}
;;;48     
;;;49     	printf("已经检测到串行EEPROM : \r\n");
000002  a01a              ADR      r0,|L1.108|
000004  f7fffffe          BL       __2printf
;;;50     	printf("型号: %s, 容量 = %d 字节, 页面大小 = %d\r\n", EE_MODEL_NAME, EE_SIZE, EE_PAGE_SIZE);
000008  2308              MOVS     r3,#8
00000a  015a              LSLS     r2,r3,#5
00000c  a120              ADR      r1,|L1.144|
00000e  a022              ADR      r0,|L1.152|
000010  f7fffffe          BL       __2printf
;;;51     
;;;52     	ee_DispMenu();		/* 打印命令提示 */
000014  f7fffffe          BL       ee_DispMenu
;;;53     	while(1)
000018  e026              B        |L1.104|
                  |L1.26|
;;;54     	{
;;;55     		bsp_Idle();		/* 这个函数在bsp.c文件。用户可以修改这个函数实现CPU休眠和喂狗 */
00001a  f7fffffe          BL       bsp_Idle
;;;56     		
;;;57     		//cmd = getchar();	/* 从串口读入一个字符 (阻塞方式) */
;;;58     		if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
00001e  4669              MOV      r1,sp
000020  2000              MOVS     r0,#0
000022  f7fffffe          BL       comGetChar
000026  2800              CMP      r0,#0
000028  d01e              BEQ      |L1.104|
;;;59     		{
;;;60     			switch (cmd)
00002a  f89d0000          LDRB     r0,[sp,#0]
00002e  2831              CMP      r0,#0x31
000030  d004              BEQ      |L1.60|
000032  2832              CMP      r0,#0x32
000034  d008              BEQ      |L1.72|
000036  2833              CMP      r0,#0x33
000038  d112              BNE      |L1.96|
00003a  e00b              B        |L1.84|
                  |L1.60|
;;;61     			{
;;;62     				case '1':
;;;63     					printf("\r\n【1 - 读 EEPROM 测试】\r\n");
00003c  a023              ADR      r0,|L1.204|
00003e  f7fffffe          BL       __2printf
;;;64     					ee_ReadTest();		/* 读EEPROM数据，并打印出来数据内容 */
000042  f7fffffe          BL       ee_ReadTest
;;;65     					break;
000046  e00e              B        |L1.102|
                  |L1.72|
;;;66     
;;;67     				case '2':
;;;68     					printf("\r\n【2 - 写 EEPROM 测试】\r\n");
000048  a029              ADR      r0,|L1.240|
00004a  f7fffffe          BL       __2printf
;;;69     					ee_WriteTest();		/* 写EEPROM数据，并打印写入速度 */
00004e  f7fffffe          BL       ee_WriteTest
;;;70     					break;
000052  e008              B        |L1.102|
                  |L1.84|
;;;71     
;;;72     				case '3':
;;;73     					printf("\r\n【3 - 擦除 EEPROM】\r\n");
000054  a02f              ADR      r0,|L1.276|
000056  f7fffffe          BL       __2printf
;;;74     					ee_Erase();			/* 擦差EEPROM数据，实际上就是写入全0xFF */
00005a  f7fffffe          BL       ee_Erase
;;;75     					break;
00005e  e002              B        |L1.102|
                  |L1.96|
;;;76     
;;;77     				default:
;;;78     					ee_DispMenu();	/* 无效命令，重新打印命令提示 */
000060  f7fffffe          BL       ee_DispMenu
;;;79     					break;
000064  bf00              NOP      
                  |L1.102|
000066  bf00              NOP                            ;65
                  |L1.104|
000068  e7d7              B        |L1.26|
;;;80     
;;;81     			}
;;;82     		}
;;;83     	}
;;;84     }
;;;85     
                          ENDP

00006a  0000              DCW      0x0000
                  |L1.108|
00006c  e5b7b2e7          DCB      229,183,178,231,187,143,230,163,128,230,181,139,229,136,176
000070  bb8fe6a3
000074  80e6b58b
000078  e588b0  
00007b  e4b8b2e8          DCB      228,184,178,232,161,140,"EEPROM : \r\n",0
00007f  a18c4545
000083  50524f4d
000087  203a200d
00008b  0a00    
00008d  00                DCB      0
00008e  00                DCB      0
00008f  00                DCB      0
                  |L1.144|
000090  41543234          DCB      "AT24C02",0
000094  43303200
                  |L1.152|
000098  e59e8be5          DCB      229,158,139,229,143,183,": %s, ",229,174,185,233,135,143
00009c  8fb73a20
0000a0  25732c20
0000a4  e5aeb9e9
0000a8  878f    
0000aa  203d2025          DCB      " = %d ",229,173,151,232,138,130,", ",233,161,181,233,157
0000ae  6420e5ad
0000b2  97e88a82
0000b6  2c20e9a1
0000ba  b5e99d  
0000bd  a2e5a4a7          DCB      162,229,164,167,229,176,143," = %d\r\n",0
0000c1  e5b08f20
0000c5  3d202564
0000c9  0d0a00  
                  |L1.204|
0000cc  0d0ae380          DCB      "\r\n",227,128,144,"1 - ",232,175,187," EEPROM ",230,181
0000d0  9031202d
0000d4  20e8afbb
0000d8  20454550
0000dc  524f4d20
0000e0  e6b5    
0000e2  8be8af95          DCB      139,232,175,149,227,128,145,"\\r\n",0
0000e6  e380915c
0000ea  720a00  
0000ed  00                DCB      0
0000ee  00                DCB      0
0000ef  00                DCB      0
                  |L1.240|
0000f0  0d0ae380          DCB      "\r\n",227,128,144,"2 - ",229,134,153," EEPROM ",230,181
0000f4  9032202d
0000f8  20e58699
0000fc  20454550
000100  524f4d20
000104  e6b5    
000106  8be8af95          DCB      139,232,175,149,227,128,145,"\\r\n",0
00010a  e380915c
00010e  720a00  
000111  00                DCB      0
000112  00                DCB      0
000113  00                DCB      0
                  |L1.276|
000114  0d0ae380          DCB      "\r\n",227,128,144,"3 - ",230,147,166,233,153,164," EEPR"
000118  9033202d
00011c  20e693a6
000120  e999a420
000124  45455052
000128  4f4de380          DCB      "OM",227,128,145,"\\r\n",0
00012c  915c720a
000130  00      
000131  00                DCB      0
000132  00                DCB      0
000133  00                DCB      0

                          AREA ||i.ee_DispMenu||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  ee_DispMenu PROC
;;;205    */
;;;206    static void ee_DispMenu(void)
000000  b510              PUSH     {r4,lr}
;;;207    {
;;;208    	printf("\r\n------------------------------------------------\r\n");
000002  a00b              ADR      r0,|L2.48|
000004  f7fffffe          BL       __2printf
;;;209    	printf("请选择操作命令:\r\n");
000008  a017              ADR      r0,|L2.104|
00000a  f7fffffe          BL       __2printf
;;;210    	printf("1 - 读EEPROM (%d 字节)\r\n", EE_SIZE);
00000e  f44f7180          MOV      r1,#0x100
000012  a01c              ADR      r0,|L2.132|
000014  f7fffffe          BL       __2printf
;;;211    	printf("2 - 写EEPROM (%d 字节,0x00-0xFF)\r\n", EE_SIZE);
000018  f44f7180          MOV      r1,#0x100
00001c  a020              ADR      r0,|L2.160|
00001e  f7fffffe          BL       __2printf
;;;212    	printf("3 - 擦除EEPROM\r\n");
000022  a029              ADR      r0,|L2.200|
000024  f7fffffe          BL       __2printf
;;;213    	printf("4 - 显示命令提示\r\n");
000028  a02c              ADR      r0,|L2.220|
00002a  f7fffffe          BL       __2printf
;;;214    }
00002e  bd10              POP      {r4,pc}
;;;215    
                          ENDP

                  |L2.48|
000030  0d0a2d2d          DCB      "\r\n------------------------------------------------\r\n"
000034  2d2d2d2d
000038  2d2d2d2d
00003c  2d2d2d2d
000040  2d2d2d2d
000044  2d2d2d2d
000048  2d2d2d2d
00004c  2d2d2d2d
000050  2d2d2d2d
000054  2d2d2d2d
000058  2d2d2d2d
00005c  2d2d2d2d
000060  2d2d0d0a
000064  00                DCB      0
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0
                  |L2.104|
000068  e8afb7e9          DCB      232,175,183,233,128,137,230,139,169,230,147,141,228,189,156
00006c  8089e68b
000070  a9e6938d
000074  e4bd9c  
000077  e591bde4          DCB      229,145,189,228,187,164,":\r\n",0
00007b  bba43a0d
00007f  0a00    
000081  00                DCB      0
000082  00                DCB      0
000083  00                DCB      0
                  |L2.132|
000084  31202d20          DCB      "1 - ",232,175,187,"EEPROM (%d ",229,173,151,232,138,130
000088  e8afbb45
00008c  4550524f
000090  4d202825
000094  6420e5ad
000098  97e88a82
00009c  290d0a00          DCB      ")\r\n",0
                  |L2.160|
0000a0  32202d20          DCB      "2 - ",229,134,153,"EEPROM (%d ",229,173,151,232,138,130
0000a4  e5869945
0000a8  4550524f
0000ac  4d202825
0000b0  6420e5ad
0000b4  97e88a82
0000b8  2c307830          DCB      ",0x00-0xFF)\r\n",0
0000bc  302d3078
0000c0  4646290d
0000c4  0a00    
0000c6  00                DCB      0
0000c7  00                DCB      0
                  |L2.200|
0000c8  33202d20          DCB      "3 - ",230,147,166,233,153,164,"EEPROM\r\n",0
0000cc  e693a6e9
0000d0  99a44545
0000d4  50524f4d
0000d8  0d0a00  
0000db  00                DCB      0
                  |L2.220|
0000dc  34202d20          DCB      "4 - ",230,152,190,231,164,186,229,145,189,228,187,164,230
0000e0  e698bee7
0000e4  a4bae591
0000e8  bde4bba4
0000ec  e6      
0000ed  8f90e7a4          DCB      143,144,231,164,186,"\r\n",0
0000f1  ba0d0a00
0000f5  00                DCB      0
0000f6  00                DCB      0
0000f7  00                DCB      0

                          AREA ||i.ee_Erase||, CODE, READONLY, ALIGN=2

                  ee_Erase PROC
;;;175    */
;;;176    static void ee_Erase(void)
000000  b510              PUSH     {r4,lr}
;;;177    {
;;;178    	uint16_t i;
;;;179    
;;;180    	/* 填充缓冲区 */
;;;181    	for (i = 0; i < EE_SIZE; i++)
000002  2400              MOVS     r4,#0
000004  e004              B        |L3.16|
                  |L3.6|
;;;182    	{
;;;183    		buf[i] = 0xFF;
000006  20ff              MOVS     r0,#0xff
000008  490a              LDR      r1,|L3.52|
00000a  5508              STRB     r0,[r1,r4]
00000c  1c60              ADDS     r0,r4,#1              ;181
00000e  b284              UXTH     r4,r0                 ;181
                  |L3.16|
000010  2cff              CMP      r4,#0xff              ;181
000012  ddf8              BLE      |L3.6|
;;;184    	}
;;;185    
;;;186    	/* 写EEPROM, 起始地址 = 0，数据长度为 256 */
;;;187    	if (ee_WriteBytes(buf, 0, EE_SIZE) == 0)
000014  f44f7280          MOV      r2,#0x100
000018  2100              MOVS     r1,#0
00001a  4806              LDR      r0,|L3.52|
00001c  f7fffffe          BL       ee_WriteBytes
000020  b918              CBNZ     r0,|L3.42|
;;;188    	{
;;;189    		printf("擦除eeprom出错！\r\n");
000022  a005              ADR      r0,|L3.56|
000024  f7fffffe          BL       __2printf
                  |L3.40|
;;;190    		return;
;;;191    	}
;;;192    	else
;;;193    	{
;;;194    		printf("擦除eeprom成功！\r\n");
;;;195    	}
;;;196    }
000028  bd10              POP      {r4,pc}
                  |L3.42|
00002a  a00a              ADR      r0,|L3.84|
00002c  f7fffffe          BL       __2printf
000030  bf00              NOP      
000032  e7f9              B        |L3.40|
;;;197    
                          ENDP

                  |L3.52|
                          DCD      buf
                  |L3.56|
000038  e693a6e9          DCB      230,147,166,233,153,164,"eeprom",229,135,186,233,148,153
00003c  99a46565
000040  70726f6d
000044  e587bae9
000048  9499    
00004a  efbc815c          DCB      239,188,129,"\\r\n",0
00004e  720a00  
000051  00                DCB      0
000052  00                DCB      0
000053  00                DCB      0
                  |L3.84|
000054  e693a6e9          DCB      230,147,166,233,153,164,"eeprom",230,136,144,229,138,159
000058  99a46565
00005c  70726f6d
000060  e68890e5
000064  8a9f    
000066  efbc815c          DCB      239,188,129,"\\r\n",0
00006a  720a00  
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0

                          AREA ||i.ee_ReadTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_percent
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  ee_ReadTest PROC
;;;93     */
;;;94     static void ee_ReadTest(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;95     {
;;;96     	uint16_t i;
;;;97     	int32_t iTime1, iTime2;
;;;98     
;;;99     	/* 读EEPROM, 起始地址 = 0， 数据长度为 256 */
;;;100    	iTime1 = bsp_GetRunTime();	/* 记下开始时间 */
000004  f7fffffe          BL       bsp_GetRunTime
000008  4606              MOV      r6,r0
;;;101    	if (ee_ReadBytes((uint8_t *)buf, 0, EE_SIZE) == 0)
00000a  f44f7280          MOV      r2,#0x100
00000e  2100              MOVS     r1,#0
000010  481a              LDR      r0,|L4.124|
000012  f7fffffe          BL       ee_ReadBytes
000016  b920              CBNZ     r0,|L4.34|
;;;102    	{
;;;103    		printf("读eeprom出错！\r\n");
000018  a019              ADR      r0,|L4.128|
00001a  f7fffffe          BL       __2printf
                  |L4.30|
;;;104    		return;
;;;105    	}
;;;106    	else
;;;107    	{
;;;108    		iTime2 = bsp_GetRunTime();	/* 记下结束时间 */
;;;109    		printf("读eeprom成功，数据如下：\r\n");
;;;110    	}
;;;111    
;;;112    	/* 打印数据 */
;;;113    	for (i = 0; i < EE_SIZE; i++)
;;;114    	{
;;;115    		printf(" %02X", buf[i]);
;;;116    
;;;117    		if ((i & 31) == 31)
;;;118    		{
;;;119    			printf("\r\n");	/* 每行显示16字节数据 */
;;;120    		}
;;;121    		else if ((i & 31) == 15)
;;;122    		{
;;;123    			printf(" - ");
;;;124    		}
;;;125    	}
;;;126    
;;;127    	/* 打印读速度 */
;;;128    	printf("读耗时: %dms, 读速度: %dB/s\r\n", iTime2 - iTime1, (EE_SIZE * 1000) / (iTime2 - iTime1));
;;;129    }
00001e  e8bd81f0          POP      {r4-r8,pc}
                  |L4.34|
000022  f7fffffe          BL       bsp_GetRunTime
000026  4605              MOV      r5,r0                 ;108
000028  a01b              ADR      r0,|L4.152|
00002a  f7fffffe          BL       __2printf
00002e  2400              MOVS     r4,#0                 ;113
000030  e015              B        |L4.94|
                  |L4.50|
000032  4812              LDR      r0,|L4.124|
000034  5d01              LDRB     r1,[r0,r4]            ;115
000036  a021              ADR      r0,|L4.188|
000038  f7fffffe          BL       __2printf
00003c  f004001f          AND      r0,r4,#0x1f           ;117
000040  281f              CMP      r0,#0x1f              ;117
000042  d103              BNE      |L4.76|
000044  a01f              ADR      r0,|L4.196|
000046  f7fffffe          BL       __2printf
00004a  e006              B        |L4.90|
                  |L4.76|
00004c  f004001f          AND      r0,r4,#0x1f           ;121
000050  280f              CMP      r0,#0xf               ;121
000052  d102              BNE      |L4.90|
000054  a01c              ADR      r0,|L4.200|
000056  f7fffffe          BL       __2printf
                  |L4.90|
00005a  1c60              ADDS     r0,r4,#1              ;113
00005c  b284              UXTH     r4,r0                 ;113
                  |L4.94|
00005e  2cff              CMP      r4,#0xff              ;113
000060  dde7              BLE      |L4.50|
000062  1ba8              SUBS     r0,r5,r6              ;128
000064  f44f317a          MOV      r1,#0x3e800           ;128
000068  fb91f7f0          SDIV     r7,r1,r0              ;128
00006c  1ba9              SUBS     r1,r5,r6              ;128
00006e  463a              MOV      r2,r7                 ;128
000070  a016              ADR      r0,|L4.204|
000072  f7fffffe          BL       __2printf
000076  bf00              NOP      
000078  e7d1              B        |L4.30|
;;;130    
                          ENDP

00007a  0000              DCW      0x0000
                  |L4.124|
                          DCD      buf
                  |L4.128|
000080  e8afbb65          DCB      232,175,187,"eeprom",229,135,186,233,148,153,239,188,129
000084  6570726f
000088  6de587ba
00008c  e99499ef
000090  bc81    
000092  5c720a00          DCB      "\\r\n",0
000096  00                DCB      0
000097  00                DCB      0
                  |L4.152|
000098  e8afbb65          DCB      232,175,187,"eeprom",230,136,144,229,138,159,239,188,140
00009c  6570726f
0000a0  6de68890
0000a4  e58a9fef
0000a8  bc8c    
0000aa  e695b0e6          DCB      230,149,176,230,141,174,229,166,130,228,184,139,239,188,154
0000ae  8daee5a6
0000b2  82e4b88b
0000b6  efbc9a  
0000b9  0d0a00            DCB      "\r\n",0
                  |L4.188|
0000bc  20253032          DCB      " %02X",0
0000c0  5800    
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L4.196|
0000c4  0d0a00            DCB      "\r\n",0
0000c7  00                DCB      0
                  |L4.200|
0000c8  202d2000          DCB      " - ",0
                  |L4.204|
0000cc  e8afbbe8          DCB      232,175,187,232,128,151,230,151,182,": %dms, ",232,175,187
0000d0  8097e697
0000d4  b63a2025
0000d8  646d732c
0000dc  20e8afbb
0000e0  e9809fe5          DCB      233,128,159,229,186,166,": %dB/s\r\n",0
0000e4  baa63a20
0000e8  2564422f
0000ec  730d0a00

                          AREA ||i.ee_WriteTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  ee_WriteTest PROC
;;;138    */
;;;139    static void ee_WriteTest(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;140    {
;;;141    	uint16_t i;
;;;142    	int32_t iTime1, iTime2;
;;;143    
;;;144    	/* 填充测试缓冲区 */
;;;145    	for (i = 0; i < EE_SIZE; i++)
000004  2400              MOVS     r4,#0
000006  e003              B        |L5.16|
                  |L5.8|
;;;146    	{
;;;147    		buf[i] = i;
000008  4913              LDR      r1,|L5.88|
00000a  550c              STRB     r4,[r1,r4]
00000c  1c60              ADDS     r0,r4,#1              ;145
00000e  b284              UXTH     r4,r0                 ;145
                  |L5.16|
000010  2cff              CMP      r4,#0xff              ;145
000012  ddf9              BLE      |L5.8|
;;;148    	}
;;;149    
;;;150    	/* 写EEPROM, 起始地址 = 0，数据长度为 256 */
;;;151    	iTime1 = bsp_GetRunTime();	/* 记下开始时间 */
000014  f7fffffe          BL       bsp_GetRunTime
000018  4605              MOV      r5,r0
;;;152    	if (ee_WriteBytes(buf, 0, EE_SIZE) == 0)
00001a  f44f7280          MOV      r2,#0x100
00001e  2100              MOVS     r1,#0
000020  480d              LDR      r0,|L5.88|
000022  f7fffffe          BL       ee_WriteBytes
000026  b920              CBNZ     r0,|L5.50|
;;;153    	{
;;;154    		printf("写eeprom出错！\r\n");
000028  a00c              ADR      r0,|L5.92|
00002a  f7fffffe          BL       __2printf
                  |L5.46|
;;;155    		return;
;;;156    	}
;;;157    	else
;;;158    	{
;;;159    		iTime2 = bsp_GetRunTime();	/* 记下结束时间 */
;;;160    		printf("写eeprom成功！\r\n");
;;;161    	}
;;;162    
;;;163    
;;;164    	/* 打印读速度 */
;;;165    	printf("写耗时: %dms, 写速度: %dB/s\r\n", iTime2 - iTime1, (EE_SIZE * 1000) / (iTime2 - iTime1));
;;;166    }
00002e  e8bd81f0          POP      {r4-r8,pc}
                  |L5.50|
000032  f7fffffe          BL       bsp_GetRunTime
000036  4606              MOV      r6,r0                 ;159
000038  a00e              ADR      r0,|L5.116|
00003a  f7fffffe          BL       __2printf
00003e  1b70              SUBS     r0,r6,r5              ;165
000040  f44f317a          MOV      r1,#0x3e800           ;165
000044  fb91f7f0          SDIV     r7,r1,r0              ;165
000048  1b71              SUBS     r1,r6,r5              ;165
00004a  463a              MOV      r2,r7                 ;165
00004c  a00f              ADR      r0,|L5.140|
00004e  f7fffffe          BL       __2printf
000052  bf00              NOP      
000054  e7eb              B        |L5.46|
;;;167    
                          ENDP

000056  0000              DCW      0x0000
                  |L5.88|
                          DCD      buf
                  |L5.92|
00005c  e5869965          DCB      229,134,153,"eeprom",229,135,186,233,148,153,239,188,129
000060  6570726f
000064  6de587ba
000068  e99499ef
00006c  bc81    
00006e  5c720a00          DCB      "\\r\n",0
000072  00                DCB      0
000073  00                DCB      0
                  |L5.116|
000074  e5869965          DCB      229,134,153,"eeprom",230,136,144,229,138,159,239,188,129
000078  6570726f
00007c  6de68890
000080  e58a9fef
000084  bc81    
000086  5c720a00          DCB      "\\r\n",0
00008a  00                DCB      0
00008b  00                DCB      0
                  |L5.140|
00008c  e58699e8          DCB      229,134,153,232,128,151,230,151,182,": %dms, ",229,134,153
000090  8097e697
000094  b63a2025
000098  646d732c
00009c  20e58699
0000a0  e9809fe5          DCB      233,128,159,229,186,166,": %dB/s\r\n",0
0000a4  baa63a20
0000a8  2564422f
0000ac  730d0a00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  buf
                          %        256

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\demo_i2c_eeprom.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___17_demo_i2c_eeprom_c_4000555c____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___17_demo_i2c_eeprom_c_4000555c____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___17_demo_i2c_eeprom_c_4000555c____REVSH|
#line 144
|__asm___17_demo_i2c_eeprom_c_4000555c____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
