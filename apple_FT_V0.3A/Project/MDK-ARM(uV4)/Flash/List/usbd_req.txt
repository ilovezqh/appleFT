; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\usbd_req.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usbd_req.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\usbd_req.crf ..\..\Libraries\STM32_USB_Device_Library\Core\src\usbd_req.c]
                          THUMB

                          AREA ||i.USBD_ClrFeature||, CODE, READONLY, ALIGN=1

                  USBD_ClrFeature PROC
;;;749    */
;;;750    static void USBD_ClrFeature(USB_OTG_CORE_HANDLE  *pdev, 
000000  b570              PUSH     {r4-r6,lr}
;;;751                                USB_SETUP_REQ *req)
;;;752    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;753      switch (pdev->dev.device_status)
000006  f44f7089          MOV      r0,#0x112
00000a  5d00              LDRB     r0,[r0,r4]
00000c  2802              CMP      r0,#2
00000e  d002              BEQ      |L1.22|
000010  2803              CMP      r0,#3
000012  d112              BNE      |L1.58|
000014  e000              B        |L1.24|
                  |L1.22|
;;;754      {
;;;755      case USB_OTG_ADDRESSED:
;;;756      case USB_OTG_CONFIGURED:
000016  bf00              NOP      
                  |L1.24|
;;;757        if (req->wValue == USB_FEATURE_REMOTE_WAKEUP) 
000018  8868              LDRH     r0,[r5,#2]
00001a  2801              CMP      r0,#1
00001c  d10c              BNE      |L1.56|
;;;758        {
;;;759          pdev->dev.DevRemoteWakeup = 0; 
00001e  2100              MOVS     r1,#0
000020  f44f708c          MOV      r0,#0x118
000024  5101              STR      r1,[r0,r4]
;;;760          pdev->dev.class_cb->Setup (pdev, req);   
000026  f8d405e4          LDR      r0,[r4,#0x5e4]
00002a  4629              MOV      r1,r5
00002c  6882              LDR      r2,[r0,#8]
00002e  4620              MOV      r0,r4
000030  4790              BLX      r2
;;;761          USBD_CtlSendStatus(pdev);
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       USBD_CtlSendStatus
                  |L1.56|
;;;762        }
;;;763        break;
000038  e004              B        |L1.68|
                  |L1.58|
;;;764        
;;;765      default :
;;;766         USBD_CtlError(pdev , req);
00003a  4629              MOV      r1,r5
00003c  4620              MOV      r0,r4
00003e  f7fffffe          BL       USBD_CtlError
;;;767        break;
000042  bf00              NOP      
                  |L1.68|
000044  bf00              NOP                            ;763
;;;768      }
;;;769    }
000046  bd70              POP      {r4-r6,pc}
;;;770    
                          ENDP


                          AREA ||i.USBD_CtlError||, CODE, READONLY, ALIGN=1

                  USBD_CtlError PROC
;;;799    
;;;800    void USBD_CtlError( USB_OTG_CORE_HANDLE  *pdev,
000000  b570              PUSH     {r4-r6,lr}
;;;801                                USB_SETUP_REQ *req)
;;;802    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;803      
;;;804      DCD_EP_Stall(pdev , 0x80);
000006  2180              MOVS     r1,#0x80
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       DCD_EP_Stall
;;;805      DCD_EP_Stall(pdev , 0);
00000e  2100              MOVS     r1,#0
000010  4620              MOV      r0,r4
000012  f7fffffe          BL       DCD_EP_Stall
;;;806      USB_OTG_EP0_OutStart(pdev);  
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       USB_OTG_EP0_OutStart
;;;807    }
00001c  bd70              POP      {r4-r6,pc}
;;;808    
                          ENDP


                          AREA ||i.USBD_GetConfig||, CODE, READONLY, ALIGN=2

                  USBD_GetConfig PROC
;;;612    */
;;;613    static void USBD_GetConfig(USB_OTG_CORE_HANDLE  *pdev, 
000000  b570              PUSH     {r4-r6,lr}
;;;614                               USB_SETUP_REQ *req)
;;;615    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;616     
;;;617      if (req->wLength != 1) 
000006  88e8              LDRH     r0,[r5,#6]
000008  2801              CMP      r0,#1
00000a  d004              BEQ      |L3.22|
;;;618      {                   
;;;619         USBD_CtlError(pdev , req);
00000c  4629              MOV      r1,r5
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       USBD_CtlError
000014  e01a              B        |L3.76|
                  |L3.22|
;;;620      }
;;;621      else 
;;;622      {
;;;623        switch (pdev->dev.device_status )  
000016  f44f7089          MOV      r0,#0x112
00001a  5d00              LDRB     r0,[r0,r4]
00001c  2802              CMP      r0,#2
00001e  d002              BEQ      |L3.38|
000020  2803              CMP      r0,#3
000022  d10d              BNE      |L3.64|
000024  e005              B        |L3.50|
                  |L3.38|
;;;624        {
;;;625        case USB_OTG_ADDRESSED:                     
;;;626          
;;;627          USBD_CtlSendData (pdev, 
000026  2201              MOVS     r2,#1
000028  4909              LDR      r1,|L3.80|
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       USBD_CtlSendData
;;;628                            (uint8_t *)&USBD_default_cfg,
;;;629                            1);
;;;630          break;
000030  e00b              B        |L3.74|
                  |L3.50|
;;;631          
;;;632        case USB_OTG_CONFIGURED:                   
;;;633          
;;;634          USBD_CtlSendData (pdev, 
000032  2201              MOVS     r2,#1
000034  f5047188          ADD      r1,r4,#0x110
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       USBD_CtlSendData
;;;635                            &pdev->dev.device_config,
;;;636                            1);
;;;637          break;
00003e  e004              B        |L3.74|
                  |L3.64|
;;;638          
;;;639        default:
;;;640           USBD_CtlError(pdev , req);
000040  4629              MOV      r1,r5
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       USBD_CtlError
;;;641          break;
000048  bf00              NOP      
                  |L3.74|
00004a  bf00              NOP                            ;630
                  |L3.76|
;;;642        }
;;;643      }
;;;644    }
00004c  bd70              POP      {r4-r6,pc}
;;;645    
                          ENDP

00004e  0000              DCW      0x0000
                  |L3.80|
                          DCD      USBD_default_cfg

                          AREA ||i.USBD_GetDescriptor||, CODE, READONLY, ALIGN=1

                  USBD_GetDescriptor PROC
;;;365    */
;;;366    static void USBD_GetDescriptor(USB_OTG_CORE_HANDLE  *pdev, 
000000  b5f8              PUSH     {r3-r7,lr}
;;;367                                   USB_SETUP_REQ *req)
;;;368    {
000002  4604              MOV      r4,r0
000004  460e              MOV      r6,r1
;;;369      uint16_t len;
;;;370      uint8_t *pbuf;
;;;371      
;;;372        
;;;373      switch (req->wValue >> 8)
000006  8870              LDRH     r0,[r6,#2]
000008  1200              ASRS     r0,r0,#8
00000a  2808              CMP      r0,#8
00000c  d26c              BCS      |L4.232|
00000e  e8dff000          TBB      [pc,r0]
000012  6b04              DCB      0x6b,0x04
000014  16226b6b          DCB      0x16,0x22,0x6b,0x6b
000018  6166              DCB      0x61,0x66
;;;374      {
;;;375      case USB_DESC_TYPE_DEVICE:
;;;376        pbuf = pdev->dev.usr_device->GetDeviceDescriptor(pdev->cfg.speed, &len);
00001a  78a0              LDRB     r0,[r4,#2]
00001c  f8d415ec          LDR      r1,[r4,#0x5ec]
000020  680a              LDR      r2,[r1,#0]
000022  4669              MOV      r1,sp
000024  4790              BLX      r2
000026  4605              MOV      r5,r0
;;;377        if ((req->wLength == 64) ||( pdev->dev.device_status == USB_OTG_DEFAULT))  
000028  88f0              LDRH     r0,[r6,#6]
00002a  2840              CMP      r0,#0x40
00002c  d004              BEQ      |L4.56|
00002e  f44f7089          MOV      r0,#0x112
000032  5d00              LDRB     r0,[r0,r4]
000034  2801              CMP      r0,#1
000036  d101              BNE      |L4.60|
                  |L4.56|
;;;378        {                  
;;;379          len = 8;
000038  2008              MOVS     r0,#8
00003a  9000              STR      r0,[sp,#0]
                  |L4.60|
;;;380        }
;;;381        break;
00003c  e059              B        |L4.242|
;;;382        
;;;383      case USB_DESC_TYPE_CONFIGURATION:
;;;384          pbuf   = (uint8_t *)pdev->dev.class_cb->GetConfigDescriptor(pdev->cfg.speed, &len);
00003e  78a0              LDRB     r0,[r4,#2]
000040  f8d415e4          LDR      r1,[r4,#0x5e4]
000044  6a8a              LDR      r2,[r1,#0x28]
000046  4669              MOV      r1,sp
000048  4790              BLX      r2
00004a  4605              MOV      r5,r0
;;;385    #ifdef USB_OTG_HS_CORE
;;;386        if((pdev->cfg.speed == USB_OTG_SPEED_FULL )&&
;;;387           (pdev->cfg.phy_itface  == USB_OTG_ULPI_PHY))
;;;388        {
;;;389          pbuf   = (uint8_t *)pdev->dev.class_cb->GetOtherConfigDescriptor(pdev->cfg.speed, &len);
;;;390        }
;;;391    #endif  
;;;392        pbuf[1] = USB_DESC_TYPE_CONFIGURATION;
00004c  2102              MOVS     r1,#2
00004e  7069              STRB     r1,[r5,#1]
;;;393        pdev->dev.pConfig_descriptor = pbuf;    
000050  f8c455f0          STR      r5,[r4,#0x5f0]
;;;394        break;
000054  e04d              B        |L4.242|
;;;395        
;;;396      case USB_DESC_TYPE_STRING:
;;;397        switch ((uint8_t)(req->wValue))
000056  78b0              LDRB     r0,[r6,#2]
000058  2806              CMP      r0,#6
00005a  d234              BCS      |L4.198|
00005c  e8dff000          TBB      [pc,r0]
000060  030b131b          DCB      0x03,0x0b,0x13,0x1b
000064  232b              DCB      0x23,0x2b
;;;398        {
;;;399        case USBD_IDX_LANGID_STR:
;;;400         pbuf = pdev->dev.usr_device->GetLangIDStrDescriptor(pdev->cfg.speed, &len);        
000066  78a0              LDRB     r0,[r4,#2]
000068  f8d415ec          LDR      r1,[r4,#0x5ec]
00006c  684a              LDR      r2,[r1,#4]
00006e  4669              MOV      r1,sp
000070  4790              BLX      r2
000072  4605              MOV      r5,r0
;;;401          break;
000074  e02c              B        |L4.208|
;;;402          
;;;403        case USBD_IDX_MFC_STR:
;;;404          pbuf = pdev->dev.usr_device->GetManufacturerStrDescriptor(pdev->cfg.speed, &len);
000076  78a0              LDRB     r0,[r4,#2]
000078  f8d415ec          LDR      r1,[r4,#0x5ec]
00007c  688a              LDR      r2,[r1,#8]
00007e  4669              MOV      r1,sp
000080  4790              BLX      r2
000082  4605              MOV      r5,r0
;;;405          break;
000084  e024              B        |L4.208|
;;;406          
;;;407        case USBD_IDX_PRODUCT_STR:
;;;408          pbuf = pdev->dev.usr_device->GetProductStrDescriptor(pdev->cfg.speed, &len);
000086  78a0              LDRB     r0,[r4,#2]
000088  f8d415ec          LDR      r1,[r4,#0x5ec]
00008c  68ca              LDR      r2,[r1,#0xc]
00008e  4669              MOV      r1,sp
000090  4790              BLX      r2
000092  4605              MOV      r5,r0
;;;409          break;
000094  e01c              B        |L4.208|
;;;410          
;;;411        case USBD_IDX_SERIAL_STR:
;;;412          pbuf = pdev->dev.usr_device->GetSerialStrDescriptor(pdev->cfg.speed, &len);
000096  78a0              LDRB     r0,[r4,#2]
000098  f8d415ec          LDR      r1,[r4,#0x5ec]
00009c  690a              LDR      r2,[r1,#0x10]
00009e  4669              MOV      r1,sp
0000a0  4790              BLX      r2
0000a2  4605              MOV      r5,r0
;;;413          break;
0000a4  e014              B        |L4.208|
;;;414          
;;;415        case USBD_IDX_CONFIG_STR:
;;;416          pbuf = pdev->dev.usr_device->GetConfigurationStrDescriptor(pdev->cfg.speed, &len);
0000a6  78a0              LDRB     r0,[r4,#2]
0000a8  f8d415ec          LDR      r1,[r4,#0x5ec]
0000ac  694a              LDR      r2,[r1,#0x14]
0000ae  4669              MOV      r1,sp
0000b0  4790              BLX      r2
0000b2  4605              MOV      r5,r0
;;;417          break;
0000b4  e00c              B        |L4.208|
;;;418          
;;;419        case USBD_IDX_INTERFACE_STR:
;;;420          pbuf = pdev->dev.usr_device->GetInterfaceStrDescriptor(pdev->cfg.speed, &len);
0000b6  78a0              LDRB     r0,[r4,#2]
0000b8  f8d415ec          LDR      r1,[r4,#0x5ec]
0000bc  698a              LDR      r2,[r1,#0x18]
0000be  4669              MOV      r1,sp
0000c0  4790              BLX      r2
0000c2  4605              MOV      r5,r0
;;;421          break;
0000c4  e004              B        |L4.208|
                  |L4.198|
;;;422          
;;;423        default:
;;;424    #ifdef USB_SUPPORT_USER_STRING_DESC
;;;425          pbuf = pdev->dev.class_cb->GetUsrStrDescriptor(pdev->cfg.speed, (req->wValue) , &len);
;;;426          break;
;;;427    #else      
;;;428           USBD_CtlError(pdev , req);
0000c6  4631              MOV      r1,r6
0000c8  4620              MOV      r0,r4
0000ca  f7fffffe          BL       USBD_CtlError
                  |L4.206|
;;;429          return;
;;;430    #endif /* USBD_CtlError(pdev , req); */      
;;;431        }
;;;432        break;
;;;433      case USB_DESC_TYPE_DEVICE_QUALIFIER:                   
;;;434    #ifdef USB_OTG_HS_CORE
;;;435        if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )   
;;;436        {
;;;437          
;;;438          pbuf   = (uint8_t *)pdev->dev.class_cb->GetConfigDescriptor(pdev->cfg.speed, &len);
;;;439                
;;;440          USBD_DeviceQualifierDesc[4]= pbuf[14];
;;;441          USBD_DeviceQualifierDesc[5]= pbuf[15];
;;;442          USBD_DeviceQualifierDesc[6]= pbuf[16];
;;;443          
;;;444          pbuf = USBD_DeviceQualifierDesc;
;;;445          len  = USB_LEN_DEV_QUALIFIER_DESC;
;;;446          break;
;;;447        }
;;;448        else
;;;449        {
;;;450          USBD_CtlError(pdev , req);
;;;451          return;
;;;452        }
;;;453    #else
;;;454          USBD_CtlError(pdev , req);
;;;455          return;
;;;456    #endif    
;;;457    
;;;458      case USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION:
;;;459    #ifdef USB_OTG_HS_CORE   
;;;460    
;;;461        if(pdev->cfg.speed == USB_OTG_SPEED_HIGH  )   
;;;462        {
;;;463          pbuf   = (uint8_t *)pdev->dev.class_cb->GetOtherConfigDescriptor(pdev->cfg.speed, &len);
;;;464          pbuf[1] = USB_DESC_TYPE_OTHER_SPEED_CONFIGURATION;
;;;465          break; 
;;;466        }
;;;467        else
;;;468        {
;;;469          USBD_CtlError(pdev , req);
;;;470          return;
;;;471        }
;;;472    #else
;;;473          USBD_CtlError(pdev , req);
;;;474          return;
;;;475    #endif     
;;;476    
;;;477        
;;;478      default: 
;;;479         USBD_CtlError(pdev , req);
;;;480        return;
;;;481      }
;;;482      
;;;483      if((len != 0)&& (req->wLength != 0))
;;;484      {
;;;485        
;;;486        len = MIN(len , req->wLength);
;;;487        
;;;488        USBD_CtlSendData (pdev, 
;;;489                          pbuf,
;;;490                          len);
;;;491      }
;;;492      
;;;493    }
0000ce  bdf8              POP      {r3-r7,pc}
                  |L4.208|
0000d0  bf00              NOP                            ;401
0000d2  e00e              B        |L4.242|
0000d4  4631              MOV      r1,r6                 ;454
0000d6  4620              MOV      r0,r4                 ;454
0000d8  f7fffffe          BL       USBD_CtlError
0000dc  e7f7              B        |L4.206|
0000de  4631              MOV      r1,r6                 ;473
0000e0  4620              MOV      r0,r4                 ;473
0000e2  f7fffffe          BL       USBD_CtlError
0000e6  e7f2              B        |L4.206|
                  |L4.232|
0000e8  4631              MOV      r1,r6                 ;479
0000ea  4620              MOV      r0,r4                 ;479
0000ec  f7fffffe          BL       USBD_CtlError
0000f0  e7ed              B        |L4.206|
                  |L4.242|
0000f2  bf00              NOP                            ;381
0000f4  f8bd0000          LDRH     r0,[sp,#0]            ;483
0000f8  b188              CBZ      r0,|L4.286|
0000fa  88f0              LDRH     r0,[r6,#6]            ;483
0000fc  b178              CBZ      r0,|L4.286|
0000fe  88f0              LDRH     r0,[r6,#6]            ;486
000100  f8bd1000          LDRH     r1,[sp,#0]            ;486
000104  4288              CMP      r0,r1                 ;486
000106  dd02              BLE      |L4.270|
000108  f8bd0000          LDRH     r0,[sp,#0]            ;486
00010c  e000              B        |L4.272|
                  |L4.270|
00010e  88f0              LDRH     r0,[r6,#6]            ;486
                  |L4.272|
000110  9000              STR      r0,[sp,#0]            ;486
000112  f8bd2000          LDRH     r2,[sp,#0]            ;488
000116  4629              MOV      r1,r5                 ;488
000118  4620              MOV      r0,r4                 ;488
00011a  f7fffffe          BL       USBD_CtlSendData
                  |L4.286|
00011e  bf00              NOP      
000120  e7d5              B        |L4.206|
;;;494    
                          ENDP


                          AREA ||i.USBD_GetLen||, CODE, READONLY, ALIGN=1

                  USBD_GetLen PROC
;;;841      */
;;;842    static uint8_t USBD_GetLen(uint8_t *buf)
000000  4601              MOV      r1,r0
;;;843    {
;;;844        uint8_t  len = 0;
000002  2000              MOVS     r0,#0
;;;845    
;;;846        while (*buf != NULL) 
000004  e002              B        |L5.12|
                  |L5.6|
;;;847        {
;;;848            len++;
000006  1c42              ADDS     r2,r0,#1
000008  b2d0              UXTB     r0,r2
;;;849            buf++;
00000a  1c49              ADDS     r1,r1,#1
                  |L5.12|
00000c  780a              LDRB     r2,[r1,#0]            ;846
00000e  2a00              CMP      r2,#0                 ;846
000010  d1f9              BNE      |L5.6|
;;;850        }
;;;851    
;;;852        return len;
;;;853    }
000012  4770              BX       lr
;;;854    /**
                          ENDP


                          AREA ||i.USBD_GetStatus||, CODE, READONLY, ALIGN=2

                  USBD_GetStatus PROC
;;;652    */
;;;653    static void USBD_GetStatus(USB_OTG_CORE_HANDLE  *pdev, 
000000  b570              PUSH     {r4-r6,lr}
;;;654                               USB_SETUP_REQ *req)
;;;655    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;656      
;;;657        
;;;658      switch (pdev->dev.device_status) 
000006  f44f7089          MOV      r0,#0x112
00000a  5d00              LDRB     r0,[r0,r4]
00000c  2802              CMP      r0,#2
00000e  d002              BEQ      |L6.22|
000010  2803              CMP      r0,#3
000012  d113              BNE      |L6.60|
000014  e000              B        |L6.24|
                  |L6.22|
;;;659      {
;;;660      case USB_OTG_ADDRESSED:
;;;661      case USB_OTG_CONFIGURED:
000016  bf00              NOP      
                  |L6.24|
;;;662        
;;;663    #ifdef USBD_SELF_POWERED
;;;664        USBD_cfg_status = USB_CONFIG_SELF_POWERED;                                    
000018  2001              MOVS     r0,#1
00001a  490c              LDR      r1,|L6.76|
00001c  6008              STR      r0,[r1,#0]  ; USBD_cfg_status
;;;665    #else
;;;666        USBD_cfg_status = 0x00;                                    
;;;667    #endif
;;;668                          
;;;669        if (pdev->dev.DevRemoteWakeup) 
00001e  f44f708c          MOV      r0,#0x118
000022  5900              LDR      r0,[r0,r4]
000024  b120              CBZ      r0,|L6.48|
;;;670        {
;;;671          USBD_cfg_status |= USB_CONFIG_REMOTE_WAKEUP;                                
000026  4608              MOV      r0,r1
000028  6800              LDR      r0,[r0,#0]  ; USBD_cfg_status
00002a  f0400002          ORR      r0,r0,#2
00002e  6008              STR      r0,[r1,#0]  ; USBD_cfg_status
                  |L6.48|
;;;672        }
;;;673        
;;;674        USBD_CtlSendData (pdev, 
000030  2202              MOVS     r2,#2
000032  4906              LDR      r1,|L6.76|
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       USBD_CtlSendData
;;;675                          (uint8_t *)&USBD_cfg_status,
;;;676                          2);
;;;677        break;
00003a  e004              B        |L6.70|
                  |L6.60|
;;;678        
;;;679      default :
;;;680        USBD_CtlError(pdev , req);                        
00003c  4629              MOV      r1,r5
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       USBD_CtlError
;;;681        break;
000044  bf00              NOP      
                  |L6.70|
000046  bf00              NOP                            ;677
;;;682      }
;;;683    }
000048  bd70              POP      {r4-r6,pc}
;;;684    
                          ENDP

00004a  0000              DCW      0x0000
                  |L6.76|
                          DCD      USBD_cfg_status

                          AREA ||i.USBD_GetString||, CODE, READONLY, ALIGN=1

                  USBD_GetString PROC
;;;817      */
;;;818    void USBD_GetString(uint8_t *desc, uint8_t *unicode, uint16_t *len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;819    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4617              MOV      r7,r2
;;;820      uint8_t idx = 0;
00000a  2600              MOVS     r6,#0
;;;821      
;;;822      if (desc != NULL) 
00000c  b1fc              CBZ      r4,|L7.78|
;;;823      {
;;;824        *len =  USBD_GetLen(desc) * 2 + 2;    
00000e  4620              MOV      r0,r4
000010  f7fffffe          BL       USBD_GetLen
000014  2102              MOVS     r1,#2
000016  eb010040          ADD      r0,r1,r0,LSL #1
00001a  8038              STRH     r0,[r7,#0]
;;;825        unicode[idx++] = *len;
00001c  783a              LDRB     r2,[r7,#0]
00001e  4630              MOV      r0,r6
000020  1c71              ADDS     r1,r6,#1
000022  b2ce              UXTB     r6,r1
000024  542a              STRB     r2,[r5,r0]
;;;826        unicode[idx++] =  USB_DESC_TYPE_STRING;
000026  2203              MOVS     r2,#3
000028  4630              MOV      r0,r6
00002a  1c71              ADDS     r1,r6,#1
00002c  b2ce              UXTB     r6,r1
00002e  542a              STRB     r2,[r5,r0]
;;;827        
;;;828        while (*desc != NULL) 
000030  e00a              B        |L7.72|
                  |L7.50|
;;;829        {
;;;830          unicode[idx++] = *desc++;
000032  f8142b01          LDRB     r2,[r4],#1
000036  4630              MOV      r0,r6
000038  1c71              ADDS     r1,r6,#1
00003a  b2ce              UXTB     r6,r1
00003c  542a              STRB     r2,[r5,r0]
;;;831          unicode[idx++] =  0x00;
00003e  2200              MOVS     r2,#0
000040  4630              MOV      r0,r6
000042  1c71              ADDS     r1,r6,#1
000044  b2ce              UXTB     r6,r1
000046  542a              STRB     r2,[r5,r0]
                  |L7.72|
000048  7820              LDRB     r0,[r4,#0]            ;828
00004a  2800              CMP      r0,#0                 ;828
00004c  d1f1              BNE      |L7.50|
                  |L7.78|
;;;832        }
;;;833      } 
;;;834    }
00004e  e8bd81f0          POP      {r4-r8,pc}
;;;835    
                          ENDP


                          AREA ||i.USBD_ParseSetupRequest||, CODE, READONLY, ALIGN=1

                  USBD_ParseSetupRequest PROC
;;;778    
;;;779    void USBD_ParseSetupRequest( USB_OTG_CORE_HANDLE  *pdev,
000000  f89025cc          LDRB     r2,[r0,#0x5cc]
;;;780                                USB_SETUP_REQ *req)
;;;781    {
;;;782      req->bmRequest     = *(uint8_t *)  (pdev->dev.setup_packet);
000004  700a              STRB     r2,[r1,#0]
;;;783      req->bRequest      = *(uint8_t *)  (pdev->dev.setup_packet +  1);
000006  f89025cd          LDRB     r2,[r0,#0x5cd]
00000a  704a              STRB     r2,[r1,#1]
;;;784      req->wValue        = SWAPBYTE      (pdev->dev.setup_packet +  2);
00000c  f89035ce          LDRB     r3,[r0,#0x5ce]
000010  f89025cf          LDRB     r2,[r0,#0x5cf]
000014  eb032202          ADD      r2,r3,r2,LSL #8
000018  804a              STRH     r2,[r1,#2]
;;;785      req->wIndex        = SWAPBYTE      (pdev->dev.setup_packet +  4);
00001a  f89035d0          LDRB     r3,[r0,#0x5d0]
00001e  f89025d1          LDRB     r2,[r0,#0x5d1]
000022  eb032202          ADD      r2,r3,r2,LSL #8
000026  808a              STRH     r2,[r1,#4]
;;;786      req->wLength       = SWAPBYTE      (pdev->dev.setup_packet +  6);
000028  f89035d2          LDRB     r3,[r0,#0x5d2]
00002c  f89025d3          LDRB     r2,[r0,#0x5d3]
000030  eb032202          ADD      r2,r3,r2,LSL #8
000034  80ca              STRH     r2,[r1,#6]
;;;787      
;;;788      pdev->dev.in_ep[0].ctl_data_len = req->wLength  ;
000036  88cb              LDRH     r3,[r1,#6]
000038  f44f72a0          MOV      r2,#0x140
00003c  5013              STR      r3,[r2,r0]
;;;789      pdev->dev.device_state = USB_OTG_EP0_SETUP;
00003e  2301              MOVS     r3,#1
000040  f2401211          MOV      r2,#0x111
000044  5413              STRB     r3,[r2,r0]
;;;790    }
000046  4770              BX       lr
;;;791    
                          ENDP


                          AREA ||i.USBD_SetAddress||, CODE, READONLY, ALIGN=1

                  USBD_SetAddress PROC
;;;501    */
;;;502    static void USBD_SetAddress(USB_OTG_CORE_HANDLE  *pdev, 
000000  b570              PUSH     {r4-r6,lr}
;;;503                                USB_SETUP_REQ *req)
;;;504    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;505      uint8_t  dev_addr; 
;;;506      
;;;507      if ((req->wIndex == 0) && (req->wLength == 0)) 
000006  88a8              LDRH     r0,[r5,#4]
000008  bb18              CBNZ     r0,|L9.82|
00000a  88e8              LDRH     r0,[r5,#6]
00000c  bb08              CBNZ     r0,|L9.82|
;;;508      {
;;;509        dev_addr = (uint8_t)(req->wValue) & 0x7F;     
00000e  78a8              LDRB     r0,[r5,#2]
000010  f000067f          AND      r6,r0,#0x7f
;;;510        
;;;511        if (pdev->dev.device_status == USB_OTG_CONFIGURED) 
000014  f44f7089          MOV      r0,#0x112
000018  5d00              LDRB     r0,[r0,r4]
00001a  2803              CMP      r0,#3
00001c  d104              BNE      |L9.40|
;;;512        {
;;;513          USBD_CtlError(pdev , req);
00001e  4629              MOV      r1,r5
000020  4620              MOV      r0,r4
000022  f7fffffe          BL       USBD_CtlError
000026  e018              B        |L9.90|
                  |L9.40|
;;;514        } 
;;;515        else 
;;;516        {
;;;517          pdev->dev.device_address = dev_addr;
000028  f44f708a          MOV      r0,#0x114
00002c  5506              STRB     r6,[r0,r4]
;;;518          DCD_EP_SetAddress(pdev, dev_addr);               
00002e  4631              MOV      r1,r6
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       DCD_EP_SetAddress
;;;519          USBD_CtlSendStatus(pdev);                         
000036  4620              MOV      r0,r4
000038  f7fffffe          BL       USBD_CtlSendStatus
;;;520          
;;;521          if (dev_addr != 0) 
00003c  b126              CBZ      r6,|L9.72|
;;;522          {
;;;523            pdev->dev.device_status  = USB_OTG_ADDRESSED;
00003e  2102              MOVS     r1,#2
000040  f44f7089          MOV      r0,#0x112
000044  5501              STRB     r1,[r0,r4]
000046  e008              B        |L9.90|
                  |L9.72|
;;;524          } 
;;;525          else 
;;;526          {
;;;527            pdev->dev.device_status  = USB_OTG_DEFAULT; 
000048  2101              MOVS     r1,#1
00004a  f44f7089          MOV      r0,#0x112
00004e  5501              STRB     r1,[r0,r4]
000050  e003              B        |L9.90|
                  |L9.82|
;;;528          }
;;;529        }
;;;530      } 
;;;531      else 
;;;532      {
;;;533         USBD_CtlError(pdev , req);                        
000052  4629              MOV      r1,r5
000054  4620              MOV      r0,r4
000056  f7fffffe          BL       USBD_CtlError
                  |L9.90|
;;;534      } 
;;;535    }
00005a  bd70              POP      {r4-r6,pc}
;;;536    
                          ENDP


                          AREA ||i.USBD_SetConfig||, CODE, READONLY, ALIGN=2

                  USBD_SetConfig PROC
;;;543    */
;;;544    static void USBD_SetConfig(USB_OTG_CORE_HANDLE  *pdev, 
000000  b570              PUSH     {r4-r6,lr}
;;;545                               USB_SETUP_REQ *req)
;;;546    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;547      
;;;548      static uint8_t  cfgidx;
;;;549      
;;;550      cfgidx = (uint8_t)(req->wValue);                 
000006  78a8              LDRB     r0,[r5,#2]
000008  4930              LDR      r1,|L10.204|
00000a  7008              STRB     r0,[r1,#0]
;;;551      
;;;552      if (cfgidx > USBD_CFG_MAX_NUM ) 
00000c  4608              MOV      r0,r1
00000e  7800              LDRB     r0,[r0,#0]  ; cfgidx
000010  2801              CMP      r0,#1
000012  dd04              BLE      |L10.30|
;;;553      {            
;;;554         USBD_CtlError(pdev , req);                              
000014  4629              MOV      r1,r5
000016  4620              MOV      r0,r4
000018  f7fffffe          BL       USBD_CtlError
00001c  e055              B        |L10.202|
                  |L10.30|
;;;555      } 
;;;556      else 
;;;557      {
;;;558        switch (pdev->dev.device_status) 
00001e  f44f7089          MOV      r0,#0x112
000022  5d00              LDRB     r0,[r0,r4]
000024  2802              CMP      r0,#2
000026  d002              BEQ      |L10.46|
000028  2803              CMP      r0,#3
00002a  d148              BNE      |L10.190|
00002c  e017              B        |L10.94|
                  |L10.46|
;;;559        {
;;;560        case USB_OTG_ADDRESSED:
;;;561          if (cfgidx) 
00002e  4827              LDR      r0,|L10.204|
000030  7800              LDRB     r0,[r0,#0]  ; cfgidx
000032  b180              CBZ      r0,|L10.86|
;;;562          {                                			   							   							   				
;;;563            pdev->dev.device_config = cfgidx;
000034  4825              LDR      r0,|L10.204|
000036  7800              LDRB     r0,[r0,#0]  ; cfgidx
000038  f8840110          STRB     r0,[r4,#0x110]
;;;564            pdev->dev.device_status = USB_OTG_CONFIGURED;
00003c  2103              MOVS     r1,#3
00003e  f44f7089          MOV      r0,#0x112
000042  5501              STRB     r1,[r0,r4]
;;;565            USBD_SetCfg(pdev , cfgidx);
000044  4821              LDR      r0,|L10.204|
000046  7801              LDRB     r1,[r0,#0]  ; cfgidx
000048  4620              MOV      r0,r4
00004a  f7fffffe          BL       USBD_SetCfg
;;;566            USBD_CtlSendStatus(pdev);
00004e  4620              MOV      r0,r4
000050  f7fffffe          BL       USBD_CtlSendStatus
000054  e002              B        |L10.92|
                  |L10.86|
;;;567          }
;;;568          else 
;;;569          {
;;;570             USBD_CtlSendStatus(pdev);
000056  4620              MOV      r0,r4
000058  f7fffffe          BL       USBD_CtlSendStatus
                  |L10.92|
;;;571          }
;;;572          break;
00005c  e034              B        |L10.200|
                  |L10.94|
;;;573          
;;;574        case USB_OTG_CONFIGURED:
;;;575          if (cfgidx == 0) 
00005e  481b              LDR      r0,|L10.204|
000060  7800              LDRB     r0,[r0,#0]  ; cfgidx
000062  b980              CBNZ     r0,|L10.134|
;;;576          {                           
;;;577            pdev->dev.device_status = USB_OTG_ADDRESSED;
000064  2102              MOVS     r1,#2
000066  f44f7089          MOV      r0,#0x112
00006a  5501              STRB     r1,[r0,r4]
;;;578            pdev->dev.device_config = cfgidx;          
00006c  4817              LDR      r0,|L10.204|
00006e  7800              LDRB     r0,[r0,#0]  ; cfgidx
000070  f8840110          STRB     r0,[r4,#0x110]
;;;579            USBD_ClrCfg(pdev , cfgidx);
000074  4815              LDR      r0,|L10.204|
000076  7801              LDRB     r1,[r0,#0]  ; cfgidx
000078  4620              MOV      r0,r4
00007a  f7fffffe          BL       USBD_ClrCfg
;;;580            USBD_CtlSendStatus(pdev);
00007e  4620              MOV      r0,r4
000080  f7fffffe          BL       USBD_CtlSendStatus
000084  e01a              B        |L10.188|
                  |L10.134|
;;;581            
;;;582          } 
;;;583          else  if (cfgidx != pdev->dev.device_config) 
000086  f8940110          LDRB     r0,[r4,#0x110]
00008a  4910              LDR      r1,|L10.204|
00008c  7809              LDRB     r1,[r1,#0]  ; cfgidx
00008e  4288              CMP      r0,r1
000090  d011              BEQ      |L10.182|
;;;584          {
;;;585            /* Clear old configuration */
;;;586            USBD_ClrCfg(pdev , pdev->dev.device_config);
000092  f8941110          LDRB     r1,[r4,#0x110]
000096  4620              MOV      r0,r4
000098  f7fffffe          BL       USBD_ClrCfg
;;;587            
;;;588            /* set new configuration */
;;;589            pdev->dev.device_config = cfgidx;
00009c  480b              LDR      r0,|L10.204|
00009e  7800              LDRB     r0,[r0,#0]  ; cfgidx
0000a0  f8840110          STRB     r0,[r4,#0x110]
;;;590            USBD_SetCfg(pdev , cfgidx);
0000a4  4809              LDR      r0,|L10.204|
0000a6  7801              LDRB     r1,[r0,#0]  ; cfgidx
0000a8  4620              MOV      r0,r4
0000aa  f7fffffe          BL       USBD_SetCfg
;;;591            USBD_CtlSendStatus(pdev);
0000ae  4620              MOV      r0,r4
0000b0  f7fffffe          BL       USBD_CtlSendStatus
0000b4  e002              B        |L10.188|
                  |L10.182|
;;;592          }
;;;593          else
;;;594          {
;;;595            USBD_CtlSendStatus(pdev);
0000b6  4620              MOV      r0,r4
0000b8  f7fffffe          BL       USBD_CtlSendStatus
                  |L10.188|
;;;596          }
;;;597          break;
0000bc  e004              B        |L10.200|
                  |L10.190|
;;;598          
;;;599        default:					
;;;600           USBD_CtlError(pdev , req);                     
0000be  4629              MOV      r1,r5
0000c0  4620              MOV      r0,r4
0000c2  f7fffffe          BL       USBD_CtlError
;;;601          break;
0000c6  bf00              NOP      
                  |L10.200|
0000c8  bf00              NOP                            ;572
                  |L10.202|
;;;602        }
;;;603      }
;;;604    }
0000ca  bd70              POP      {r4-r6,pc}
;;;605    
                          ENDP

                  |L10.204|
                          DCD      cfgidx

                          AREA ||i.USBD_SetFeature||, CODE, READONLY, ALIGN=2

                  USBD_SetFeature PROC
;;;692    */
;;;693    static void USBD_SetFeature(USB_OTG_CORE_HANDLE  *pdev, 
000000  b5f8              PUSH     {r3-r7,lr}
;;;694                                USB_SETUP_REQ *req)
;;;695    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;696    
;;;697      USB_OTG_DCTL_TypeDef     dctl;
;;;698      uint8_t test_mode = 0;
000006  2600              MOVS     r6,#0
;;;699     
;;;700      if (req->wValue == USB_FEATURE_REMOTE_WAKEUP)
000008  8868              LDRH     r0,[r5,#2]
00000a  2801              CMP      r0,#1
00000c  d10d              BNE      |L11.42|
;;;701      {
;;;702        pdev->dev.DevRemoteWakeup = 1;  
00000e  2101              MOVS     r1,#1
000010  f44f708c          MOV      r0,#0x118
000014  5101              STR      r1,[r0,r4]
;;;703        pdev->dev.class_cb->Setup (pdev, req);   
000016  f8d405e4          LDR      r0,[r4,#0x5e4]
00001a  4629              MOV      r1,r5
00001c  6882              LDR      r2,[r0,#8]
00001e  4620              MOV      r0,r4
000020  4790              BLX      r2
;;;704        USBD_CtlSendStatus(pdev);
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       USBD_CtlSendStatus
000028  e039              B        |L11.158|
                  |L11.42|
;;;705      }
;;;706    
;;;707      else if ((req->wValue == USB_FEATURE_TEST_MODE) && 
00002a  8868              LDRH     r0,[r5,#2]
00002c  2802              CMP      r0,#2
00002e  d136              BNE      |L11.158|
;;;708               ((req->wIndex & 0xFF) == 0))
000030  7928              LDRB     r0,[r5,#4]
000032  bba0              CBNZ     r0,|L11.158|
;;;709      {
;;;710        dctl.d32 = USB_OTG_READ_REG32(&pdev->regs.DREGS->DCTL);
000034  6920              LDR      r0,[r4,#0x10]
000036  6840              LDR      r0,[r0,#4]
000038  9000              STR      r0,[sp,#0]
;;;711        
;;;712        test_mode = req->wIndex >> 8;
00003a  88a8              LDRH     r0,[r5,#4]
00003c  1206              ASRS     r6,r0,#8
;;;713        switch (test_mode) 
00003e  2e06              CMP      r6,#6
000040  d222              BCS      |L11.136|
000042  e8dff006          TBB      [pc,r6]
000046  2103              DCB      0x21,0x03
000048  090f151b          DCB      0x09,0x0f,0x15,0x1b
;;;714        {
;;;715        case 1: // TEST_J
;;;716          dctl.b.tstctl = 1;
00004c  9800              LDR      r0,[sp,#0]
00004e  f0200070          BIC      r0,r0,#0x70
000052  3010              ADDS     r0,r0,#0x10
000054  9000              STR      r0,[sp,#0]
;;;717          break;
000056  e017              B        |L11.136|
;;;718          
;;;719        case 2: // TEST_K	
;;;720          dctl.b.tstctl = 2;
000058  9800              LDR      r0,[sp,#0]
00005a  f0200070          BIC      r0,r0,#0x70
00005e  3020              ADDS     r0,r0,#0x20
000060  9000              STR      r0,[sp,#0]
;;;721          break;
000062  e011              B        |L11.136|
;;;722          
;;;723        case 3: // TEST_SE0_NAK
;;;724          dctl.b.tstctl = 3;
000064  9800              LDR      r0,[sp,#0]
000066  f0200070          BIC      r0,r0,#0x70
00006a  3030              ADDS     r0,r0,#0x30
00006c  9000              STR      r0,[sp,#0]
;;;725          break;
00006e  e00b              B        |L11.136|
;;;726          
;;;727        case 4: // TEST_PACKET
;;;728          dctl.b.tstctl = 4;
000070  9800              LDR      r0,[sp,#0]
000072  f0200070          BIC      r0,r0,#0x70
000076  3040              ADDS     r0,r0,#0x40
000078  9000              STR      r0,[sp,#0]
;;;729          break;
00007a  e005              B        |L11.136|
;;;730          
;;;731        case 5: // TEST_FORCE_ENABLE
;;;732          dctl.b.tstctl = 5;
00007c  9800              LDR      r0,[sp,#0]
00007e  f0200070          BIC      r0,r0,#0x70
000082  3050              ADDS     r0,r0,#0x50
000084  9000              STR      r0,[sp,#0]
;;;733          break;
000086  bf00              NOP      
                  |L11.136|
000088  bf00              NOP                            ;717
;;;734        }
;;;735        SET_TEST_MODE = dctl;
00008a  4805              LDR      r0,|L11.160|
00008c  9900              LDR      r1,[sp,#0]
00008e  6001              STR      r1,[r0,#0]  ; SET_TEST_MODE
;;;736        pdev->dev.test_mode = 1;
000090  2101              MOVS     r1,#1
000092  f44f708b          MOV      r0,#0x116
000096  5501              STRB     r1,[r0,r4]
;;;737        USBD_CtlSendStatus(pdev);
000098  4620              MOV      r0,r4
00009a  f7fffffe          BL       USBD_CtlSendStatus
                  |L11.158|
;;;738      }
;;;739    
;;;740    }
00009e  bdf8              POP      {r3-r7,pc}
;;;741    
                          ENDP

                  |L11.160|
                          DCD      SET_TEST_MODE

                          AREA ||i.USBD_StdDevReq||, CODE, READONLY, ALIGN=1

                  USBD_StdDevReq PROC
;;;147    */
;;;148    USBD_Status  USBD_StdDevReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
000000  b570              PUSH     {r4-r6,lr}
;;;149    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;150      USBD_Status ret = USBD_OK;  
000006  2600              MOVS     r6,#0
;;;151      
;;;152      switch (req->bRequest) 
000008  7860              LDRB     r0,[r4,#1]
00000a  280a              CMP      r0,#0xa
00000c  d229              BCS      |L12.98|
00000e  e8dff000          TBB      [pc,r0]
000012  1923              DCB      0x19,0x23
000014  281e280a          DCB      0x28,0x1e,0x28,0x0a
000018  0528140f          DCB      0x05,0x28,0x14,0x0f
;;;153      {
;;;154      case USB_REQ_GET_DESCRIPTOR: 
;;;155        
;;;156        USBD_GetDescriptor (pdev, req) ;
00001c  4621              MOV      r1,r4
00001e  4628              MOV      r0,r5
000020  f7fffffe          BL       USBD_GetDescriptor
;;;157        break;
000024  e022              B        |L12.108|
;;;158        
;;;159      case USB_REQ_SET_ADDRESS:                      
;;;160        USBD_SetAddress(pdev, req);
000026  4621              MOV      r1,r4
000028  4628              MOV      r0,r5
00002a  f7fffffe          BL       USBD_SetAddress
;;;161        break;
00002e  e01d              B        |L12.108|
;;;162        
;;;163      case USB_REQ_SET_CONFIGURATION:                    
;;;164        USBD_SetConfig (pdev , req);
000030  4621              MOV      r1,r4
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       USBD_SetConfig
;;;165        break;
000038  e018              B        |L12.108|
;;;166        
;;;167      case USB_REQ_GET_CONFIGURATION:                 
;;;168        USBD_GetConfig (pdev , req);
00003a  4621              MOV      r1,r4
00003c  4628              MOV      r0,r5
00003e  f7fffffe          BL       USBD_GetConfig
;;;169        break;
000042  e013              B        |L12.108|
;;;170        
;;;171      case USB_REQ_GET_STATUS:                                  
;;;172        USBD_GetStatus (pdev , req);
000044  4621              MOV      r1,r4
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       USBD_GetStatus
;;;173        break;
00004c  e00e              B        |L12.108|
;;;174        
;;;175        
;;;176      case USB_REQ_SET_FEATURE:   
;;;177        USBD_SetFeature (pdev , req);    
00004e  4621              MOV      r1,r4
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       USBD_SetFeature
;;;178        break;
000056  e009              B        |L12.108|
;;;179        
;;;180      case USB_REQ_CLEAR_FEATURE:                                   
;;;181        USBD_ClrFeature (pdev , req);
000058  4621              MOV      r1,r4
00005a  4628              MOV      r0,r5
00005c  f7fffffe          BL       USBD_ClrFeature
;;;182        break;
000060  e004              B        |L12.108|
                  |L12.98|
;;;183        
;;;184      default:  
;;;185        USBD_CtlError(pdev , req);
000062  4621              MOV      r1,r4
000064  4628              MOV      r0,r5
000066  f7fffffe          BL       USBD_CtlError
;;;186        break;
00006a  bf00              NOP      
                  |L12.108|
00006c  bf00              NOP                            ;157
;;;187      }
;;;188      
;;;189      return ret;
00006e  4630              MOV      r0,r6
;;;190    }
000070  bd70              POP      {r4-r6,pc}
;;;191    
                          ENDP


                          AREA ||i.USBD_StdEPReq||, CODE, READONLY, ALIGN=2

                  USBD_StdEPReq PROC
;;;235    */
;;;236    USBD_Status  USBD_StdEPReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;237    {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;238      
;;;239      uint8_t   ep_addr;
;;;240      USBD_Status ret = USBD_OK; 
000008  2700              MOVS     r7,#0
;;;241      
;;;242      ep_addr  = LOBYTE(req->wIndex);   
00000a  7934              LDRB     r4,[r6,#4]
;;;243      
;;;244      switch (req->bRequest) 
00000c  7870              LDRB     r0,[r6,#1]
00000e  2800              CMP      r0,#0
000010  d057              BEQ      |L13.194|
000012  2801              CMP      r0,#1
000014  d02b              BEQ      |L13.110|
000016  2803              CMP      r0,#3
000018  d175              BNE      |L13.262|
;;;245      {
;;;246        
;;;247      case USB_REQ_SET_FEATURE :
;;;248        
;;;249        switch (pdev->dev.device_status) 
00001a  f44f7089          MOV      r0,#0x112
00001e  5d40              LDRB     r0,[r0,r5]
000020  2802              CMP      r0,#2
000022  d002              BEQ      |L13.42|
000024  2803              CMP      r0,#3
000026  d11b              BNE      |L13.96|
000028  e007              B        |L13.58|
                  |L13.42|
;;;250        {
;;;251        case USB_OTG_ADDRESSED:          
;;;252          if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
00002a  b12c              CBZ      r4,|L13.56|
00002c  2c80              CMP      r4,#0x80
00002e  d003              BEQ      |L13.56|
;;;253          {
;;;254            DCD_EP_Stall(pdev , ep_addr);
000030  4621              MOV      r1,r4
000032  4628              MOV      r0,r5
000034  f7fffffe          BL       DCD_EP_Stall
                  |L13.56|
;;;255          }
;;;256          break;	
000038  e017              B        |L13.106|
                  |L13.58|
;;;257          
;;;258        case USB_OTG_CONFIGURED:   
;;;259          if (req->wValue == USB_FEATURE_EP_HALT)
00003a  8870              LDRH     r0,[r6,#2]
00003c  b930              CBNZ     r0,|L13.76|
;;;260          {
;;;261            if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
00003e  b12c              CBZ      r4,|L13.76|
000040  2c80              CMP      r4,#0x80
000042  d003              BEQ      |L13.76|
;;;262            { 
;;;263              DCD_EP_Stall(pdev , ep_addr);
000044  4621              MOV      r1,r4
000046  4628              MOV      r0,r5
000048  f7fffffe          BL       DCD_EP_Stall
                  |L13.76|
;;;264              
;;;265            }
;;;266          }
;;;267          pdev->dev.class_cb->Setup (pdev, req);   
00004c  f8d505e4          LDR      r0,[r5,#0x5e4]
000050  4631              MOV      r1,r6
000052  6882              LDR      r2,[r0,#8]
000054  4628              MOV      r0,r5
000056  4790              BLX      r2
;;;268          USBD_CtlSendStatus(pdev);
000058  4628              MOV      r0,r5
00005a  f7fffffe          BL       USBD_CtlSendStatus
;;;269          
;;;270          break;
00005e  e004              B        |L13.106|
                  |L13.96|
;;;271          
;;;272        default:                         
;;;273          USBD_CtlError(pdev , req);
000060  4631              MOV      r1,r6
000062  4628              MOV      r0,r5
000064  f7fffffe          BL       USBD_CtlError
;;;274          break;    
000068  bf00              NOP      
                  |L13.106|
00006a  bf00              NOP                            ;256
;;;275        }
;;;276        break;
00006c  e070              B        |L13.336|
                  |L13.110|
;;;277        
;;;278      case USB_REQ_CLEAR_FEATURE :
;;;279        
;;;280        switch (pdev->dev.device_status) 
00006e  f44f7089          MOV      r0,#0x112
000072  5d40              LDRB     r0,[r0,r5]
000074  2802              CMP      r0,#2
000076  d002              BEQ      |L13.126|
000078  2803              CMP      r0,#3
00007a  d11b              BNE      |L13.180|
00007c  e007              B        |L13.142|
                  |L13.126|
;;;281        {
;;;282        case USB_OTG_ADDRESSED:          
;;;283          if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
00007e  b12c              CBZ      r4,|L13.140|
000080  2c80              CMP      r4,#0x80
000082  d003              BEQ      |L13.140|
;;;284          {
;;;285            DCD_EP_Stall(pdev , ep_addr);
000084  4621              MOV      r1,r4
000086  4628              MOV      r0,r5
000088  f7fffffe          BL       DCD_EP_Stall
                  |L13.140|
;;;286          }
;;;287          break;	
00008c  e017              B        |L13.190|
                  |L13.142|
;;;288          
;;;289        case USB_OTG_CONFIGURED:   
;;;290          if (req->wValue == USB_FEATURE_EP_HALT)
00008e  8870              LDRH     r0,[r6,#2]
000090  b978              CBNZ     r0,|L13.178|
;;;291          {
;;;292            if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
000092  b15c              CBZ      r4,|L13.172|
000094  2c80              CMP      r4,#0x80
000096  d009              BEQ      |L13.172|
;;;293            {        
;;;294              DCD_EP_ClrStall(pdev , ep_addr);
000098  4621              MOV      r1,r4
00009a  4628              MOV      r0,r5
00009c  f7fffffe          BL       DCD_EP_ClrStall
;;;295              pdev->dev.class_cb->Setup (pdev, req);
0000a0  f8d505e4          LDR      r0,[r5,#0x5e4]
0000a4  4631              MOV      r1,r6
0000a6  6882              LDR      r2,[r0,#8]
0000a8  4628              MOV      r0,r5
0000aa  4790              BLX      r2
                  |L13.172|
;;;296            }
;;;297            USBD_CtlSendStatus(pdev);
0000ac  4628              MOV      r0,r5
0000ae  f7fffffe          BL       USBD_CtlSendStatus
                  |L13.178|
;;;298          }
;;;299          break;
0000b2  e004              B        |L13.190|
                  |L13.180|
;;;300          
;;;301        default:                         
;;;302           USBD_CtlError(pdev , req);
0000b4  4631              MOV      r1,r6
0000b6  4628              MOV      r0,r5
0000b8  f7fffffe          BL       USBD_CtlError
;;;303          break;    
0000bc  bf00              NOP      
                  |L13.190|
0000be  bf00              NOP                            ;287
;;;304        }
;;;305        break;
0000c0  e046              B        |L13.336|
                  |L13.194|
;;;306        
;;;307      case USB_REQ_GET_STATUS:                  
;;;308        switch (pdev->dev.device_status) 
0000c2  f44f7089          MOV      r0,#0x112
0000c6  5d40              LDRB     r0,[r0,r5]
0000c8  2802              CMP      r0,#2
0000ca  d002              BEQ      |L13.210|
0000cc  2803              CMP      r0,#3
0000ce  d137              BNE      |L13.320|
0000d0  e007              B        |L13.226|
                  |L13.210|
;;;309        {
;;;310        case USB_OTG_ADDRESSED:          
;;;311          if ((ep_addr != 0x00) && (ep_addr != 0x80)) 
0000d2  b12c              CBZ      r4,|L13.224|
0000d4  2c80              CMP      r4,#0x80
0000d6  d003              BEQ      |L13.224|
;;;312          {
;;;313            DCD_EP_Stall(pdev , ep_addr);
0000d8  4621              MOV      r1,r4
0000da  4628              MOV      r0,r5
0000dc  f7fffffe          BL       DCD_EP_Stall
                  |L13.224|
;;;314          }
;;;315          break;	
0000e0  e033              B        |L13.330|
                  |L13.226|
;;;316          
;;;317        case USB_OTG_CONFIGURED:         
;;;318          
;;;319          
;;;320          if ((ep_addr & 0x80)== 0x80)
0000e2  f0040080          AND      r0,r4,#0x80
0000e6  2880              CMP      r0,#0x80
0000e8  d112              BNE      |L13.272|
;;;321          {
;;;322            if(pdev->dev.in_ep[ep_addr & 0x7F].is_stall)
0000ea  f004007f          AND      r0,r4,#0x7f
0000ee  eb000180          ADD      r1,r0,r0,LSL #2
0000f2  f505708e          ADD      r0,r5,#0x11c
0000f6  eb0000c1          ADD      r0,r0,r1,LSL #3
0000fa  7880              LDRB     r0,[r0,#2]
0000fc  b120              CBZ      r0,|L13.264|
;;;323            {
;;;324              USBD_ep_status = 0x0001;     
0000fe  2001              MOVS     r0,#1
000100  4915              LDR      r1,|L13.344|
000102  6008              STR      r0,[r1,#0]  ; USBD_ep_status
000104  e016              B        |L13.308|
                  |L13.262|
000106  e022              B        |L13.334|
                  |L13.264|
;;;325            }
;;;326            else
;;;327            {
;;;328              USBD_ep_status = 0x0000;  
000108  2000              MOVS     r0,#0
00010a  4913              LDR      r1,|L13.344|
00010c  6008              STR      r0,[r1,#0]  ; USBD_ep_status
00010e  e011              B        |L13.308|
                  |L13.272|
;;;329            }
;;;330          }
;;;331          else if ((ep_addr & 0x80)== 0x00)
000110  f0040080          AND      r0,r4,#0x80
000114  b970              CBNZ     r0,|L13.308|
;;;332          {
;;;333            if(pdev->dev.out_ep[ep_addr].is_stall)
000116  eb040184          ADD      r1,r4,r4,LSL #2
00011a  f505705d          ADD      r0,r5,#0x374
00011e  eb0000c1          ADD      r0,r0,r1,LSL #3
000122  7880              LDRB     r0,[r0,#2]
000124  b118              CBZ      r0,|L13.302|
;;;334            {
;;;335              USBD_ep_status = 0x0001;     
000126  2001              MOVS     r0,#1
000128  490b              LDR      r1,|L13.344|
00012a  6008              STR      r0,[r1,#0]  ; USBD_ep_status
00012c  e002              B        |L13.308|
                  |L13.302|
;;;336            }
;;;337            
;;;338            else 
;;;339            {
;;;340              USBD_ep_status = 0x0000;     
00012e  2000              MOVS     r0,#0
000130  4909              LDR      r1,|L13.344|
000132  6008              STR      r0,[r1,#0]  ; USBD_ep_status
                  |L13.308|
;;;341            }      
;;;342          }
;;;343          USBD_CtlSendData (pdev,
000134  2202              MOVS     r2,#2
000136  4908              LDR      r1,|L13.344|
000138  4628              MOV      r0,r5
00013a  f7fffffe          BL       USBD_CtlSendData
;;;344                            (uint8_t *)&USBD_ep_status,
;;;345                            2);
;;;346          break;
00013e  e004              B        |L13.330|
                  |L13.320|
;;;347          
;;;348        default:                         
;;;349           USBD_CtlError(pdev , req);
000140  4631              MOV      r1,r6
000142  4628              MOV      r0,r5
000144  f7fffffe          BL       USBD_CtlError
;;;350          break;
000148  bf00              NOP      
                  |L13.330|
00014a  bf00              NOP                            ;315
;;;351        }
;;;352        break;
00014c  e000              B        |L13.336|
                  |L13.334|
;;;353        
;;;354      default:
;;;355        break;
00014e  bf00              NOP      
                  |L13.336|
000150  bf00              NOP                            ;276
;;;356      }
;;;357      return ret;
000152  4638              MOV      r0,r7
;;;358    }
000154  e8bd81f0          POP      {r4-r8,pc}
;;;359    /**
                          ENDP

                  |L13.344|
                          DCD      USBD_ep_status

                          AREA ||i.USBD_StdItfReq||, CODE, READONLY, ALIGN=1

                  USBD_StdItfReq PROC
;;;198    */
;;;199    USBD_Status  USBD_StdItfReq (USB_OTG_CORE_HANDLE  *pdev, USB_SETUP_REQ  *req)
000000  b570              PUSH     {r4-r6,lr}
;;;200    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;201      USBD_Status ret = USBD_OK; 
000006  2600              MOVS     r6,#0
;;;202      
;;;203      switch (pdev->dev.device_status) 
000008  f44f7089          MOV      r0,#0x112
00000c  5d00              LDRB     r0,[r0,r4]
00000e  2803              CMP      r0,#3
000010  d114              BNE      |L14.60|
;;;204      {
;;;205      case USB_OTG_CONFIGURED:
;;;206        
;;;207        if (LOBYTE(req->wIndex) <= USBD_ITF_MAX_NUM) 
000012  7928              LDRB     r0,[r5,#4]
000014  2801              CMP      r0,#1
000016  dc0c              BGT      |L14.50|
;;;208        {
;;;209          pdev->dev.class_cb->Setup (pdev, req); 
000018  f8d405e4          LDR      r0,[r4,#0x5e4]
00001c  4629              MOV      r1,r5
00001e  6882              LDR      r2,[r0,#8]
000020  4620              MOV      r0,r4
000022  4790              BLX      r2
;;;210          
;;;211          if((req->wLength == 0)&& (ret == USBD_OK))
000024  88e8              LDRH     r0,[r5,#6]
000026  b940              CBNZ     r0,|L14.58|
000028  b93e              CBNZ     r6,|L14.58|
;;;212          {
;;;213             USBD_CtlSendStatus(pdev);
00002a  4620              MOV      r0,r4
00002c  f7fffffe          BL       USBD_CtlSendStatus
000030  e003              B        |L14.58|
                  |L14.50|
;;;214          }
;;;215        } 
;;;216        else 
;;;217        {                                               
;;;218           USBD_CtlError(pdev , req);
000032  4629              MOV      r1,r5
000034  4620              MOV      r0,r4
000036  f7fffffe          BL       USBD_CtlError
                  |L14.58|
;;;219        }
;;;220        break;
00003a  e004              B        |L14.70|
                  |L14.60|
;;;221        
;;;222      default:
;;;223         USBD_CtlError(pdev , req);
00003c  4629              MOV      r1,r5
00003e  4620              MOV      r0,r4
000040  f7fffffe          BL       USBD_CtlError
;;;224        break;
000044  bf00              NOP      
                  |L14.70|
000046  bf00              NOP                            ;220
;;;225      }
;;;226      return ret;
000048  4630              MOV      r0,r6
;;;227    }
00004a  bd70              POP      {r4-r6,pc}
;;;228    
                          ENDP


                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  USBD_StrDesc
                          %        64

                          AREA ||.data||, DATA, ALIGN=2

                  USBD_ep_status
                          DCD      0x00000000
                  USBD_default_cfg
                          DCD      0x00000000
                  USBD_cfg_status
                          DCD      0x00000000
                  cfgidx
00000c  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\Libraries\\STM32_USB_Device_Library\\Core\\src\\usbd_req.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_usbd_req_c_917e11d5____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_usbd_req_c_917e11d5____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_usbd_req_c_917e11d5____REVSH|
#line 144
|__asm___10_usbd_req_c_917e11d5____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
