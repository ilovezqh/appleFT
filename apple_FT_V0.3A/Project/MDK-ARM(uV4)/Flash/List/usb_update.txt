; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\usb_update.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\usb_update.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\berry_ft -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\kiwi_ft -I..\..\User\kiwi_ft\spv40 -I..\..\User\kiwi_ft\spv40\peripheral -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\kiwi_ft -I..\..\User\MultiButton-1.1.0 -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\usb_update.crf ..\..\User\usb_update.c]
                          THUMB

                          AREA ||i.gui_test||, CODE, READONLY, ALIGN=1

                  gui_test PROC
;;;53     
;;;54     void gui_test(void)
000000  4770              BX       lr
;;;55     {
;;;56         
;;;57     }
;;;58     
                          ENDP


                          AREA ||i.usb_update||, CODE, READONLY, ALIGN=2

                  usb_update PROC
;;;9      
;;;10     void usb_update(void)
000000  b508              PUSH     {r3,lr}
;;;11     {
;;;12         static uint32_t btn_val;
;;;13     //     uint8_t cmd;
;;;14      
;;;15         
;;;16         btn_val =  get_button_event(&esc_btn);
000002  4817              LDR      r0,|L2.96|
000004  f7fffffe          BL       get_button_event
000008  4916              LDR      r1,|L2.100|
00000a  6008              STR      r0,[r1,#0]  ; btn_val
;;;17         
;;;18      
;;;19         if(btn_val == LONG_PRESS_HOLD)
00000c  4608              MOV      r0,r1
00000e  6800              LDR      r0,[r0,#0]  ; btn_val
000010  2806              CMP      r0,#6
000012  d123              BNE      |L2.92|
;;;20         {
;;;21             
;;;22             BEEP_KeyTone();
000014  f7fffffe          BL       BEEP_KeyTone
;;;23             display_fill(0, 0, BSP_LCD_WIDTH, BSP_LCD_HEIGHT, BLACK);
000018  2000              MOVS     r0,#0
00001a  f44f73a0          MOV      r3,#0x140
00001e  22f0              MOVS     r2,#0xf0
000020  4601              MOV      r1,r0
000022  9000              STR      r0,[sp,#0]
000024  f7fffffe          BL       display_fill
;;;24             bsp_InitSFlash();
000028  f7fffffe          BL       bsp_InitSFlash
;;;25             //display_show_string("USB ... extern flash update!",GREEN , RED);
;;;26             lcd_disp("USB ... extern flash update!",YELLOW , BLACK,page_start_line);
00002c  2300              MOVS     r3,#0
00002e  461a              MOV      r2,r3
000030  f64f71e0          MOV      r1,#0xffe0
000034  a00c              ADR      r0,|L2.104|
000036  f7fffffe          BL       lcd_disp
;;;27             usbd_OpenMassStorage();
00003a  f7fffffe          BL       usbd_OpenMassStorage
;;;28             bsp_StartAutoTimer(1, 200);	/* 启动1个500ms的自动重装的定时器 */
00003e  21c8              MOVS     r1,#0xc8
000040  2001              MOVS     r0,#1
000042  f7fffffe          BL       bsp_StartAutoTimer
;;;29      
;;;30             //DemoFatFS();
;;;31              
;;;32             while(1)
000046  e008              B        |L2.90|
                  |L2.72|
;;;33             {
;;;34                 if (bsp_CheckTimer(1))	/* 判断定时器超时时间 */
000048  2001              MOVS     r0,#1
00004a  f7fffffe          BL       bsp_CheckTimer
00004e  b120              CBZ      r0,|L2.90|
;;;35                 {
;;;36                     bsp_LedToggle(LED_GREEN);	/* 翻转LED4的状态 */
000050  2001              MOVS     r0,#1
000052  f7fffffe          BL       bsp_LedToggle
;;;37                     IWDG_Feed();        /* 喂狗 */
000056  f7fffffe          BL       IWDG_Feed
                  |L2.90|
00005a  e7f5              B        |L2.72|
                  |L2.92|
;;;38                 }
;;;39                 //fatfs_task();
;;;40                 
;;;41     //            if (comGetChar(COM1, &cmd))
;;;42     //            {
;;;43     //                DemoSpiFlash(cmd);
;;;44     //            }
;;;45                 
;;;46             }
;;;47      
;;;48         }
;;;49     }
00005c  bd08              POP      {r3,pc}
;;;50     
                          ENDP

00005e  0000              DCW      0x0000
                  |L2.96|
                          DCD      esc_btn
                  |L2.100|
                          DCD      btn_val
                  |L2.104|
000068  55534220          DCB      "USB ... extern flash update!",0
00006c  2e2e2e20
000070  65787465
000074  726e2066
000078  6c617368
00007c  20757064
000080  61746521
000084  00      
000085  00                DCB      0
000086  00                DCB      0
000087  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  btn_val
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\usb_update.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_usb_update_c_547073f9____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_usb_update_c_547073f9____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_usb_update_c_547073f9____REVSH|
#line 144
|__asm___12_usb_update_c_547073f9____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
