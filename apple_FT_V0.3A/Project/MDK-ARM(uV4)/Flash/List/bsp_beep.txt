; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\bsp_beep.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_beep.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\bsp_beep.crf ..\..\User\bsp_stm32f4xx\src\bsp_beep.c]
                          THUMB

                          AREA ||i.BEEP_InitHard||, CODE, READONLY, ALIGN=2

                  BEEP_InitHard PROC
;;;51     */
;;;52     void BEEP_InitHard(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;53     {
;;;54     #ifdef	BEEP_HAVE_POWER		/* 有源蜂鸣器 */
;;;55     	GPIO_InitTypeDef GPIO_InitStructure;
;;;56     
;;;57     	/* 打开GPIOF的时钟 */
;;;58     	RCC_AHB1PeriphClockCmd(GPIO_RCC_BEEP, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;59     
;;;60     	BEEP_DISABLE();
00000a  f44f6000          MOV      r0,#0x800
00000e  490c              LDR      r1,|L1.64|
000010  8008              STRH     r0,[r1,#0]
;;;61     
;;;62     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;		/* 设为输出口 */
000012  2001              MOVS     r0,#1
000014  f88d0004          STRB     r0,[sp,#4]
;;;63     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		/* 设为推挽模式 */
000018  2000              MOVS     r0,#0
00001a  f88d0006          STRB     r0,[sp,#6]
;;;64     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* 上下拉电阻不使能 */
00001e  f88d0007          STRB     r0,[sp,#7]
;;;65     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;	/* IO口最大速度 */
000022  2002              MOVS     r0,#2
000024  f88d0005          STRB     r0,[sp,#5]
;;;66     
;;;67     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_BEEP;
000028  0280              LSLS     r0,r0,#10
00002a  9000              STR      r0,[sp,#0]
;;;68     	GPIO_Init(GPIO_PORT_BEEP, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  4804              LDR      r0,|L1.64|
000030  381a              SUBS     r0,r0,#0x1a
000032  f7fffffe          BL       GPIO_Init
;;;69     #endif
;;;70     	
;;;71     	g_tBeep.ucMute = 0;	/* 关闭静音 */
000036  2000              MOVS     r0,#0
000038  4902              LDR      r1,|L1.68|
00003a  7308              STRB     r0,[r1,#0xc]
;;;72     }
00003c  bd1c              POP      {r2-r4,pc}
;;;73     
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      0x40020c1a
                  |L1.68|
                          DCD      g_tBeep

                          AREA ||i.BEEP_KeyTone||, CODE, READONLY, ALIGN=1

                  BEEP_KeyTone PROC
;;;157    */
;;;158    void BEEP_KeyTone(void)
000000  b500              PUSH     {lr}
;;;159    {
;;;160    	BEEP_Start(5, 1, 1);	/* 鸣叫50ms，停10ms， 1次 */
000002  2201              MOVS     r2,#1
000004  4611              MOV      r1,r2
000006  2005              MOVS     r0,#5
000008  f7fffffe          BL       BEEP_Start
;;;161    }
00000c  bd00              POP      {pc}
;;;162    
                          ENDP


                          AREA ||i.BEEP_Pause||, CODE, READONLY, ALIGN=2

                  BEEP_Pause PROC
;;;127    */
;;;128    void BEEP_Pause(void)
000000  b500              PUSH     {lr}
;;;129    {
;;;130    	BEEP_Stop();
000002  f7fffffe          BL       BEEP_Stop
;;;131    	
;;;132    	g_tBeep.ucMute = 1;		/* 静音 */
000006  2001              MOVS     r0,#1
000008  4901              LDR      r1,|L3.16|
00000a  7308              STRB     r0,[r1,#0xc]
;;;133    }
00000c  bd00              POP      {pc}
;;;134    
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      g_tBeep

                          AREA ||i.BEEP_Pro||, CODE, READONLY, ALIGN=2

                  BEEP_Pro PROC
;;;170    */
;;;171    void BEEP_Pro(void)
000000  4829              LDR      r0,|L4.168|
;;;172    {
;;;173    	if ((g_tBeep.ucEnalbe == 0) || (g_tBeep.usStopTime == 0) || (g_tBeep.ucMute == 1))
000002  7800              LDRB     r0,[r0,#0]  ; g_tBeep
000004  b130              CBZ      r0,|L4.20|
000006  4828              LDR      r0,|L4.168|
000008  8880              LDRH     r0,[r0,#4]  ; g_tBeep
00000a  b118              CBZ      r0,|L4.20|
00000c  4826              LDR      r0,|L4.168|
00000e  7b00              LDRB     r0,[r0,#0xc]  ; g_tBeep
000010  2801              CMP      r0,#1
000012  d100              BNE      |L4.22|
                  |L4.20|
;;;174    	{
;;;175    		return;
;;;176    	}
;;;177    
;;;178    	if (g_tBeep.ucState == 0)
;;;179    	{
;;;180    		if (g_tBeep.usStopTime > 0)	/* 间断发声 */
;;;181    		{
;;;182    			if (++g_tBeep.usCount >= g_tBeep.usBeepTime)
;;;183    			{
;;;184    				BEEP_DISABLE();		/* 停止发声 */
;;;185    				g_tBeep.usCount = 0;
;;;186    				g_tBeep.ucState = 1;
;;;187    			}
;;;188    		}
;;;189    		else
;;;190    		{
;;;191    			;	/* 不做任何处理，连续发声 */
;;;192    		}
;;;193    	}
;;;194    	else if (g_tBeep.ucState == 1)
;;;195    	{
;;;196    		if (++g_tBeep.usCount >= g_tBeep.usStopTime)
;;;197    		{
;;;198    			/* 连续发声时，直到调用stop停止为止 */
;;;199    			if (g_tBeep.usCycle > 0)
;;;200    			{
;;;201    				if (++g_tBeep.usCycleCount >= g_tBeep.usCycle)
;;;202    				{
;;;203    					/* 循环次数到，停止发声 */
;;;204    					g_tBeep.ucEnalbe = 0;
;;;205    				}
;;;206    
;;;207    				if (g_tBeep.ucEnalbe == 0)
;;;208    				{
;;;209    					g_tBeep.usStopTime = 0;
;;;210    					return;
;;;211    				}
;;;212    			}
;;;213    
;;;214    			g_tBeep.usCount = 0;
;;;215    			g_tBeep.ucState = 0;
;;;216    
;;;217    			BEEP_ENABLE();			/* 开始发声 */
;;;218    		}
;;;219    	}
;;;220    }
000014  4770              BX       lr
                  |L4.22|
000016  4824              LDR      r0,|L4.168|
000018  7840              LDRB     r0,[r0,#1]            ;178  ; g_tBeep
00001a  b9b0              CBNZ     r0,|L4.74|
00001c  4822              LDR      r0,|L4.168|
00001e  8880              LDRH     r0,[r0,#4]            ;180  ; g_tBeep
000020  2800              CMP      r0,#0                 ;180
000022  dd3f              BLE      |L4.164|
000024  4820              LDR      r0,|L4.168|
000026  8900              LDRH     r0,[r0,#8]            ;182  ; g_tBeep
000028  1c40              ADDS     r0,r0,#1              ;182
00002a  b280              UXTH     r0,r0                 ;182
00002c  491e              LDR      r1,|L4.168|
00002e  8108              STRH     r0,[r1,#8]            ;182
000030  8849              LDRH     r1,[r1,#2]            ;182  ; g_tBeep
000032  4288              CMP      r0,r1                 ;182
000034  db36              BLT      |L4.164|
000036  f44f6000          MOV      r0,#0x800             ;184
00003a  491c              LDR      r1,|L4.172|
00003c  8008              STRH     r0,[r1,#0]            ;184
00003e  2000              MOVS     r0,#0                 ;185
000040  4919              LDR      r1,|L4.168|
000042  8108              STRH     r0,[r1,#8]            ;185
000044  2001              MOVS     r0,#1                 ;186
000046  7048              STRB     r0,[r1,#1]            ;186
000048  e02c              B        |L4.164|
                  |L4.74|
00004a  4817              LDR      r0,|L4.168|
00004c  7840              LDRB     r0,[r0,#1]            ;194  ; g_tBeep
00004e  2801              CMP      r0,#1                 ;194
000050  d128              BNE      |L4.164|
000052  4815              LDR      r0,|L4.168|
000054  8900              LDRH     r0,[r0,#8]            ;196  ; g_tBeep
000056  1c40              ADDS     r0,r0,#1              ;196
000058  b280              UXTH     r0,r0                 ;196
00005a  4913              LDR      r1,|L4.168|
00005c  8108              STRH     r0,[r1,#8]            ;196
00005e  8889              LDRH     r1,[r1,#4]            ;196  ; g_tBeep
000060  4288              CMP      r0,r1                 ;196
000062  db1f              BLT      |L4.164|
000064  4810              LDR      r0,|L4.168|
000066  88c0              LDRH     r0,[r0,#6]            ;199  ; g_tBeep
000068  2800              CMP      r0,#0                 ;199
00006a  dd12              BLE      |L4.146|
00006c  480e              LDR      r0,|L4.168|
00006e  8940              LDRH     r0,[r0,#0xa]          ;201  ; g_tBeep
000070  1c40              ADDS     r0,r0,#1              ;201
000072  b280              UXTH     r0,r0                 ;201
000074  490c              LDR      r1,|L4.168|
000076  8148              STRH     r0,[r1,#0xa]          ;201
000078  88c9              LDRH     r1,[r1,#6]            ;201  ; g_tBeep
00007a  4288              CMP      r0,r1                 ;201
00007c  db02              BLT      |L4.132|
00007e  2000              MOVS     r0,#0                 ;204
000080  4909              LDR      r1,|L4.168|
000082  7008              STRB     r0,[r1,#0]            ;204
                  |L4.132|
000084  4808              LDR      r0,|L4.168|
000086  7800              LDRB     r0,[r0,#0]            ;207  ; g_tBeep
000088  b918              CBNZ     r0,|L4.146|
00008a  2000              MOVS     r0,#0                 ;209
00008c  4906              LDR      r1,|L4.168|
00008e  8088              STRH     r0,[r1,#4]            ;209
000090  e7c0              B        |L4.20|
                  |L4.146|
000092  2000              MOVS     r0,#0                 ;214
000094  4904              LDR      r1,|L4.168|
000096  8108              STRH     r0,[r1,#8]            ;214
000098  7048              STRB     r0,[r1,#1]            ;215
00009a  f44f6000          MOV      r0,#0x800             ;217
00009e  4903              LDR      r1,|L4.172|
0000a0  1e89              SUBS     r1,r1,#2              ;217
0000a2  8008              STRH     r0,[r1,#0]            ;217
                  |L4.164|
0000a4  bf00              NOP      
0000a6  e7b5              B        |L4.20|
;;;221    
                          ENDP

                  |L4.168|
                          DCD      g_tBeep
                  |L4.172|
                          DCD      0x40020c1a

                          AREA ||i.BEEP_Resume||, CODE, READONLY, ALIGN=2

                  BEEP_Resume PROC
;;;142    */
;;;143    void BEEP_Resume(void)
000000  b500              PUSH     {lr}
;;;144    {
;;;145    	BEEP_Stop();
000002  f7fffffe          BL       BEEP_Stop
;;;146    	
;;;147    	g_tBeep.ucMute = 0;		/* 静音 */
000006  2000              MOVS     r0,#0
000008  4901              LDR      r1,|L5.16|
00000a  7308              STRB     r0,[r1,#0xc]
;;;148    }
00000c  bd00              POP      {pc}
;;;149    
                          ENDP

00000e  0000              DCW      0x0000
                  |L5.16|
                          DCD      g_tBeep

                          AREA ||i.BEEP_Start||, CODE, READONLY, ALIGN=2

                  BEEP_Start PROC
;;;83     */
;;;84     void BEEP_Start(uint16_t _usBeepTime, uint16_t _usStopTime, uint16_t _usCycle)
000000  b510              PUSH     {r4,lr}
;;;85     {
;;;86     	if (_usBeepTime == 0 || g_tBeep.ucMute == 1)
000002  b118              CBZ      r0,|L6.12|
000004  4b0a              LDR      r3,|L6.48|
000006  7b1b              LDRB     r3,[r3,#0xc]  ; g_tBeep
000008  2b01              CMP      r3,#1
00000a  d100              BNE      |L6.14|
                  |L6.12|
;;;87     	{
;;;88     		return;
;;;89     	}
;;;90     
;;;91     	g_tBeep.usBeepTime = _usBeepTime;
;;;92     	g_tBeep.usStopTime = _usStopTime;
;;;93     	g_tBeep.usCycle = _usCycle;
;;;94     	g_tBeep.usCount = 0;
;;;95     	g_tBeep.usCycleCount = 0;
;;;96     	g_tBeep.ucState = 0;
;;;97     	g_tBeep.ucEnalbe = 1;	/* 设置完全局参数后再使能发声标志 */
;;;98     
;;;99     	BEEP_ENABLE();			/* 开始发声 */
;;;100    }
00000c  bd10              POP      {r4,pc}
                  |L6.14|
00000e  4b08              LDR      r3,|L6.48|
000010  8058              STRH     r0,[r3,#2]            ;91
000012  8099              STRH     r1,[r3,#4]            ;92
000014  80da              STRH     r2,[r3,#6]            ;93
000016  2300              MOVS     r3,#0                 ;94
000018  4c05              LDR      r4,|L6.48|
00001a  8123              STRH     r3,[r4,#8]            ;94
00001c  8163              STRH     r3,[r4,#0xa]          ;95
00001e  7063              STRB     r3,[r4,#1]            ;96
000020  2301              MOVS     r3,#1                 ;97
000022  7023              STRB     r3,[r4,#0]            ;97
000024  02db              LSLS     r3,r3,#11             ;99
000026  4c03              LDR      r4,|L6.52|
000028  8023              STRH     r3,[r4,#0]            ;99
00002a  bf00              NOP      
00002c  e7ee              B        |L6.12|
;;;101    
                          ENDP

00002e  0000              DCW      0x0000
                  |L6.48|
                          DCD      g_tBeep
                  |L6.52|
                          DCD      0x40020c18

                          AREA ||i.BEEP_Stop||, CODE, READONLY, ALIGN=2

                  BEEP_Stop PROC
;;;109    */
;;;110    void BEEP_Stop(void)
000000  2000              MOVS     r0,#0
;;;111    {
;;;112    	g_tBeep.ucEnalbe = 0;
000002  4906              LDR      r1,|L7.28|
000004  7008              STRB     r0,[r1,#0]
;;;113    
;;;114    	if ((g_tBeep.usStopTime == 0) || (g_tBeep.usCycle == 0))
000006  4608              MOV      r0,r1
000008  8880              LDRH     r0,[r0,#4]  ; g_tBeep
00000a  b110              CBZ      r0,|L7.18|
00000c  4608              MOV      r0,r1
00000e  88c0              LDRH     r0,[r0,#6]  ; g_tBeep
000010  b918              CBNZ     r0,|L7.26|
                  |L7.18|
;;;115    	{
;;;116    		BEEP_DISABLE();	/* 必须在清控制标志后再停止发声，避免停止后在中断中又开启 */
000012  f44f6000          MOV      r0,#0x800
000016  4902              LDR      r1,|L7.32|
000018  8008              STRH     r0,[r1,#0]
                  |L7.26|
;;;117    	}
;;;118    }
00001a  4770              BX       lr
;;;119    
                          ENDP

                  |L7.28|
                          DCD      g_tBeep
                  |L7.32|
                          DCD      0x40020c1a

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  g_tBeep
                          %        14

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_beep.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_beep_c_471486d3____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_beep_c_471486d3____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_bsp_beep_c_471486d3____REVSH|
#line 144
|__asm___10_bsp_beep_c_471486d3____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
