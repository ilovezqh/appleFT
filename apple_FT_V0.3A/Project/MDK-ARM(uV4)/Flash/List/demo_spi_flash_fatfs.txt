; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\demo_spi_flash_fatfs.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\demo_spi_flash_fatfs.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\demo_spi_flash_fatfs.crf ..\..\User\demo_spi_flash_fatfs.c]
                          THUMB

                          AREA ||i.CreateDir||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  CreateDir PROC
;;;517    */
;;;518    static void CreateDir(void)
000000  b510              PUSH     {r4,lr}
;;;519    {
000002  f5ad5d82          SUB      sp,sp,#0x1040
;;;520    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;521    	FRESULT result;
;;;522    	FATFS fs;
;;;523    
;;;524     	/* 挂载文件系统 */
;;;525    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000006  2200              MOVS     r2,#0
000008  a130              ADR      r1,|L1.204|
00000a  a804              ADD      r0,sp,#0x10
00000c  f7fffffe          BL       f_mount
000010  4604              MOV      r4,r0
;;;526    	if (result != FR_OK)
000012  b12c              CBZ      r4,|L1.32|
;;;527    	{
;;;528    		printf("挂载文件系统失败 (%s)\r\n",  FR_Table[result]);
000014  482e              LDR      r0,|L1.208|
000016  f8501024          LDR      r1,[r0,r4,LSL #2]
00001a  a02e              ADR      r0,|L1.212|
00001c  f7fffffe          BL       __2printf
                  |L1.32|
;;;529    	}
;;;530    
;;;531    	/* 创建目录/Dir1 */
;;;532    	result = f_mkdir("/Dir1");
000020  a034              ADR      r0,|L1.244|
000022  f7fffffe          BL       f_mkdir
000026  4604              MOV      r4,r0
;;;533    	if (result == FR_OK)
000028  b91c              CBNZ     r4,|L1.50|
;;;534    	{
;;;535    		printf("f_mkdir Dir1 Ok\r\n");
00002a  a034              ADR      r0,|L1.252|
00002c  f7fffffe          BL       __2printf
000030  e011              B        |L1.86|
                  |L1.50|
;;;536    	}
;;;537    	else if (result == FR_EXIST)
000032  2c08              CMP      r4,#8
000034  d106              BNE      |L1.68|
;;;538    	{
;;;539    		printf("Dir1 目录已经存在(%s)\r\n",  FR_Table[result]);
000036  4826              LDR      r0,|L1.208|
000038  f8501024          LDR      r1,[r0,r4,LSL #2]
00003c  a034              ADR      r0,|L1.272|
00003e  f7fffffe          BL       __2printf
000042  e008              B        |L1.86|
                  |L1.68|
;;;540    	}
;;;541    	else
;;;542    	{
;;;543    		printf("f_mkdir Dir1 失败 (%s)\r\n",  FR_Table[result]);
000044  4822              LDR      r0,|L1.208|
000046  f8501024          LDR      r1,[r0,r4,LSL #2]
00004a  a039              ADR      r0,|L1.304|
00004c  f7fffffe          BL       __2printf
                  |L1.80|
;;;544    		return;
;;;545    	}
;;;546    
;;;547    	/* 创建目录/Dir2 */
;;;548    	result = f_mkdir("/Dir2");
;;;549    	if (result == FR_OK)
;;;550    	{
;;;551    		printf("f_mkdir Dir2 Ok\r\n");
;;;552    	}
;;;553    	else if (result == FR_EXIST)
;;;554    	{
;;;555    		printf("Dir2 目录已经存在(%s)\r\n",  FR_Table[result]);
;;;556    	}
;;;557    	else
;;;558    	{
;;;559    		printf("f_mkdir Dir2 失败 (%s)\r\n",  FR_Table[result]);
;;;560    		return;
;;;561    	}
;;;562    
;;;563    	/* 创建子目录 /Dir1/Dir1_1	   注意：创建子目录Dir1_1时，必须先创建好Dir1 */
;;;564    	result = f_mkdir("/Dir1/Dir1_1"); /* */
;;;565    	if (result == FR_OK)
;;;566    	{
;;;567    		printf("f_mkdir Dir1_1 成功\r\n");
;;;568    	}
;;;569    	else if (result == FR_EXIST)
;;;570    	{
;;;571    		printf("Dir1_1 目录已经存在 (%s)\r\n",  FR_Table[result]);
;;;572    	}
;;;573    	else
;;;574    	{
;;;575    		printf("f_mkdir Dir1_1 失败 (%s)\r\n",  FR_Table[result]);
;;;576    		return;
;;;577    	}
;;;578    
;;;579    	/* 卸载文件系统 */
;;;580    	result  = f_mount(NULL, "0:", 0);
;;;581    }
000050  f50d5d82          ADD      sp,sp,#0x1040
000054  bd10              POP      {r4,pc}
                  |L1.86|
000056  a03d              ADR      r0,|L1.332|
000058  f7fffffe          BL       f_mkdir
00005c  4604              MOV      r4,r0                 ;548
00005e  b91c              CBNZ     r4,|L1.104|
000060  a03c              ADR      r0,|L1.340|
000062  f7fffffe          BL       __2printf
000066  e00f              B        |L1.136|
                  |L1.104|
000068  2c08              CMP      r4,#8                 ;553
00006a  d106              BNE      |L1.122|
00006c  4818              LDR      r0,|L1.208|
00006e  f8501024          LDR      r1,[r0,r4,LSL #2]     ;555
000072  a03d              ADR      r0,|L1.360|
000074  f7fffffe          BL       __2printf
000078  e006              B        |L1.136|
                  |L1.122|
00007a  4815              LDR      r0,|L1.208|
00007c  f8501024          LDR      r1,[r0,r4,LSL #2]     ;559
000080  a041              ADR      r0,|L1.392|
000082  f7fffffe          BL       __2printf
000086  e7e3              B        |L1.80|
                  |L1.136|
000088  a046              ADR      r0,|L1.420|
00008a  f7fffffe          BL       f_mkdir
00008e  4604              MOV      r4,r0                 ;564
000090  b91c              CBNZ     r4,|L1.154|
000092  a048              ADR      r0,|L1.436|
000094  f7fffffe          BL       __2printf
000098  e00f              B        |L1.186|
                  |L1.154|
00009a  2c08              CMP      r4,#8                 ;569
00009c  d106              BNE      |L1.172|
00009e  480c              LDR      r0,|L1.208|
0000a0  f8501024          LDR      r1,[r0,r4,LSL #2]     ;571
0000a4  a049              ADR      r0,|L1.460|
0000a6  f7fffffe          BL       __2printf
0000aa  e006              B        |L1.186|
                  |L1.172|
0000ac  4808              LDR      r0,|L1.208|
0000ae  f8501024          LDR      r1,[r0,r4,LSL #2]     ;575
0000b2  a04f              ADR      r0,|L1.496|
0000b4  f7fffffe          BL       __2printf
0000b8  e7ca              B        |L1.80|
                  |L1.186|
0000ba  2200              MOVS     r2,#0                 ;580
0000bc  a103              ADR      r1,|L1.204|
0000be  4610              MOV      r0,r2                 ;580
0000c0  f7fffffe          BL       f_mount
0000c4  4604              MOV      r4,r0                 ;580
0000c6  bf00              NOP      
0000c8  e7c2              B        |L1.80|
;;;582    
                          ENDP

0000ca  0000              DCW      0x0000
                  |L1.204|
0000cc  303a00            DCB      "0:",0
0000cf  00                DCB      0
                  |L1.208|
                          DCD      FR_Table
                  |L1.212|
0000d4  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0000d8  bdbde696
0000dc  87e4bbb6
0000e0  e7b3bb  
0000e3  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
0000e7  a4b1e8b4
0000eb  a5202825
0000ef  73290d0a
0000f3  00      
                  |L1.244|
0000f4  2f446972          DCB      "/Dir1",0
0000f8  3100    
0000fa  00                DCB      0
0000fb  00                DCB      0
                  |L1.252|
0000fc  665f6d6b          DCB      "f_mkdir Dir1 Ok\r\n",0
000100  64697220
000104  44697231
000108  204f6b0d
00010c  0a00    
00010e  00                DCB      0
00010f  00                DCB      0
                  |L1.272|
000110  44697231          DCB      "Dir1 ",231,155,174,229,189,149,229,183,178,231,187,143,229
000114  20e79bae
000118  e5bd95e5
00011c  b7b2e7bb
000120  8fe5    
000122  ad98e59c          DCB      173,152,229,156,168,"(%s)\r\n",0
000126  a8282573
00012a  290d0a00
00012e  00                DCB      0
00012f  00                DCB      0
                  |L1.304|
000130  665f6d6b          DCB      "f_mkdir Dir1 ",229,164,177,232,180,165," (%s)\r\n",0
000134  64697220
000138  44697231
00013c  20e5a4b1
000140  e8b4a520
000144  28257329
000148  0d0a00  
00014b  00                DCB      0
                  |L1.332|
00014c  2f446972          DCB      "/Dir2",0
000150  3200    
000152  00                DCB      0
000153  00                DCB      0
                  |L1.340|
000154  665f6d6b          DCB      "f_mkdir Dir2 Ok\r\n",0
000158  64697220
00015c  44697232
000160  204f6b0d
000164  0a00    
000166  00                DCB      0
000167  00                DCB      0
                  |L1.360|
000168  44697232          DCB      "Dir2 ",231,155,174,229,189,149,229,183,178,231,187,143,229
00016c  20e79bae
000170  e5bd95e5
000174  b7b2e7bb
000178  8fe5    
00017a  ad98e59c          DCB      173,152,229,156,168,"(%s)\r\n",0
00017e  a8282573
000182  290d0a00
000186  00                DCB      0
000187  00                DCB      0
                  |L1.392|
000188  665f6d6b          DCB      "f_mkdir Dir2 ",229,164,177,232,180,165," (%s)\r\n",0
00018c  64697220
000190  44697232
000194  20e5a4b1
000198  e8b4a520
00019c  28257329
0001a0  0d0a00  
0001a3  00                DCB      0
                  |L1.420|
0001a4  2f446972          DCB      "/Dir1/Dir1_1",0
0001a8  312f4469
0001ac  72315f31
0001b0  00      
0001b1  00                DCB      0
0001b2  00                DCB      0
0001b3  00                DCB      0
                  |L1.436|
0001b4  665f6d6b          DCB      "f_mkdir Dir1_1 ",230,136,144,229,138,159,"\r\n",0
0001b8  64697220
0001bc  44697231
0001c0  5f3120e6
0001c4  8890e58a
0001c8  9f0d0a00
                  |L1.460|
0001cc  44697231          DCB      "Dir1_1 ",231,155,174,229,189,149,229,183,178,231,187,143
0001d0  5f3120e7
0001d4  9baee5bd
0001d8  95e5b7b2
0001dc  e7bb8f  
0001df  e5ad98e5          DCB      229,173,152,229,156,168," (%s)\r\n",0
0001e3  9ca82028
0001e7  2573290d
0001eb  0a00    
0001ed  00                DCB      0
0001ee  00                DCB      0
0001ef  00                DCB      0
                  |L1.496|
0001f0  665f6d6b          DCB      "f_mkdir Dir1_1 ",229,164,177,232,180,165," (%s)\r\n",0
0001f4  64697220
0001f8  44697231
0001fc  5f3120e5
000200  a4b1e8b4
000204  a5202825
000208  73290d0a
00020c  00      
00020d  00                DCB      0
00020e  00                DCB      0
00020f  00                DCB      0

                          AREA ||i.CreateNewFile||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  CreateNewFile PROC
;;;404    */
;;;405    static void CreateNewFile(void)
000000  b510              PUSH     {r4,lr}
;;;406    {
000002  f5ad5d02          SUB      sp,sp,#0x2080
;;;407    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;408    	FRESULT result;
;;;409    	FATFS fs;
;;;410    	FIL file;
;;;411    	DIR DirInf;
;;;412    	uint32_t bw;
;;;413    
;;;414     	/* 挂载文件系统 */
;;;415    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000006  2200              MOVS     r2,#0
000008  a11e              ADR      r1,|L2.132|
00000a  f2410050          MOV      r0,#0x1050
00000e  4468              ADD      r0,r0,sp
000010  f7fffffe          BL       f_mount
000014  4604              MOV      r4,r0
;;;416    	if (result != FR_OK)
000016  b12c              CBZ      r4,|L2.36|
;;;417    	{
;;;418    		printf("挂载文件系统失败 (%s)\r\n",  FR_Table[result]);
000018  481b              LDR      r0,|L2.136|
00001a  f8501024          LDR      r1,[r0,r4,LSL #2]
00001e  a01b              ADR      r0,|L2.140|
000020  f7fffffe          BL       __2printf
                  |L2.36|
;;;419    	}
;;;420    
;;;421    	/* 打开根文件夹 */
;;;422    	result = f_opendir(&DirInf, "0:/"); /* 如果不带参数，则从当前目录开始 */
000024  a121              ADR      r1,|L2.172|
000026  a801              ADD      r0,sp,#4
000028  f7fffffe          BL       f_opendir
00002c  4604              MOV      r4,r0
;;;423    	if (result != FR_OK)
00002e  b144              CBZ      r4,|L2.66|
;;;424    	{
;;;425    		printf("打开根目录失败 (%s)\r\n",  FR_Table[result]);
000030  4815              LDR      r0,|L2.136|
000032  f8501024          LDR      r1,[r0,r4,LSL #2]
000036  a01e              ADR      r0,|L2.176|
000038  f7fffffe          BL       __2printf
                  |L2.60|
;;;426    		return;
;;;427    	}
;;;428    
;;;429    	/* 打开文件 */
;;;430    	result = f_open(&file, "armfly.txt", FA_CREATE_ALWAYS | FA_WRITE);
;;;431    
;;;432    	/* 写一串数据 */
;;;433    	result = f_write(&file, "FatFS Write Demo \r\n www.spacetouch.co \r\n", 34, &bw);
;;;434    	if (result == FR_OK)
;;;435    	{
;;;436    		printf("armfly.txt 文件写入成功\r\n");
;;;437    	}
;;;438    	else
;;;439    	{
;;;440    		printf("armfly.txt 文件写入失败\r\n");
;;;441    	}
;;;442    
;;;443    	/* 关闭文件*/
;;;444    	f_close(&file);
;;;445    
;;;446    	/* 卸载文件系统 */
;;;447    	result  = f_mount(NULL, "0:", 0);
;;;448    }
00003c  f50d5d02          ADD      sp,sp,#0x2080
000040  bd10              POP      {r4,pc}
                  |L2.66|
000042  220a              MOVS     r2,#0xa               ;430
000044  a122              ADR      r1,|L2.208|
000046  a80a              ADD      r0,sp,#0x28           ;430
000048  f7fffffe          BL       f_open
00004c  4604              MOV      r4,r0                 ;430
00004e  466b              MOV      r3,sp                 ;433
000050  2222              MOVS     r2,#0x22              ;433
000052  a122              ADR      r1,|L2.220|
000054  a80a              ADD      r0,sp,#0x28           ;433
000056  f7fffffe          BL       f_write
00005a  4604              MOV      r4,r0                 ;433
00005c  b91c              CBNZ     r4,|L2.102|
00005e  a02a              ADR      r0,|L2.264|
000060  f7fffffe          BL       __2printf
000064  e002              B        |L2.108|
                  |L2.102|
000066  a030              ADR      r0,|L2.296|
000068  f7fffffe          BL       __2printf
                  |L2.108|
00006c  a80a              ADD      r0,sp,#0x28           ;444
00006e  f7fffffe          BL       f_close
000072  2200              MOVS     r2,#0                 ;447
000074  a103              ADR      r1,|L2.132|
000076  4610              MOV      r0,r2                 ;447
000078  f7fffffe          BL       f_mount
00007c  4604              MOV      r4,r0                 ;447
00007e  bf00              NOP      
000080  e7dc              B        |L2.60|
;;;449    
                          ENDP

000082  0000              DCW      0x0000
                  |L2.132|
000084  303a00            DCB      "0:",0
000087  00                DCB      0
                  |L2.136|
                          DCD      FR_Table
                  |L2.140|
00008c  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
000090  bdbde696
000094  87e4bbb6
000098  e7b3bb  
00009b  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
00009f  a4b1e8b4
0000a3  a5202825
0000a7  73290d0a
0000ab  00      
                  |L2.172|
0000ac  303a2f00          DCB      "0:/",0
                  |L2.176|
0000b0  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
0000b4  bc80e6a0
0000b8  b9e79bae
0000bc  e5bd95  
0000bf  e5a4b1e8          DCB      229,164,177,232,180,165," (%s)\r\n",0
0000c3  b4a52028
0000c7  2573290d
0000cb  0a00    
0000cd  00                DCB      0
0000ce  00                DCB      0
0000cf  00                DCB      0
                  |L2.208|
0000d0  61726d66          DCB      "armfly.txt",0
0000d4  6c792e74
0000d8  787400  
0000db  00                DCB      0
                  |L2.220|
0000dc  46617446          DCB      "FatFS Write Demo \r\n www.spacetouch.co \r\n",0
0000e0  53205772
0000e4  69746520
0000e8  44656d6f
0000ec  200d0a20
0000f0  7777772e
0000f4  73706163
0000f8  65746f75
0000fc  63682e63
000100  6f200d0a
000104  00      
000105  00                DCB      0
000106  00                DCB      0
000107  00                DCB      0
                  |L2.264|
000108  61726d66          DCB      "armfly.txt ",230,150,135,228,187,182,229,134,153,229,133
00010c  6c792e74
000110  787420e6
000114  9687e4bb
000118  b6e58699
00011c  e585    
00011e  a5e68890          DCB      165,230,136,144,229,138,159,"\r\n",0
000122  e58a9f0d
000126  0a00    
                  |L2.296|
000128  61726d66          DCB      "armfly.txt ",230,150,135,228,187,182,229,134,153,229,133
00012c  6c792e74
000130  787420e6
000134  9687e4bb
000138  b6e58699
00013c  e585    
00013e  a5e5a4b1          DCB      165,229,164,177,232,180,165,"\r\n",0
000142  e8b4a50d
000146  0a00    

                          AREA ||i.DeleteDirFile||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  DeleteDirFile PROC
;;;590    */
;;;591    static void DeleteDirFile(void)
000000  b530              PUSH     {r4,r5,lr}
;;;592    {
000002  b091              SUB      sp,sp,#0x44
000004  f5ad5d80          SUB      sp,sp,#0x1000
;;;593    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;594    	FRESULT result;
;;;595    	FATFS fs;
;;;596    	char FileName[13];
;;;597    	uint8_t i;
;;;598    
;;;599     	/* 挂载文件系统 */
;;;600    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000008  2200              MOVS     r2,#0
00000a  a153              ADR      r1,|L3.344|
00000c  a805              ADD      r0,sp,#0x14
00000e  f7fffffe          BL       f_mount
000012  4604              MOV      r4,r0
;;;601    	if (result != FR_OK)
000014  b12c              CBZ      r4,|L3.34|
;;;602    	{
;;;603    		printf("挂载文件系统失败 (%s)\r\n",  FR_Table[result]);
000016  4851              LDR      r0,|L3.348|
000018  f8501024          LDR      r1,[r0,r4,LSL #2]
00001c  a050              ADR      r0,|L3.352|
00001e  f7fffffe          BL       __2printf
                  |L3.34|
;;;604    	}
;;;605    
;;;606    	#if 0
;;;607    	/* 打开根文件夹 */
;;;608    	result = f_opendir(&DirInf, "/"); /* 如果不带参数，则从当前目录开始 */
;;;609    	if (result != FR_OK)
;;;610    	{
;;;611    		printf("打开根目录失败(%s)\r\n",  FR_Table[result]);
;;;612    		return;
;;;613    	}
;;;614    	#endif
;;;615    
;;;616    	/* 删除目录/Dir1 【因为还存在目录非空（存在子目录)，所以这次删除会失败】*/
;;;617    	result = f_unlink("/Dir1");
000022  a057              ADR      r0,|L3.384|
000024  f7fffffe          BL       f_unlink
000028  4604              MOV      r4,r0
;;;618    	if (result == FR_OK)
00002a  b91c              CBNZ     r4,|L3.52|
;;;619    	{
;;;620    		printf("删除目录Dir1成功\r\n");
00002c  a056              ADR      r0,|L3.392|
00002e  f7fffffe          BL       __2printf
000032  e00c              B        |L3.78|
                  |L3.52|
;;;621    	}
;;;622    	else if (result == FR_NO_FILE)
000034  2c04              CMP      r4,#4
000036  d104              BNE      |L3.66|
;;;623    	{
;;;624    		printf("没有发现文件或目录 :%s\r\n", "/Dir1");
000038  a151              ADR      r1,|L3.384|
00003a  a05a              ADR      r0,|L3.420|
00003c  f7fffffe          BL       __2printf
000040  e005              B        |L3.78|
                  |L3.66|
;;;625    	}
;;;626    	else
;;;627    	{
;;;628    		printf("删除Dir1失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
000042  4846              LDR      r0,|L3.348|
000044  f8501024          LDR      r1,[r0,r4,LSL #2]
000048  485f              LDR      r0,|L3.456|
00004a  f7fffffe          BL       __2printf
                  |L3.78|
;;;629    	}
;;;630    
;;;631    	/* 先删除目录/Dir1/Dir1_1 */
;;;632    	result = f_unlink("/Dir1/Dir1_1");
00004e  a05f              ADR      r0,|L3.460|
000050  f7fffffe          BL       f_unlink
000054  4604              MOV      r4,r0
;;;633    	if (result == FR_OK)
000056  b91c              CBNZ     r4,|L3.96|
;;;634    	{
;;;635    		printf("删除子目录/Dir1/Dir1_1成功\r\n");
000058  a060              ADR      r0,|L3.476|
00005a  f7fffffe          BL       __2printf
00005e  e00e              B        |L3.126|
                  |L3.96|
;;;636    	}
;;;637    	else if ((result == FR_NO_FILE) || (result == FR_NO_PATH))
000060  2c04              CMP      r4,#4
000062  d001              BEQ      |L3.104|
000064  2c05              CMP      r4,#5
000066  d104              BNE      |L3.114|
                  |L3.104|
;;;638    	{
;;;639    		printf("没有发现文件或目录 :%s\r\n", "/Dir1/Dir1_1");
000068  a158              ADR      r1,|L3.460|
00006a  a04e              ADR      r0,|L3.420|
00006c  f7fffffe          BL       __2printf
000070  e005              B        |L3.126|
                  |L3.114|
;;;640    	}
;;;641    	else
;;;642    	{
;;;643    		printf("删除子目录/Dir1/Dir1_1失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
000072  483a              LDR      r0,|L3.348|
000074  f8501024          LDR      r1,[r0,r4,LSL #2]
000078  4861              LDR      r0,|L3.512|
00007a  f7fffffe          BL       __2printf
                  |L3.126|
;;;644    	}
;;;645    
;;;646    	/* 先删除目录/Dir1 */
;;;647    	result = f_unlink("/Dir1");
00007e  a040              ADR      r0,|L3.384|
000080  f7fffffe          BL       f_unlink
000084  4604              MOV      r4,r0
;;;648    	if (result == FR_OK)
000086  b91c              CBNZ     r4,|L3.144|
;;;649    	{
;;;650    		printf("删除目录Dir1成功\r\n");
000088  a03f              ADR      r0,|L3.392|
00008a  f7fffffe          BL       __2printf
00008e  e00c              B        |L3.170|
                  |L3.144|
;;;651    	}
;;;652    	else if (result == FR_NO_FILE)
000090  2c04              CMP      r4,#4
000092  d104              BNE      |L3.158|
;;;653    	{
;;;654    		printf("没有发现文件或目录 :%s\r\n", "/Dir1");
000094  a13a              ADR      r1,|L3.384|
000096  a043              ADR      r0,|L3.420|
000098  f7fffffe          BL       __2printf
00009c  e005              B        |L3.170|
                  |L3.158|
;;;655    	}
;;;656    	else
;;;657    	{
;;;658    		printf("删除Dir1失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
00009e  482f              LDR      r0,|L3.348|
0000a0  f8501024          LDR      r1,[r0,r4,LSL #2]
0000a4  4848              LDR      r0,|L3.456|
0000a6  f7fffffe          BL       __2printf
                  |L3.170|
;;;659    	}
;;;660    
;;;661    	/* 删除目录/Dir2 */
;;;662    	result = f_unlink("/Dir2");
0000aa  a056              ADR      r0,|L3.516|
0000ac  f7fffffe          BL       f_unlink
0000b0  4604              MOV      r4,r0
;;;663    	if (result == FR_OK)
0000b2  b91c              CBNZ     r4,|L3.188|
;;;664    	{
;;;665    		printf("删除目录 Dir2 成功\r\n");
0000b4  a055              ADR      r0,|L3.524|
0000b6  f7fffffe          BL       __2printf
0000ba  e00c              B        |L3.214|
                  |L3.188|
;;;666    	}
;;;667    	else if (result == FR_NO_FILE)
0000bc  2c04              CMP      r4,#4
0000be  d104              BNE      |L3.202|
;;;668    	{
;;;669    		printf("没有发现文件或目录 :%s\r\n", "/Dir2");
0000c0  a150              ADR      r1,|L3.516|
0000c2  a038              ADR      r0,|L3.420|
0000c4  f7fffffe          BL       __2printf
0000c8  e005              B        |L3.214|
                  |L3.202|
;;;670    	}
;;;671    	else
;;;672    	{
;;;673    		printf("删除Dir2 失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
0000ca  4824              LDR      r0,|L3.348|
0000cc  f8501024          LDR      r1,[r0,r4,LSL #2]
0000d0  4855              LDR      r0,|L3.552|
0000d2  f7fffffe          BL       __2printf
                  |L3.214|
;;;674    	}
;;;675    
;;;676    	/* 删除文件 armfly.txt */
;;;677    	result = f_unlink("armfly.txt");
0000d6  a055              ADR      r0,|L3.556|
0000d8  f7fffffe          BL       f_unlink
0000dc  4604              MOV      r4,r0
;;;678    	if (result == FR_OK)
0000de  b91c              CBNZ     r4,|L3.232|
;;;679    	{
;;;680    		printf("删除文件 armfly.txt 成功\r\n");
0000e0  a055              ADR      r0,|L3.568|
0000e2  f7fffffe          BL       __2printf
0000e6  e00c              B        |L3.258|
                  |L3.232|
;;;681    	}
;;;682    	else if (result == FR_NO_FILE)
0000e8  2c04              CMP      r4,#4
0000ea  d104              BNE      |L3.246|
;;;683    	{
;;;684    		printf("没有发现文件或目录 :%s\r\n", "armfly.txt");
0000ec  a14f              ADR      r1,|L3.556|
0000ee  a02d              ADR      r0,|L3.420|
0000f0  f7fffffe          BL       __2printf
0000f4  e005              B        |L3.258|
                  |L3.246|
;;;685    	}
;;;686    	else
;;;687    	{
;;;688    		printf("删除armfly.txt失败(错误代码 = %s) 文件只读或目录非空\r\n",  FR_Table[result]);
0000f6  4819              LDR      r0,|L3.348|
0000f8  f8501024          LDR      r1,[r0,r4,LSL #2]
0000fc  4857              LDR      r0,|L3.604|
0000fe  f7fffffe          BL       __2printf
                  |L3.258|
;;;689    	}
;;;690    
;;;691    	/* 删除文件 speed1.txt */
;;;692    	for (i = 0; i < 20; i++)
000102  2500              MOVS     r5,#0
000104  e01c              B        |L3.320|
                  |L3.262|
;;;693    	{
;;;694    		sprintf(FileName, "Speed%02d.txt", i);		/* 每写1次，序号递增 */
000106  462a              MOV      r2,r5
000108  a155              ADR      r1,|L3.608|
00010a  a801              ADD      r0,sp,#4
00010c  f7fffffe          BL       __2sprintf
;;;695    		result = f_unlink(FileName);
000110  a801              ADD      r0,sp,#4
000112  f7fffffe          BL       f_unlink
000116  4604              MOV      r4,r0
;;;696    		if (result == FR_OK)
000118  b924              CBNZ     r4,|L3.292|
;;;697    		{
;;;698    			printf("删除文件%s成功\r\n", FileName);
00011a  a901              ADD      r1,sp,#4
00011c  a054              ADR      r0,|L3.624|
00011e  f7fffffe          BL       __2printf
000122  e00b              B        |L3.316|
                  |L3.292|
;;;699    		}
;;;700    		else if (result == FR_NO_FILE)
000124  2c04              CMP      r4,#4
000126  d104              BNE      |L3.306|
;;;701    		{
;;;702    			printf("没有发现文件:%s\r\n", FileName);
000128  a901              ADD      r1,sp,#4
00012a  a057              ADR      r0,|L3.648|
00012c  f7fffffe          BL       __2printf
000130  e004              B        |L3.316|
                  |L3.306|
;;;703    		}
;;;704    		else
;;;705    		{
;;;706    			printf("删除%s文件失败(错误代码 = %d) 文件只读或目录非空\r\n", FileName, result);
000132  4622              MOV      r2,r4
000134  a901              ADD      r1,sp,#4
000136  485a              LDR      r0,|L3.672|
000138  f7fffffe          BL       __2printf
                  |L3.316|
00013c  1c68              ADDS     r0,r5,#1              ;692
00013e  b2c5              UXTB     r5,r0                 ;692
                  |L3.320|
000140  2d14              CMP      r5,#0x14              ;692
000142  dbe0              BLT      |L3.262|
;;;707    		}
;;;708    	}
;;;709    
;;;710    	/* 卸载文件系统 */
;;;711    	result  = f_mount(NULL, "0:", 0);
000144  2200              MOVS     r2,#0
000146  a104              ADR      r1,|L3.344|
000148  4610              MOV      r0,r2
00014a  f7fffffe          BL       f_mount
00014e  4604              MOV      r4,r0
;;;712    }
000150  b011              ADD      sp,sp,#0x44
000152  f50d5d80          ADD      sp,sp,#0x1000
000156  bd30              POP      {r4,r5,pc}
;;;713    
                          ENDP

                  |L3.344|
000158  303a00            DCB      "0:",0
00015b  00                DCB      0
                  |L3.348|
                          DCD      FR_Table
                  |L3.352|
000160  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
000164  bdbde696
000168  87e4bbb6
00016c  e7b3bb  
00016f  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
000173  a4b1e8b4
000177  a5202825
00017b  73290d0a
00017f  00      
                  |L3.384|
000180  2f446972          DCB      "/Dir1",0
000184  3100    
000186  00                DCB      0
000187  00                DCB      0
                  |L3.392|
000188  e588a0e9          DCB      229,136,160,233,153,164,231,155,174,229,189,149,"Dir1",230
00018c  99a4e79b
000190  aee5bd95
000194  44697231
000198  e6      
000199  8890e58a          DCB      136,144,229,138,159,"\r\n",0
00019d  9f0d0a00
0001a1  00                DCB      0
0001a2  00                DCB      0
0001a3  00                DCB      0
                  |L3.420|
0001a4  e6b2a1e6          DCB      230,178,161,230,156,137,229,143,145,231,142,176,230,150,135
0001a8  9c89e58f
0001ac  91e78eb0
0001b0  e69687  
0001b3  e4bbb6e6          DCB      228,187,182,230,136,150,231,155,174,229,189,149," :%s\r\n"
0001b7  8896e79b
0001bb  aee5bd95
0001bf  203a2573
0001c3  0d0a    
0001c5  00                DCB      0
0001c6  00                DCB      0
0001c7  00                DCB      0
                  |L3.456|
                          DCD      ||.conststring||+0x13c
                  |L3.460|
0001cc  2f446972          DCB      "/Dir1/Dir1_1",0
0001d0  312f4469
0001d4  72315f31
0001d8  00      
0001d9  00                DCB      0
0001da  00                DCB      0
0001db  00                DCB      0
                  |L3.476|
0001dc  e588a0e9          DCB      229,136,160,233,153,164,229,173,144,231,155,174,229,189,149
0001e0  99a4e5ad
0001e4  90e79bae
0001e8  e5bd95  
0001eb  2f446972          DCB      "/Dir1/Dir1_1",230,136,144,229,138,159,"\r\n",0
0001ef  312f4469
0001f3  72315f31
0001f7  e68890e5
0001fb  8a9f0d0a
0001ff  00      
                  |L3.512|
                          DCD      ||.conststring||+0x180
                  |L3.516|
000204  2f446972          DCB      "/Dir2",0
000208  3200    
00020a  00                DCB      0
00020b  00                DCB      0
                  |L3.524|
00020c  e588a0e9          DCB      229,136,160,233,153,164,231,155,174,229,189,149," Dir2 ",230
000210  99a4e79b
000214  aee5bd95
000218  20446972
00021c  3220e6  
00021f  8890e58a          DCB      136,144,229,138,159,"\r\n",0
000223  9f0d0a00
000227  00                DCB      0
                  |L3.552|
                          DCD      ||.conststring||+0x1d4
                  |L3.556|
00022c  61726d66          DCB      "armfly.txt",0
000230  6c792e74
000234  787400  
000237  00                DCB      0
                  |L3.568|
000238  e588a0e9          DCB      229,136,160,233,153,164,230,150,135,228,187,182," armfly"
00023c  99a4e696
000240  87e4bbb6
000244  2061726d
000248  666c79  
00024b  2e747874          DCB      ".txt ",230,136,144,229,138,159,"\r\n",0
00024f  20e68890
000253  e58a9f0d
000257  0a00    
000259  00                DCB      0
00025a  00                DCB      0
00025b  00                DCB      0
                  |L3.604|
                          DCD      ||.conststring||+0x218
                  |L3.608|
000260  53706565          DCB      "Speed%02d.txt",0
000264  64253032
000268  642e7478
00026c  7400    
00026e  00                DCB      0
00026f  00                DCB      0
                  |L3.624|
000270  e588a0e9          DCB      229,136,160,233,153,164,230,150,135,228,187,182,"%s",230
000274  99a4e696
000278  87e4bbb6
00027c  2573e6  
00027f  8890e58a          DCB      136,144,229,138,159,"\r\n",0
000283  9f0d0a00
000287  00                DCB      0
                  |L3.648|
000288  e6b2a1e6          DCB      230,178,161,230,156,137,229,143,145,231,142,176,230,150,135
00028c  9c89e58f
000290  91e78eb0
000294  e69687  
000297  e4bbb63a          DCB      228,187,182,":%s\r\n",0
00029b  25730d0a
00029f  00      
                  |L3.672|
                          DCD      ||.conststring||+0x264

                          AREA ||i.DemoFatFS||, CODE, READONLY, ALIGN=2

                  DemoFatFS PROC
;;;98     */
;;;99     void DemoFatFS(void)
000000  b508              PUSH     {r3,lr}
;;;100    {
;;;101    	uint8_t cmd;
;;;102    	
;;;103    	/* 打印命令列表，用户可以通过串口操作指令 */
;;;104    	DispMenu();
000002  f7fffffe          BL       DispMenu
;;;105    	bsp_StartAutoTimer(1, 100);
000006  2164              MOVS     r1,#0x64
000008  2001              MOVS     r0,#1
00000a  f7fffffe          BL       bsp_StartAutoTimer
;;;106    	while(1)
00000e  e04c              B        |L4.170|
                  |L4.16|
;;;107    	{
;;;108    		bsp_Idle();		/* 这个函数在bsp.c文件。用户可以修改这个函数实现CPU休眠和喂狗 */
000010  f7fffffe          BL       bsp_Idle
;;;109    		
;;;110    		if(bsp_CheckTimer(1))
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       bsp_CheckTimer
00001a  b110              CBZ      r0,|L4.34|
;;;111    		{
;;;112    			bsp_LedToggle(LED_GREEN);
00001c  2001              MOVS     r0,#1
00001e  f7fffffe          BL       bsp_LedToggle
                  |L4.34|
;;;113    		}
;;;114    
;;;115    		if (comGetChar(COM1, &cmd))	/* 从串口读入一个字符(非阻塞方式) */
000022  4669              MOV      r1,sp
000024  2000              MOVS     r0,#0
000026  f7fffffe          BL       comGetChar
00002a  2800              CMP      r0,#0
00002c  d03d              BEQ      |L4.170|
;;;116    		{
;;;117    			printf("\r\n");
00002e  a01f              ADR      r0,|L4.172|
000030  f7fffffe          BL       __2printf
;;;118    			switch (cmd)
000034  f89d0000          LDRB     r0,[sp,#0]
000038  3830              SUBS     r0,r0,#0x30
00003a  2807              CMP      r0,#7
00003c  d231              BCS      |L4.162|
00003e  e8dff000          TBB      [pc,r0]
000042  040a              DCB      0x04,0x0a
000044  12181e24          DCB      0x12,0x18,0x1e,0x24
000048  2a00              DCB      0x2a,0x00
;;;119    			{
;;;120    				case '0':
;;;121    					printf("【0 - FileFormat】\r\n");
00004a  a019              ADR      r0,|L4.176|
00004c  f7fffffe          BL       __2printf
;;;122    					FileFormat();		/* 显示SD卡根目录下的文件名 */
000050  f7fffffe          BL       FileFormat
;;;123    					break;
000054  e028              B        |L4.168|
;;;124    				
;;;125    				case '1':
;;;126    					printf("【1 - ViewRootDir】\r\n");
000056  a01c              ADR      r0,|L4.200|
000058  f7fffffe          BL       __2printf
;;;127    					ViewRootDir();		/* 显示SD卡根目录下的文件名 */
00005c  f7fffffe          BL       ViewRootDir
;;;128                        SD_ViewRootDir();
000060  f7fffffe          BL       SD_ViewRootDir
;;;129    					break;
000064  e020              B        |L4.168|
;;;130    
;;;131    				case '2':
;;;132    					printf("【2 - CreateNewFile】\r\n");
000066  a01f              ADR      r0,|L4.228|
000068  f7fffffe          BL       __2printf
;;;133    					CreateNewFile();		/* 创建一个新文件,写入一个字符串 */
00006c  f7fffffe          BL       CreateNewFile
;;;134    					break;
000070  e01a              B        |L4.168|
;;;135    
;;;136    				case '3':
;;;137    					printf("【3 - ReadFileData】\r\n");
000072  a023              ADR      r0,|L4.256|
000074  f7fffffe          BL       __2printf
;;;138    					ReadFileData();		/* 读取根目录下armfly.txt的内容 */
000078  f7fffffe          BL       ReadFileData
;;;139    					break;
00007c  e014              B        |L4.168|
;;;140    
;;;141    				case '4':
;;;142    					printf("【4 - CreateDir】\r\n");
00007e  a027              ADR      r0,|L4.284|
000080  f7fffffe          BL       __2printf
;;;143    					CreateDir();		/* 创建目录 */
000084  f7fffffe          BL       CreateDir
;;;144    					break;
000088  e00e              B        |L4.168|
;;;145    
;;;146    				case '5':
;;;147    					printf("【5 - DeleteDirFile】\r\n");
00008a  a02a              ADR      r0,|L4.308|
00008c  f7fffffe          BL       __2printf
;;;148    					DeleteDirFile();	/* 删除目录和文件 */
000090  f7fffffe          BL       DeleteDirFile
;;;149    					break;
000094  e008              B        |L4.168|
;;;150    
;;;151    				case '6':
;;;152    					printf("【6 - TestSpeed】\r\n");
000096  a02e              ADR      r0,|L4.336|
000098  f7fffffe          BL       __2printf
;;;153    					WriteFileTest();	/* 速度测试 */
00009c  f7fffffe          BL       WriteFileTest
;;;154    					break;
0000a0  e002              B        |L4.168|
                  |L4.162|
;;;155    
;;;156    				default:
;;;157    					DispMenu();
0000a2  f7fffffe          BL       DispMenu
;;;158    					break;
0000a6  bf00              NOP      
                  |L4.168|
0000a8  bf00              NOP                            ;123
                  |L4.170|
0000aa  e7b1              B        |L4.16|
;;;159    			}
;;;160    		}
;;;161    
;;;162    	}
;;;163    }
;;;164    
                          ENDP

                  |L4.172|
0000ac  0d0a00            DCB      "\r\n",0
0000af  00                DCB      0
                  |L4.176|
0000b0  e3809030          DCB      227,128,144,"0 - FileFormat",227,128,145,"\\r\n",0
0000b4  202d2046
0000b8  696c6546
0000bc  6f726d61
0000c0  74e38091
0000c4  5c720a00
                  |L4.200|
0000c8  e3809031          DCB      227,128,144,"1 - ViewRootDir",227,128,145,"\\r\n",0
0000cc  202d2056
0000d0  69657752
0000d4  6f6f7444
0000d8  6972e380
0000dc  915c720a
0000e0  00      
0000e1  00                DCB      0
0000e2  00                DCB      0
0000e3  00                DCB      0
                  |L4.228|
0000e4  e3809032          DCB      227,128,144,"2 - CreateNewFile",227,128,145,"\\r\n",0
0000e8  202d2043
0000ec  72656174
0000f0  654e6577
0000f4  46696c65
0000f8  e380915c
0000fc  720a00  
0000ff  00                DCB      0
                  |L4.256|
000100  e3809033          DCB      227,128,144,"3 - ReadFileData",227,128,145,"\\r\n",0
000104  202d2052
000108  65616446
00010c  696c6544
000110  617461e3
000114  80915c72
000118  0a00    
00011a  00                DCB      0
00011b  00                DCB      0
                  |L4.284|
00011c  e3809034          DCB      227,128,144,"4 - CreateDir",227,128,145,"\\r\n",0
000120  202d2043
000124  72656174
000128  65446972
00012c  e380915c
000130  720a00  
000133  00                DCB      0
                  |L4.308|
000134  e3809035          DCB      227,128,144,"5 - DeleteDirFile",227,128,145,"\\r\n",0
000138  202d2044
00013c  656c6574
000140  65446972
000144  46696c65
000148  e380915c
00014c  720a00  
00014f  00                DCB      0
                  |L4.336|
000150  e3809036          DCB      227,128,144,"6 - TestSpeed",227,128,145,"\\r\n",0
000154  202d2054
000158  65737453
00015c  70656564
000160  e380915c
000164  720a00  
000167  00                DCB      0

                          AREA ||i.DispMenu||, CODE, READONLY, ALIGN=2

                  DispMenu PROC
;;;172    */
;;;173    static void DispMenu(void)
000000  b510              PUSH     {r4,lr}
;;;174    {
;;;175    	printf("\r\n------------------------------------------------\r\n");
000002  a00f              ADR      r0,|L5.64|
000004  f7fffffe          BL       __2printf
;;;176    	printf("第一次使用请选择命令0进行SPI Flash格式化\r\n");
000008  a01b              ADR      r0,|L5.120|
00000a  f7fffffe          BL       __2printf
;;;177    	printf("请选择操作命令:\r\n");
00000e  a029              ADR      r0,|L5.180|
000010  f7fffffe          BL       __2printf
;;;178    	printf("0 - 对SPI_Flash进行文件系统格式化\r\n");
000014  a02e              ADR      r0,|L5.208|
000016  f7fffffe          BL       __2printf
;;;179    	printf("1 - 显示根目录下的文件列表\r\n");
00001a  a039              ADR      r0,|L5.256|
00001c  f7fffffe          BL       __2printf
;;;180    	printf("2 - 创建一个新文件armfly.txt\r\n");
000020  a042              ADR      r0,|L5.300|
000022  f7fffffe          BL       __2printf
;;;181    	printf("3 - 读armfly.txt文件的内容\r\n");
000026  a04b              ADR      r0,|L5.340|
000028  f7fffffe          BL       __2printf
;;;182    	printf("4 - 创建目录\r\n");
00002c  a052              ADR      r0,|L5.376|
00002e  f7fffffe          BL       __2printf
;;;183    	printf("5 - 删除文件和目录\r\n");
000032  a056              ADR      r0,|L5.396|
000034  f7fffffe          BL       __2printf
;;;184    	printf("6 - 读写文件速度测试\r\n");
000038  a05c              ADR      r0,|L5.428|
00003a  f7fffffe          BL       __2printf
;;;185    }
00003e  bd10              POP      {r4,pc}
;;;186    
                          ENDP

                  |L5.64|
000040  0d0a2d2d          DCB      "\r\n------------------------------------------------\r\n"
000044  2d2d2d2d
000048  2d2d2d2d
00004c  2d2d2d2d
000050  2d2d2d2d
000054  2d2d2d2d
000058  2d2d2d2d
00005c  2d2d2d2d
000060  2d2d2d2d
000064  2d2d2d2d
000068  2d2d2d2d
00006c  2d2d2d2d
000070  2d2d0d0a
000074  00                DCB      0
000075  00                DCB      0
000076  00                DCB      0
000077  00                DCB      0
                  |L5.120|
000078  e7acace4          DCB      231,172,172,228,184,128,230,172,161,228,189,191,231,148,168
00007c  b880e6ac
000080  a1e4bdbf
000084  e794a8  
000087  e8afb7e9          DCB      232,175,183,233,128,137,230,139,169,229,145,189,228,187,164
00008b  8089e68b
00008f  a9e591bd
000093  e4bba4  
000096  30e8bf9b          DCB      "0",232,191,155,232,161,140,"SPI Flash",230,160,188,229,188
00009a  e8a18c53
00009e  50492046
0000a2  6c617368
0000a6  e6a0bce5
0000aa  bc      
0000ab  8fe58c96          DCB      143,229,140,150,"\\r\n",0
0000af  5c720a00
0000b3  00                DCB      0
                  |L5.180|
0000b4  e8afb7e9          DCB      232,175,183,233,128,137,230,139,169,230,147,141,228,189,156
0000b8  8089e68b
0000bc  a9e6938d
0000c0  e4bd9c  
0000c3  e591bde4          DCB      229,145,189,228,187,164,":\r\n",0
0000c7  bba43a0d
0000cb  0a00    
0000cd  00                DCB      0
0000ce  00                DCB      0
0000cf  00                DCB      0
                  |L5.208|
0000d0  30202d20          DCB      "0 - ",229,175,185,"SPI_Flash",232,191,155,232,161,140,230
0000d4  e5afb953
0000d8  50495f46
0000dc  6c617368
0000e0  e8bf9be8
0000e4  a18ce6  
0000e7  9687e4bb          DCB      150,135,228,187,182,231,179,187,231,187,159,230,160,188,229
0000eb  b6e7b3bb
0000ef  e7bb9fe6
0000f3  a0bce5  
0000f6  bc8fe58c          DCB      188,143,229,140,150,"\\r\n",0
0000fa  965c720a
0000fe  00      
0000ff  00                DCB      0
                  |L5.256|
000100  31202d20          DCB      "1 - ",230,152,190,231,164,186,230,160,185,231,155,174,229
000104  e698bee7
000108  a4bae6a0
00010c  b9e79bae
000110  e5      
000111  bd95e4b8          DCB      189,149,228,184,139,231,154,132,230,150,135,228,187,182,229
000115  8be79a84
000119  e69687e4
00011d  bbb6e5  
000120  8897e8a1          DCB      136,151,232,161,168,"\\r\n",0
000124  a85c720a
000128  00      
000129  00                DCB      0
00012a  00                DCB      0
00012b  00                DCB      0
                  |L5.300|
00012c  32202d20          DCB      "2 - ",229,136,155,229,187,186,228,184,128,228,184,170,230
000130  e5889be5
000134  bbbae4b8
000138  80e4b8aa
00013c  e6      
00013d  96b0e696          DCB      150,176,230,150,135,228,187,182,"armfly.txt\r\n",0
000141  87e4bbb6
000145  61726d66
000149  6c792e74
00014d  78740d0a
000151  00      
000152  00                DCB      0
000153  00                DCB      0
                  |L5.340|
000154  33202d20          DCB      "3 - ",232,175,187,"armfly.txt",230,150,135,228,187,182,231
000158  e8afbb61
00015c  726d666c
000160  792e7478
000164  74e69687
000168  e4bbb6e7
00016c  9a84e586          DCB      154,132,229,134,133,229,174,185,"\\r\n",0
000170  85e5aeb9
000174  5c720a00
                  |L5.376|
000178  34202d20          DCB      "4 - ",229,136,155,229,187,186,231,155,174,229,189,149,"\r"
00017c  e5889be5
000180  bbbae79b
000184  aee5bd95
000188  0d      
000189  0a00              DCB      "\n",0
00018b  00                DCB      0
                  |L5.396|
00018c  35202d20          DCB      "5 - ",229,136,160,233,153,164,230,150,135,228,187,182,229
000190  e588a0e9
000194  99a4e696
000198  87e4bbb6
00019c  e5      
00019d  928ce79b          DCB      146,140,231,155,174,229,189,149,"\\r\n",0
0001a1  aee5bd95
0001a5  5c720a00
0001a9  00                DCB      0
0001aa  00                DCB      0
0001ab  00                DCB      0
                  |L5.428|
0001ac  36202d20          DCB      "6 - ",232,175,187,229,134,153,230,150,135,228,187,182,233
0001b0  e8afbbe5
0001b4  8699e696
0001b8  87e4bbb6
0001bc  e9      
0001bd  809fe5ba          DCB      128,159,229,186,166,230,181,139,232,175,149,"\r\n",0
0001c1  a6e6b58b
0001c5  e8af950d
0001c9  0a00    
0001cb  00                DCB      0

                          AREA ||i.FileFormat||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  FileFormat PROC
;;;194    */
;;;195    static void FileFormat(void)
000000  b510              PUSH     {r4,lr}
;;;196    {
000002  f5ad5d82          SUB      sp,sp,#0x1040
;;;197    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;198    	FRESULT result;
;;;199    	FATFS fs;
;;;200    
;;;201    	/* 挂载文件系统 */
;;;202    	result = f_mount(&fs, "0:", 0);	
000006  2200              MOVS     r2,#0
000008  a11e              ADR      r1,|L6.132|
00000a  a804              ADD      r0,sp,#0x10
00000c  f7fffffe          BL       f_mount
000010  4604              MOV      r4,r0
;;;203    	if (result != FR_OK)
000012  b134              CBZ      r4,|L6.34|
;;;204    	{
;;;205    		printf("挂载文件系统失败 (%s)\r\n", FR_Table[result]);
000014  481c              LDR      r0,|L6.136|
000016  f8501024          LDR      r1,[r0,r4,LSL #2]
00001a  a01c              ADR      r0,|L6.140|
00001c  f7fffffe          BL       __2printf
000020  e005              B        |L6.46|
                  |L6.34|
;;;206    	}
;;;207    	else
;;;208    	{
;;;209    		printf("挂载文件系统成功 (%s)\r\n", FR_Table[result]);
000022  4819              LDR      r0,|L6.136|
000024  f8501024          LDR      r1,[r0,r4,LSL #2]
000028  a020              ADR      r0,|L6.172|
00002a  f7fffffe          BL       __2printf
                  |L6.46|
;;;210    	}
;;;211    	
;;;212    	/* 第一次使用必须进行格式化 */
;;;213    	result = f_mkfs("0:",0,0);
00002e  2200              MOVS     r2,#0
000030  4611              MOV      r1,r2
000032  a014              ADR      r0,|L6.132|
000034  f7fffffe          BL       f_mkfs
000038  4604              MOV      r4,r0
;;;214    	if (result != FR_OK)
00003a  b134              CBZ      r4,|L6.74|
;;;215    	{
;;;216    		printf("格式化失败 (%s)\r\n", FR_Table[result]);
00003c  4812              LDR      r0,|L6.136|
00003e  f8501024          LDR      r1,[r0,r4,LSL #2]
000042  a022              ADR      r0,|L6.204|
000044  f7fffffe          BL       __2printf
000048  e005              B        |L6.86|
                  |L6.74|
;;;217    	}
;;;218    	else
;;;219    	{
;;;220    		printf("格式化成功 (%s)\r\n", FR_Table[result]);
00004a  480f              LDR      r0,|L6.136|
00004c  f8501024          LDR      r1,[r0,r4,LSL #2]
000050  a024              ADR      r0,|L6.228|
000052  f7fffffe          BL       __2printf
                  |L6.86|
;;;221    	}
;;;222    
;;;223    	/* 卸载文件系统 */
;;;224    	result  = f_mount(NULL, "0:", 0);
000056  2200              MOVS     r2,#0
000058  a10a              ADR      r1,|L6.132|
00005a  4610              MOV      r0,r2
00005c  f7fffffe          BL       f_mount
000060  4604              MOV      r4,r0
;;;225    	if (result != FR_OK)
000062  b134              CBZ      r4,|L6.114|
;;;226    	{
;;;227    		printf("卸载文件系统失败 (%s)\r\n", FR_Table[result]);
000064  4808              LDR      r0,|L6.136|
000066  f8501024          LDR      r1,[r0,r4,LSL #2]
00006a  a024              ADR      r0,|L6.252|
00006c  f7fffffe          BL       __2printf
000070  e005              B        |L6.126|
                  |L6.114|
;;;228    	}
;;;229    	else
;;;230    	{
;;;231    		printf("卸载文件系统成功 (%s)\r\n", FR_Table[result]);
000072  4805              LDR      r0,|L6.136|
000074  f8501024          LDR      r1,[r0,r4,LSL #2]
000078  a028              ADR      r0,|L6.284|
00007a  f7fffffe          BL       __2printf
                  |L6.126|
;;;232    	}
;;;233    }
00007e  f50d5d82          ADD      sp,sp,#0x1040
000082  bd10              POP      {r4,pc}
;;;234    
                          ENDP

                  |L6.132|
000084  303a00            DCB      "0:",0
000087  00                DCB      0
                  |L6.136|
                          DCD      FR_Table
                  |L6.140|
00008c  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
000090  bdbde696
000094  87e4bbb6
000098  e7b3bb  
00009b  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
00009f  a4b1e8b4
0000a3  a5202825
0000a7  73290d0a
0000ab  00      
                  |L6.172|
0000ac  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0000b0  bdbde696
0000b4  87e4bbb6
0000b8  e7b3bb  
0000bb  e7bb9fe6          DCB      231,187,159,230,136,144,229,138,159," (%s)\r\n",0
0000bf  8890e58a
0000c3  9f202825
0000c7  73290d0a
0000cb  00      
                  |L6.204|
0000cc  e6a0bce5          DCB      230,160,188,229,188,143,229,140,150,229,164,177,232,180,165
0000d0  bc8fe58c
0000d4  96e5a4b1
0000d8  e8b4a5  
0000db  20282573          DCB      " (%s)\r\n",0
0000df  290d0a00
0000e3  00                DCB      0
                  |L6.228|
0000e4  e6a0bce5          DCB      230,160,188,229,188,143,229,140,150,230,136,144,229,138,159
0000e8  bc8fe58c
0000ec  96e68890
0000f0  e58a9f  
0000f3  20282573          DCB      " (%s)\r\n",0
0000f7  290d0a00
0000fb  00                DCB      0
                  |L6.252|
0000fc  e58db8e8          DCB      229,141,184,232,189,189,230,150,135,228,187,182,231,179,187
000100  bdbde696
000104  87e4bbb6
000108  e7b3bb  
00010b  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
00010f  a4b1e8b4
000113  a5202825
000117  73290d0a
00011b  00      
                  |L6.284|
00011c  e58db8e8          DCB      229,141,184,232,189,189,230,150,135,228,187,182,231,179,187
000120  bdbde696
000124  87e4bbb6
000128  e7b3bb  
00012b  e7bb9fe6          DCB      231,187,159,230,136,144,229,138,159," (%s)\r\n",0
00012f  8890e58a
000133  9f202825
000137  73290d0a
00013b  00      

                          AREA ||i.ReadFileData||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  ReadFileData PROC
;;;457    */
;;;458    static void ReadFileData(void)
000000  b510              PUSH     {r4,lr}
;;;459    {
000002  f5ad5d04          SUB      sp,sp,#0x2100
;;;460    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;461    	FRESULT result;
;;;462    	FATFS fs;
;;;463    	FIL file;
;;;464    	DIR DirInf;
;;;465    	uint32_t bw;
;;;466    	char buf[128];
;;;467    
;;;468     	/* 挂载文件系统 */
;;;469    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000006  2200              MOVS     r2,#0
000008  a123              ADR      r1,|L7.152|
00000a  f24100d0          MOV      r0,#0x10d0
00000e  4468              ADD      r0,r0,sp
000010  f7fffffe          BL       f_mount
000014  4604              MOV      r4,r0
;;;470    	if (result != FR_OK)
000016  b12c              CBZ      r4,|L7.36|
;;;471    	{
;;;472    		printf("挂载文件系统失败(%s)\r\n",  FR_Table[result]);
000018  4820              LDR      r0,|L7.156|
00001a  f8501024          LDR      r1,[r0,r4,LSL #2]
00001e  a020              ADR      r0,|L7.160|
000020  f7fffffe          BL       __2printf
                  |L7.36|
;;;473    	}
;;;474    
;;;475    	/* 打开根文件夹 */
;;;476    	result = f_opendir(&DirInf, "/"); /* 如果不带参数，则从当前目录开始 */
000024  a126              ADR      r1,|L7.192|
000026  a821              ADD      r0,sp,#0x84
000028  f7fffffe          BL       f_opendir
00002c  4604              MOV      r4,r0
;;;477    	if (result != FR_OK)
00002e  b144              CBZ      r4,|L7.66|
;;;478    	{
;;;479    		printf("打开根目录失败(%s)\r\n",  FR_Table[result]);
000030  481a              LDR      r0,|L7.156|
000032  f8501024          LDR      r1,[r0,r4,LSL #2]
000036  a023              ADR      r0,|L7.196|
000038  f7fffffe          BL       __2printf
                  |L7.60|
;;;480    		return;
;;;481    	}
;;;482    
;;;483    	/* 打开文件 */
;;;484    	result = f_open(&file, "armfly.txt", FA_OPEN_EXISTING | FA_READ);
;;;485    	if (result !=  FR_OK)
;;;486    	{
;;;487    		printf("Don't Find File : armfly.txt\r\n");
;;;488    		return;
;;;489    	}
;;;490    
;;;491    	/* 读取文件 */
;;;492    	result = f_read(&file, &buf, sizeof(buf) - 1, &bw);
;;;493    	if (bw > 0)
;;;494    	{
;;;495    		buf[bw] = 0;
;;;496    		printf("\r\narmfly.txt 文件内容 : \r\n%s\r\n", buf);
;;;497    	}
;;;498    	else
;;;499    	{
;;;500    		printf("\r\narmfly.txt 文件内容 : \r\n");
;;;501    	}
;;;502    
;;;503    	/* 关闭文件*/
;;;504    	f_close(&file);
;;;505    
;;;506    	/* 卸载文件系统 */
;;;507    	result  = f_mount(NULL, "0:", 0);
;;;508    }
00003c  f50d5d04          ADD      sp,sp,#0x2100
000040  bd10              POP      {r4,pc}
                  |L7.66|
000042  2201              MOVS     r2,#1                 ;484
000044  a126              ADR      r1,|L7.224|
000046  a82a              ADD      r0,sp,#0xa8           ;484
000048  f7fffffe          BL       f_open
00004c  4604              MOV      r4,r0                 ;484
00004e  b11c              CBZ      r4,|L7.88|
000050  a026              ADR      r0,|L7.236|
000052  f7fffffe          BL       __2printf
000056  e7f1              B        |L7.60|
                  |L7.88|
000058  ab20              ADD      r3,sp,#0x80           ;492
00005a  227f              MOVS     r2,#0x7f              ;492
00005c  4669              MOV      r1,sp                 ;492
00005e  a82a              ADD      r0,sp,#0xa8           ;492
000060  f7fffffe          BL       f_read
000064  4604              MOV      r4,r0                 ;492
000066  9820              LDR      r0,[sp,#0x80]         ;493
000068  b140              CBZ      r0,|L7.124|
00006a  2000              MOVS     r0,#0                 ;495
00006c  9a20              LDR      r2,[sp,#0x80]         ;495
00006e  f80d0002          STRB     r0,[sp,r2]            ;495
000072  4669              MOV      r1,sp                 ;496
000074  a025              ADR      r0,|L7.268|
000076  f7fffffe          BL       __2printf
00007a  e002              B        |L7.130|
                  |L7.124|
00007c  a02c              ADR      r0,|L7.304|
00007e  f7fffffe          BL       __2printf
                  |L7.130|
000082  a82a              ADD      r0,sp,#0xa8           ;504
000084  f7fffffe          BL       f_close
000088  2200              MOVS     r2,#0                 ;507
00008a  a103              ADR      r1,|L7.152|
00008c  4610              MOV      r0,r2                 ;507
00008e  f7fffffe          BL       f_mount
000092  4604              MOV      r4,r0                 ;507
000094  bf00              NOP      
000096  e7d1              B        |L7.60|
;;;509    
                          ENDP

                  |L7.152|
000098  303a00            DCB      "0:",0
00009b  00                DCB      0
                  |L7.156|
                          DCD      FR_Table
                  |L7.160|
0000a0  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0000a4  bdbde696
0000a8  87e4bbb6
0000ac  e7b3bb  
0000af  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165,"(%s)\r\n",0
0000b3  a4b1e8b4
0000b7  a5282573
0000bb  290d0a00
0000bf  00                DCB      0
                  |L7.192|
0000c0  2f00              DCB      "/",0
0000c2  00                DCB      0
0000c3  00                DCB      0
                  |L7.196|
0000c4  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
0000c8  bc80e6a0
0000cc  b9e79bae
0000d0  e5bd95  
0000d3  e5a4b1e8          DCB      229,164,177,232,180,165,"(%s)\r\n",0
0000d7  b4a52825
0000db  73290d0a
0000df  00      
                  |L7.224|
0000e0  61726d66          DCB      "armfly.txt",0
0000e4  6c792e74
0000e8  787400  
0000eb  00                DCB      0
                  |L7.236|
0000ec  446f6e27          DCB      "Don't Find File : armfly.txt\r\n",0
0000f0  74204669
0000f4  6e642046
0000f8  696c6520
0000fc  3a206172
000100  6d666c79
000104  2e747874
000108  0d0a00  
00010b  00                DCB      0
                  |L7.268|
00010c  0d0a6172          DCB      "\r\narmfly.txt ",230,150,135,228,187,182,229,134,133,229
000110  6d666c79
000114  2e747874
000118  20e69687
00011c  e4bbb6e5
000120  8685e5  
000123  aeb9203a          DCB      174,185," : \r\n%s\r\n",0
000127  200d0a25
00012b  730d0a00
00012f  00                DCB      0
                  |L7.304|
000130  0d0a6172          DCB      "\r\narmfly.txt ",230,150,135,228,187,182,229,134,133,229
000134  6d666c79
000138  2e747874
00013c  20e69687
000140  e4bbb6e5
000144  8685e5  
000147  aeb9203a          DCB      174,185," : \r\n",0
00014b  200d0a00
00014f  00                DCB      0

                          AREA ||i.SD_ViewRootDir||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  SD_ViewRootDir PROC
;;;319    
;;;320    static void SD_ViewRootDir(void)
000000  b570              PUSH     {r4-r6,lr}
;;;321    {
000002  f5ad5d8c          SUB      sp,sp,#0x1180
;;;322    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;323    	FRESULT result;
;;;324    	FATFS fs;
;;;325    	DIR DirInf;
;;;326    	FILINFO FileInf;
;;;327    	uint32_t cnt = 0;
000006  2500              MOVS     r5,#0
;;;328    	char lfname[256];
;;;329    
;;;330    	/* 挂载文件系统 */
;;;331    	result = f_mount(&fs, "1:", 0);	
000008  2200              MOVS     r2,#0
00000a  a139              ADR      r1,|L8.240|
00000c  a854              ADD      r0,sp,#0x150
00000e  f7fffffe          BL       f_mount
000012  4604              MOV      r4,r0
;;;332    	if (result != FR_OK)
000014  b134              CBZ      r4,|L8.36|
;;;333    	{
;;;334    		printf("挂载文件系统失败 (%s)\r\n", FR_Table[result]);
000016  4837              LDR      r0,|L8.244|
000018  f8501024          LDR      r1,[r0,r4,LSL #2]
00001c  a036              ADR      r0,|L8.248|
00001e  f7fffffe          BL       __2printf
000022  e005              B        |L8.48|
                  |L8.36|
;;;335    	}
;;;336    	else
;;;337    	{
;;;338    		printf("挂载文件系统成功 (%s)\r\n", FR_Table[result]);
000024  4833              LDR      r0,|L8.244|
000026  f8501024          LDR      r1,[r0,r4,LSL #2]
00002a  a03b              ADR      r0,|L8.280|
00002c  f7fffffe          BL       __2printf
                  |L8.48|
;;;339    	}
;;;340    	
;;;341    	/* 打开根文件夹 */
;;;342    	result = f_opendir(&DirInf, "1:/"); /* 如果不带参数，则从当前目录开始 */
000030  a141              ADR      r1,|L8.312|
000032  a84b              ADD      r0,sp,#0x12c
000034  f7fffffe          BL       f_opendir
000038  4604              MOV      r4,r0
;;;343    	if (result != FR_OK)
00003a  b144              CBZ      r4,|L8.78|
;;;344    	{
;;;345    		printf("打开根目录失败 (%s)\r\n", FR_Table[result]);
00003c  482d              LDR      r0,|L8.244|
00003e  f8501024          LDR      r1,[r0,r4,LSL #2]
000042  a03e              ADR      r0,|L8.316|
000044  f7fffffe          BL       __2printf
                  |L8.72|
;;;346    		return;
;;;347    	}
;;;348    
;;;349    	/* 读取当前文件夹下的文件和目录 */
;;;350    	FileInf.lfname = lfname;
;;;351    	FileInf.lfsize = 256;
;;;352    
;;;353    	printf("属性        |  文件大小 | 短文件名 | 长文件名\r\n");
;;;354    	for (cnt = 0; ;cnt++)
;;;355    	{
;;;356    		result = f_readdir(&DirInf,&FileInf); 		/* 读取目录项，索引会自动下移 */
;;;357    		if (result != FR_OK || FileInf.fname[0] == 0)
;;;358    		{
;;;359    			break;
;;;360    		}
;;;361    
;;;362    		if (FileInf.fname[0] == '.')
;;;363    		{
;;;364    			continue;
;;;365    		}
;;;366    
;;;367    		/* 判断是文件还是子目录 */
;;;368    		if (FileInf.fattrib & AM_DIR)
;;;369    		{
;;;370    			printf("(0x%02d)目录  ", FileInf.fattrib);
;;;371    		}
;;;372    		else
;;;373    		{
;;;374    			printf("(0x%02d)文件  ", FileInf.fattrib);
;;;375    		}
;;;376    
;;;377    		/* 打印文件大小, 最大4G */
;;;378    		printf(" %10d", FileInf.fsize);
;;;379    
;;;380    		printf("  %s |", FileInf.fname);	/* 短文件名 */
;;;381    
;;;382    		printf("  %s\r\n", (char *)FileInf.lfname);	/* 长文件名 */
;;;383    	}
;;;384    
;;;385    	/* 卸载文件系统 */
;;;386    	result  = f_mount(NULL, "1:", 0);
;;;387    	if (result != FR_OK)
;;;388    	{
;;;389    		printf("卸载文件系统失败 (%s)\r\n", FR_Table[result]);
;;;390    	}
;;;391    	else
;;;392    	{
;;;393    		printf("卸载文件系统成功 (%s)\r\n", FR_Table[result]);
;;;394    	}
;;;395    }
000048  f50d5d8c          ADD      sp,sp,#0x1180
00004c  bd70              POP      {r4-r6,pc}
                  |L8.78|
00004e  a903              ADD      r1,sp,#0xc            ;350
000050  9149              STR      r1,[sp,#0x124]        ;350
000052  f44f7180          MOV      r1,#0x100             ;351
000056  914a              STR      r1,[sp,#0x128]        ;351
000058  a040              ADR      r0,|L8.348|
00005a  f7fffffe          BL       __2printf
00005e  2500              MOVS     r5,#0                 ;354
000060  bf00              NOP                            ;354
                  |L8.98|
000062  a943              ADD      r1,sp,#0x10c          ;356
000064  a84b              ADD      r0,sp,#0x12c          ;356
000066  f7fffffe          BL       f_readdir
00006a  4604              MOV      r4,r0                 ;356
00006c  b914              CBNZ     r4,|L8.116|
00006e  f89d0115          LDRB     r0,[sp,#0x115]        ;357
000072  b900              CBNZ     r0,|L8.118|
                  |L8.116|
000074  e024              B        |L8.192|
                  |L8.118|
000076  f89d0115          LDRB     r0,[sp,#0x115]        ;362
00007a  282e              CMP      r0,#0x2e              ;362
00007c  d100              BNE      |L8.128|
00007e  e01d              B        |L8.188|
                  |L8.128|
000080  f89d0114          LDRB     r0,[sp,#0x114]        ;368
000084  f0000010          AND      r0,r0,#0x10           ;368
000088  b128              CBZ      r0,|L8.150|
00008a  f89d1114          LDRB     r1,[sp,#0x114]        ;370
00008e  a043              ADR      r0,|L8.412|
000090  f7fffffe          BL       __2printf
000094  e004              B        |L8.160|
                  |L8.150|
000096  f89d1114          LDRB     r1,[sp,#0x114]        ;374
00009a  a045              ADR      r0,|L8.432|
00009c  f7fffffe          BL       __2printf
                  |L8.160|
0000a0  a048              ADR      r0,|L8.452|
0000a2  9943              LDR      r1,[sp,#0x10c]        ;378
0000a4  f7fffffe          BL       __2printf
0000a8  f20d1115          ADD      r1,sp,#0x115          ;380
0000ac  a047              ADR      r0,|L8.460|
0000ae  f7fffffe          BL       __2printf
0000b2  a048              ADR      r0,|L8.468|
0000b4  9949              LDR      r1,[sp,#0x124]        ;382
0000b6  f7fffffe          BL       __2printf
0000ba  bf00              NOP                            ;364
                  |L8.188|
0000bc  1c6d              ADDS     r5,r5,#1              ;354
0000be  e7d0              B        |L8.98|
                  |L8.192|
0000c0  bf00              NOP                            ;359
0000c2  2200              MOVS     r2,#0                 ;386
0000c4  a10a              ADR      r1,|L8.240|
0000c6  4610              MOV      r0,r2                 ;386
0000c8  f7fffffe          BL       f_mount
0000cc  4604              MOV      r4,r0                 ;386
0000ce  b134              CBZ      r4,|L8.222|
0000d0  4808              LDR      r0,|L8.244|
0000d2  f8501024          LDR      r1,[r0,r4,LSL #2]     ;389
0000d6  a041              ADR      r0,|L8.476|
0000d8  f7fffffe          BL       __2printf
0000dc  e005              B        |L8.234|
                  |L8.222|
0000de  4805              LDR      r0,|L8.244|
0000e0  f8501024          LDR      r1,[r0,r4,LSL #2]     ;393
0000e4  a045              ADR      r0,|L8.508|
0000e6  f7fffffe          BL       __2printf
                  |L8.234|
0000ea  bf00              NOP      
0000ec  e7ac              B        |L8.72|
;;;396    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L8.240|
0000f0  313a00            DCB      "1:",0
0000f3  00                DCB      0
                  |L8.244|
                          DCD      FR_Table
                  |L8.248|
0000f8  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0000fc  bdbde696
000100  87e4bbb6
000104  e7b3bb  
000107  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
00010b  a4b1e8b4
00010f  a5202825
000113  73290d0a
000117  00      
                  |L8.280|
000118  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
00011c  bdbde696
000120  87e4bbb6
000124  e7b3bb  
000127  e7bb9fe6          DCB      231,187,159,230,136,144,229,138,159," (%s)\r\n",0
00012b  8890e58a
00012f  9f202825
000133  73290d0a
000137  00      
                  |L8.312|
000138  313a2f00          DCB      "1:/",0
                  |L8.316|
00013c  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
000140  bc80e6a0
000144  b9e79bae
000148  e5bd95  
00014b  e5a4b1e8          DCB      229,164,177,232,180,165," (%s)\r\n",0
00014f  b4a52028
000153  2573290d
000157  0a00    
000159  00                DCB      0
00015a  00                DCB      0
00015b  00                DCB      0
                  |L8.348|
00015c  e5b19ee6          DCB      229,177,158,230,128,167,"        |  ",230,150,135,228,187
000160  80a72020
000164  20202020
000168  20207c20
00016c  20e69687
000170  e4bb    
000172  b6e5a4a7          DCB      182,229,164,167,229,176,143," | ",231,159,173,230,150,135
000176  e5b08f20
00017a  7c20e79f
00017e  ade69687
000182  e4bbb6e5          DCB      228,187,182,229,144,141," | ",233,149,191,230,150,135,228
000186  908d207c
00018a  20e995bf
00018e  e69687e4
000192  bbb6e590          DCB      187,182,229,144,141,"\r\n",0
000196  8d0d0a00
00019a  00                DCB      0
00019b  00                DCB      0
                  |L8.412|
00019c  28307825          DCB      "(0x%02d)",231,155,174,229,189,149,"  ",0
0001a0  30326429
0001a4  e79baee5
0001a8  bd952020
0001ac  00      
0001ad  00                DCB      0
0001ae  00                DCB      0
0001af  00                DCB      0
                  |L8.432|
0001b0  28307825          DCB      "(0x%02d)",230,150,135,228,187,182,"  ",0
0001b4  30326429
0001b8  e69687e4
0001bc  bbb62020
0001c0  00      
0001c1  00                DCB      0
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L8.452|
0001c4  20253130          DCB      " %10d",0
0001c8  6400    
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L8.460|
0001cc  20202573          DCB      "  %s |",0
0001d0  207c00  
0001d3  00                DCB      0
                  |L8.468|
0001d4  20202573          DCB      "  %s\r\n",0
0001d8  0d0a00  
0001db  00                DCB      0
                  |L8.476|
0001dc  e58db8e8          DCB      229,141,184,232,189,189,230,150,135,228,187,182,231,179,187
0001e0  bdbde696
0001e4  87e4bbb6
0001e8  e7b3bb  
0001eb  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
0001ef  a4b1e8b4
0001f3  a5202825
0001f7  73290d0a
0001fb  00      
                  |L8.508|
0001fc  e58db8e8          DCB      229,141,184,232,189,189,230,150,135,228,187,182,231,179,187
000200  bdbde696
000204  87e4bbb6
000208  e7b3bb  
00020b  e7bb9fe6          DCB      231,187,159,230,136,144,229,138,159," (%s)\r\n",0
00020f  8890e58a
000213  9f202825
000217  73290d0a
00021b  00      

                          AREA ||i.ViewRootDir||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  ViewRootDir PROC
;;;242    */
;;;243    static void ViewRootDir(void)
000000  b570              PUSH     {r4-r6,lr}
;;;244    {
000002  f5ad5d8c          SUB      sp,sp,#0x1180
;;;245    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;246    	FRESULT result;
;;;247    	FATFS fs;
;;;248    	DIR DirInf;
;;;249    	FILINFO FileInf;
;;;250    	uint32_t cnt = 0;
000006  2500              MOVS     r5,#0
;;;251    	char lfname[256];
;;;252    
;;;253    	/* 挂载文件系统 */
;;;254    	result = f_mount(&fs, "0:", 0);	
000008  2200              MOVS     r2,#0
00000a  a139              ADR      r1,|L9.240|
00000c  a854              ADD      r0,sp,#0x150
00000e  f7fffffe          BL       f_mount
000012  4604              MOV      r4,r0
;;;255    	if (result != FR_OK)
000014  b134              CBZ      r4,|L9.36|
;;;256    	{
;;;257    		printf("挂载文件系统失败 (%s)\r\n", FR_Table[result]);
000016  4837              LDR      r0,|L9.244|
000018  f8501024          LDR      r1,[r0,r4,LSL #2]
00001c  a036              ADR      r0,|L9.248|
00001e  f7fffffe          BL       __2printf
000022  e005              B        |L9.48|
                  |L9.36|
;;;258    	}
;;;259    	else
;;;260    	{
;;;261    		printf("挂载文件系统成功 (%s)\r\n", FR_Table[result]);
000024  4833              LDR      r0,|L9.244|
000026  f8501024          LDR      r1,[r0,r4,LSL #2]
00002a  a03b              ADR      r0,|L9.280|
00002c  f7fffffe          BL       __2printf
                  |L9.48|
;;;262    	}
;;;263    	
;;;264    	/* 打开根文件夹 */
;;;265    	result = f_opendir(&DirInf, "0:/"); /* 如果不带参数，则从当前目录开始 */
000030  a141              ADR      r1,|L9.312|
000032  a84b              ADD      r0,sp,#0x12c
000034  f7fffffe          BL       f_opendir
000038  4604              MOV      r4,r0
;;;266    	if (result != FR_OK)
00003a  b144              CBZ      r4,|L9.78|
;;;267    	{
;;;268    		printf("打开根目录失败 (%s)\r\n", FR_Table[result]);
00003c  482d              LDR      r0,|L9.244|
00003e  f8501024          LDR      r1,[r0,r4,LSL #2]
000042  a03e              ADR      r0,|L9.316|
000044  f7fffffe          BL       __2printf
                  |L9.72|
;;;269    		return;
;;;270    	}
;;;271    
;;;272    	/* 读取当前文件夹下的文件和目录 */
;;;273    	FileInf.lfname = lfname;
;;;274    	FileInf.lfsize = 256;
;;;275    
;;;276    	printf("属性        |  文件大小 | 短文件名 | 长文件名\r\n");
;;;277    	for (cnt = 0; ;cnt++)
;;;278    	{
;;;279    		result = f_readdir(&DirInf,&FileInf); 		/* 读取目录项，索引会自动下移 */
;;;280    		if (result != FR_OK || FileInf.fname[0] == 0)
;;;281    		{
;;;282    			break;
;;;283    		}
;;;284    
;;;285    		if (FileInf.fname[0] == '.')
;;;286    		{
;;;287    			continue;
;;;288    		}
;;;289    
;;;290    		/* 判断是文件还是子目录 */
;;;291    		if (FileInf.fattrib & AM_DIR)
;;;292    		{
;;;293    			printf("(0x%02d)目录  ", FileInf.fattrib);
;;;294    		}
;;;295    		else
;;;296    		{
;;;297    			printf("(0x%02d)文件  ", FileInf.fattrib);
;;;298    		}
;;;299    
;;;300    		/* 打印文件大小, 最大4G */
;;;301    		printf(" %10d", FileInf.fsize);
;;;302    
;;;303    		printf("  %s |", FileInf.fname);	/* 短文件名 */
;;;304    
;;;305    		printf("  %s\r\n", (char *)FileInf.lfname);	/* 长文件名 */
;;;306    	}
;;;307    
;;;308    	/* 卸载文件系统 */
;;;309    	result  = f_mount(NULL, "0:", 0);
;;;310    	if (result != FR_OK)
;;;311    	{
;;;312    		printf("卸载文件系统失败 (%s)\r\n", FR_Table[result]);
;;;313    	}
;;;314    	else
;;;315    	{
;;;316    		printf("卸载文件系统成功 (%s)\r\n", FR_Table[result]);
;;;317    	}
;;;318    }
000048  f50d5d8c          ADD      sp,sp,#0x1180
00004c  bd70              POP      {r4-r6,pc}
                  |L9.78|
00004e  a903              ADD      r1,sp,#0xc            ;273
000050  9149              STR      r1,[sp,#0x124]        ;273
000052  f44f7180          MOV      r1,#0x100             ;274
000056  914a              STR      r1,[sp,#0x128]        ;274
000058  a040              ADR      r0,|L9.348|
00005a  f7fffffe          BL       __2printf
00005e  2500              MOVS     r5,#0                 ;277
000060  bf00              NOP                            ;277
                  |L9.98|
000062  a943              ADD      r1,sp,#0x10c          ;279
000064  a84b              ADD      r0,sp,#0x12c          ;279
000066  f7fffffe          BL       f_readdir
00006a  4604              MOV      r4,r0                 ;279
00006c  b914              CBNZ     r4,|L9.116|
00006e  f89d0115          LDRB     r0,[sp,#0x115]        ;280
000072  b900              CBNZ     r0,|L9.118|
                  |L9.116|
000074  e024              B        |L9.192|
                  |L9.118|
000076  f89d0115          LDRB     r0,[sp,#0x115]        ;285
00007a  282e              CMP      r0,#0x2e              ;285
00007c  d100              BNE      |L9.128|
00007e  e01d              B        |L9.188|
                  |L9.128|
000080  f89d0114          LDRB     r0,[sp,#0x114]        ;291
000084  f0000010          AND      r0,r0,#0x10           ;291
000088  b128              CBZ      r0,|L9.150|
00008a  f89d1114          LDRB     r1,[sp,#0x114]        ;293
00008e  a043              ADR      r0,|L9.412|
000090  f7fffffe          BL       __2printf
000094  e004              B        |L9.160|
                  |L9.150|
000096  f89d1114          LDRB     r1,[sp,#0x114]        ;297
00009a  a045              ADR      r0,|L9.432|
00009c  f7fffffe          BL       __2printf
                  |L9.160|
0000a0  a048              ADR      r0,|L9.452|
0000a2  9943              LDR      r1,[sp,#0x10c]        ;301
0000a4  f7fffffe          BL       __2printf
0000a8  f20d1115          ADD      r1,sp,#0x115          ;303
0000ac  a047              ADR      r0,|L9.460|
0000ae  f7fffffe          BL       __2printf
0000b2  a048              ADR      r0,|L9.468|
0000b4  9949              LDR      r1,[sp,#0x124]        ;305
0000b6  f7fffffe          BL       __2printf
0000ba  bf00              NOP                            ;287
                  |L9.188|
0000bc  1c6d              ADDS     r5,r5,#1              ;277
0000be  e7d0              B        |L9.98|
                  |L9.192|
0000c0  bf00              NOP                            ;282
0000c2  2200              MOVS     r2,#0                 ;309
0000c4  a10a              ADR      r1,|L9.240|
0000c6  4610              MOV      r0,r2                 ;309
0000c8  f7fffffe          BL       f_mount
0000cc  4604              MOV      r4,r0                 ;309
0000ce  b134              CBZ      r4,|L9.222|
0000d0  4808              LDR      r0,|L9.244|
0000d2  f8501024          LDR      r1,[r0,r4,LSL #2]     ;312
0000d6  a041              ADR      r0,|L9.476|
0000d8  f7fffffe          BL       __2printf
0000dc  e005              B        |L9.234|
                  |L9.222|
0000de  4805              LDR      r0,|L9.244|
0000e0  f8501024          LDR      r1,[r0,r4,LSL #2]     ;316
0000e4  a045              ADR      r0,|L9.508|
0000e6  f7fffffe          BL       __2printf
                  |L9.234|
0000ea  bf00              NOP      
0000ec  e7ac              B        |L9.72|
;;;319    
                          ENDP

0000ee  0000              DCW      0x0000
                  |L9.240|
0000f0  303a00            DCB      "0:",0
0000f3  00                DCB      0
                  |L9.244|
                          DCD      FR_Table
                  |L9.248|
0000f8  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0000fc  bdbde696
000100  87e4bbb6
000104  e7b3bb  
000107  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
00010b  a4b1e8b4
00010f  a5202825
000113  73290d0a
000117  00      
                  |L9.280|
000118  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
00011c  bdbde696
000120  87e4bbb6
000124  e7b3bb  
000127  e7bb9fe6          DCB      231,187,159,230,136,144,229,138,159," (%s)\r\n",0
00012b  8890e58a
00012f  9f202825
000133  73290d0a
000137  00      
                  |L9.312|
000138  303a2f00          DCB      "0:/",0
                  |L9.316|
00013c  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
000140  bc80e6a0
000144  b9e79bae
000148  e5bd95  
00014b  e5a4b1e8          DCB      229,164,177,232,180,165," (%s)\r\n",0
00014f  b4a52028
000153  2573290d
000157  0a00    
000159  00                DCB      0
00015a  00                DCB      0
00015b  00                DCB      0
                  |L9.348|
00015c  e5b19ee6          DCB      229,177,158,230,128,167,"        |  ",230,150,135,228,187
000160  80a72020
000164  20202020
000168  20207c20
00016c  20e69687
000170  e4bb    
000172  b6e5a4a7          DCB      182,229,164,167,229,176,143," | ",231,159,173,230,150,135
000176  e5b08f20
00017a  7c20e79f
00017e  ade69687
000182  e4bbb6e5          DCB      228,187,182,229,144,141," | ",233,149,191,230,150,135,228
000186  908d207c
00018a  20e995bf
00018e  e69687e4
000192  bbb6e590          DCB      187,182,229,144,141,"\r\n",0
000196  8d0d0a00
00019a  00                DCB      0
00019b  00                DCB      0
                  |L9.412|
00019c  28307825          DCB      "(0x%02d)",231,155,174,229,189,149,"  ",0
0001a0  30326429
0001a4  e79baee5
0001a8  bd952020
0001ac  00      
0001ad  00                DCB      0
0001ae  00                DCB      0
0001af  00                DCB      0
                  |L9.432|
0001b0  28307825          DCB      "(0x%02d)",230,150,135,228,187,182,"  ",0
0001b4  30326429
0001b8  e69687e4
0001bc  bbb62020
0001c0  00      
0001c1  00                DCB      0
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L9.452|
0001c4  20253130          DCB      " %10d",0
0001c8  6400    
0001ca  00                DCB      0
0001cb  00                DCB      0
                  |L9.460|
0001cc  20202573          DCB      "  %s |",0
0001d0  207c00  
0001d3  00                DCB      0
                  |L9.468|
0001d4  20202573          DCB      "  %s\r\n",0
0001d8  0d0a00  
0001db  00                DCB      0
                  |L9.476|
0001dc  e58db8e8          DCB      229,141,184,232,189,189,230,150,135,228,187,182,231,179,187
0001e0  bdbde696
0001e4  87e4bbb6
0001e8  e7b3bb  
0001eb  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
0001ef  a4b1e8b4
0001f3  a5202825
0001f7  73290d0a
0001fb  00      
                  |L9.508|
0001fc  e58db8e8          DCB      229,141,184,232,189,189,230,150,135,228,187,182,231,179,187
000200  bdbde696
000204  87e4bbb6
000208  e7b3bb  
00020b  e7bb9fe6          DCB      231,187,159,230,136,144,229,138,159," (%s)\r\n",0
00020f  8890e58a
000213  9f202825
000217  73290d0a
00021b  00      

                          AREA ||i.WriteFileTest||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                  WriteFileTest PROC
;;;721    */
;;;722    static void WriteFileTest(void)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;723    {
000004  f5ad5d03          SUB      sp,sp,#0x20c0
;;;724    	/* 本函数使用的局部变量占用较多，请修改启动文件，保证堆栈空间够用 */
;;;725    	FRESULT result;
;;;726    	FATFS fs;
;;;727    	FIL file;
;;;728    	DIR DirInf;
;;;729    	uint32_t bw;
;;;730    	uint32_t i,k;
;;;731    	uint32_t runtime1,runtime2,timelen;
;;;732    	uint8_t err = 0;
000008  f04f0a00          MOV      r10,#0
;;;733    	char TestFileName[13];
;;;734    	static uint8_t s_ucTestSn = 0;
;;;735    
;;;736    	for (i = 0; i < sizeof(g_TestBuf); i++)
00000c  2400              MOVS     r4,#0
00000e  e005              B        |L10.28|
                  |L10.16|
;;;737    	{
;;;738    		g_TestBuf[i] = (i / 512) + '0';
000010  2030              MOVS     r0,#0x30
000012  eb002054          ADD      r0,r0,r4,LSR #9
000016  4970              LDR      r1,|L10.472|
000018  5508              STRB     r0,[r1,r4]
00001a  1c64              ADDS     r4,r4,#1              ;736
                  |L10.28|
00001c  f5b45f80          CMP      r4,#0x1000            ;736
000020  d3f6              BCC      |L10.16|
;;;739    	}
;;;740    
;;;741      	/* 挂载文件系统 */
;;;742    	result = f_mount(&fs, "0:", 0);			/* Mount a logical drive */
000022  2200              MOVS     r2,#0
000024  a16d              ADR      r1,|L10.476|
000026  f2410090          MOV      r0,#0x1090
00002a  4468              ADD      r0,r0,sp
00002c  f7fffffe          BL       f_mount
000030  4605              MOV      r5,r0
;;;743    	if (result != FR_OK)
000032  b12d              CBZ      r5,|L10.64|
;;;744    	{
;;;745    		printf("挂载文件系统失败 (%s)\r\n",  FR_Table[result]);
000034  486a              LDR      r0,|L10.480|
000036  f8501025          LDR      r1,[r0,r5,LSL #2]
00003a  a06a              ADR      r0,|L10.484|
00003c  f7fffffe          BL       __2printf
                  |L10.64|
;;;746    	}
;;;747    
;;;748    	/* 打开根文件夹 */
;;;749    	result = f_opendir(&DirInf, "/"); /* 如果不带参数，则从当前目录开始 */
000040  a170              ADR      r1,|L10.516|
000042  a811              ADD      r0,sp,#0x44
000044  f7fffffe          BL       f_opendir
000048  4605              MOV      r5,r0
;;;750    	if (result != FR_OK)
00004a  b14d              CBZ      r5,|L10.96|
;;;751    	{
;;;752    		printf("打开根目录失败 (%s)\r\n",  FR_Table[result]);
00004c  4864              LDR      r0,|L10.480|
00004e  f8501025          LDR      r1,[r0,r5,LSL #2]
000052  a06d              ADR      r0,|L10.520|
000054  f7fffffe          BL       __2printf
                  |L10.88|
;;;753    		return;
;;;754    	}
;;;755    
;;;756    	/* 打开文件 */
;;;757    	sprintf(TestFileName, "Speed%02d.txt", s_ucTestSn++);		/* 每写1次，序号递增 */
;;;758    	result = f_open(&file, TestFileName, FA_CREATE_ALWAYS | FA_WRITE);
;;;759    
;;;760    	/* 写一串数据 */
;;;761    	printf("开始写文件%s %dKB ...\r\n", TestFileName, TEST_FILE_LEN / 1024);
;;;762    	runtime1 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;763    	for (i = 0; i < TEST_FILE_LEN / BUF_SIZE; i++)
;;;764    	{
;;;765    		result = f_write(&file, g_TestBuf, sizeof(g_TestBuf), &bw);
;;;766    		if (result == FR_OK)
;;;767    		{
;;;768    			if (((i + 1) % 8) == 0)
;;;769    			{
;;;770    				printf(".");
;;;771    			}
;;;772    		}
;;;773    		else
;;;774    		{
;;;775    			err = 1;
;;;776    			printf("%s文件写失败\r\n", TestFileName);
;;;777    			break;
;;;778    		}
;;;779    	}
;;;780    	runtime2 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;781    
;;;782    	if (err == 0)
;;;783    	{
;;;784    		timelen = (runtime2 - runtime1);
;;;785    		printf("\r\n  写耗时 : %dms   平均写速度 : %dB/S (%dKB/S)\r\n",
;;;786    			timelen,
;;;787    			(TEST_FILE_LEN * 1000) / timelen,
;;;788    			((TEST_FILE_LEN / 1024) * 1000) / timelen);
;;;789    	}
;;;790    
;;;791    	f_close(&file);		/* 关闭文件*/
;;;792    
;;;793    
;;;794    	/* 开始读文件测试 */
;;;795    	result = f_open(&file, TestFileName, FA_OPEN_EXISTING | FA_READ);
;;;796    	if (result !=  FR_OK)
;;;797    	{
;;;798    		printf("没有找到文件: %s\r\n", TestFileName);
;;;799    		return;
;;;800    	}
;;;801    
;;;802    	printf("开始读文件 %dKB ...\r\n", TEST_FILE_LEN / 1024);
;;;803    	runtime1 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;804    	for (i = 0; i < TEST_FILE_LEN / BUF_SIZE; i++)
;;;805    	{
;;;806    		result = f_read(&file, g_TestBuf, sizeof(g_TestBuf), &bw);
;;;807    		if (result == FR_OK)
;;;808    		{
;;;809    			if (((i + 1) % 8) == 0)
;;;810    			{
;;;811    				printf(".");
;;;812    			}
;;;813    
;;;814    			/* 比较写入的数据是否正确，此语句会导致读卡速度结果降低到 3.5MBytes/S */
;;;815    			for (k = 0; k < sizeof(g_TestBuf); k++)
;;;816    			{
;;;817    				if (g_TestBuf[k] != (k / 512) + '0')
;;;818    				{
;;;819    				  	err = 1;
;;;820    					printf("Speed1.txt 文件读成功，但是数据出错\r\n");
;;;821    					break;
;;;822    				}
;;;823    			}
;;;824    			if (err == 1)
;;;825    			{
;;;826    				break;
;;;827    			}
;;;828    		}
;;;829    		else
;;;830    		{
;;;831    			err = 1;
;;;832    			printf("Speed1.txt 文件读失败\r\n");
;;;833    			break;
;;;834    		}
;;;835    	}
;;;836    	runtime2 = bsp_GetRunTime();	/* 读取系统运行时间 */
;;;837    
;;;838    	if (err == 0)
;;;839    	{
;;;840    		timelen = (runtime2 - runtime1);
;;;841    		printf("\r\n  读耗时 : %dms   平均读速度 : %dB/S (%dKB/S)\r\n", timelen,
;;;842    			(TEST_FILE_LEN * 1000) / timelen, ((TEST_FILE_LEN / 1024) * 1000) / timelen);
;;;843    	}
;;;844    
;;;845    	/* 关闭文件*/
;;;846    	f_close(&file);
;;;847    
;;;848    	/* 卸载文件系统 */
;;;849    	result  = f_mount(NULL, "0:", 0);
;;;850    }
000058  f50d5d03          ADD      sp,sp,#0x20c0
00005c  e8bd9ff0          POP      {r4-r12,pc}
                  |L10.96|
000060  4871              LDR      r0,|L10.552|
000062  7802              LDRB     r2,[r0,#0]            ;757  ; s_ucTestSn
000064  7800              LDRB     r0,[r0,#0]            ;757  ; s_ucTestSn
000066  1c40              ADDS     r0,r0,#1              ;757
000068  4b6f              LDR      r3,|L10.552|
00006a  7018              STRB     r0,[r3,#0]            ;757
00006c  a16f              ADR      r1,|L10.556|
00006e  a80c              ADD      r0,sp,#0x30           ;757
000070  f7fffffe          BL       __2sprintf
000074  220a              MOVS     r2,#0xa               ;758
000076  a90c              ADD      r1,sp,#0x30           ;758
000078  a81a              ADD      r0,sp,#0x68           ;758
00007a  f7fffffe          BL       f_open
00007e  4605              MOV      r5,r0                 ;758
000080  f44f6200          MOV      r2,#0x800             ;761
000084  a90c              ADD      r1,sp,#0x30           ;761
000086  a06d              ADR      r0,|L10.572|
000088  f7fffffe          BL       __2printf
00008c  f7fffffe          BL       bsp_GetRunTime
000090  4680              MOV      r8,r0                 ;762
000092  2400              MOVS     r4,#0                 ;763
000094  e018              B        |L10.200|
                  |L10.150|
000096  ab10              ADD      r3,sp,#0x40           ;765
000098  f44f5280          MOV      r2,#0x1000            ;765
00009c  494e              LDR      r1,|L10.472|
00009e  a81a              ADD      r0,sp,#0x68           ;765
0000a0  f7fffffe          BL       f_write
0000a4  4605              MOV      r5,r0                 ;765
0000a6  b93d              CBNZ     r5,|L10.184|
0000a8  1c60              ADDS     r0,r4,#1              ;768
0000aa  f0000007          AND      r0,r0,#7              ;768
0000ae  b950              CBNZ     r0,|L10.198|
0000b0  a06a              ADR      r0,|L10.604|
0000b2  f7fffffe          BL       __2printf
0000b6  e006              B        |L10.198|
                  |L10.184|
0000b8  f04f0a01          MOV      r10,#1                ;775
0000bc  a90c              ADD      r1,sp,#0x30           ;776
0000be  a068              ADR      r0,|L10.608|
0000c0  f7fffffe          BL       __2printf
0000c4  e003              B        |L10.206|
                  |L10.198|
0000c6  1c64              ADDS     r4,r4,#1              ;763
                  |L10.200|
0000c8  f5b47f00          CMP      r4,#0x200             ;763
0000cc  d3e3              BCC      |L10.150|
                  |L10.206|
0000ce  bf00              NOP                            ;777
0000d0  f7fffffe          BL       bsp_GetRunTime
0000d4  4681              MOV      r9,r0                 ;780
0000d6  f1ba0f00          CMP      r10,#0                ;782
0000da  d10f              BNE      |L10.252|
0000dc  eba90608          SUB      r6,r9,r8              ;784
0000e0  f44f10fa          MOV      r0,#0x1f4000          ;785
0000e4  fbb0fbf6          UDIV     r11,r0,r6             ;785
0000e8  0280              LSLS     r0,r0,#10             ;785
0000ea  fbb0f1f6          UDIV     r1,r0,r6              ;785
0000ee  465b              MOV      r3,r11                ;785
0000f0  460a              MOV      r2,r1                 ;785
0000f2  910b              STR      r1,[sp,#0x2c]         ;785
0000f4  4631              MOV      r1,r6                 ;785
0000f6  a060              ADR      r0,|L10.632|
0000f8  f7fffffe          BL       __2printf
                  |L10.252|
0000fc  a81a              ADD      r0,sp,#0x68           ;791
0000fe  f7fffffe          BL       f_close
000102  2201              MOVS     r2,#1                 ;795
000104  a90c              ADD      r1,sp,#0x30           ;795
000106  a81a              ADD      r0,sp,#0x68           ;795
000108  f7fffffe          BL       f_open
00010c  4605              MOV      r5,r0                 ;795
00010e  b125              CBZ      r5,|L10.282|
000110  a90c              ADD      r1,sp,#0x30           ;798
000112  a068              ADR      r0,|L10.692|
000114  f7fffffe          BL       __2printf
000118  e79e              B        |L10.88|
                  |L10.282|
00011a  f44f6100          MOV      r1,#0x800             ;802
00011e  a06c              ADR      r0,|L10.720|
000120  f7fffffe          BL       __2printf
000124  f7fffffe          BL       bsp_GetRunTime
000128  4680              MOV      r8,r0                 ;803
00012a  2400              MOVS     r4,#0                 ;804
00012c  e02e              B        |L10.396|
                  |L10.302|
00012e  ab10              ADD      r3,sp,#0x40           ;806
000130  f44f5280          MOV      r2,#0x1000            ;806
000134  4928              LDR      r1,|L10.472|
000136  a81a              ADD      r0,sp,#0x68           ;806
000138  f7fffffe          BL       f_read
00013c  4605              MOV      r5,r0                 ;806
00013e  b9f5              CBNZ     r5,|L10.382|
000140  1c60              ADDS     r0,r4,#1              ;809
000142  f0000007          AND      r0,r0,#7              ;809
000146  b910              CBNZ     r0,|L10.334|
000148  a044              ADR      r0,|L10.604|
00014a  f7fffffe          BL       __2printf
                  |L10.334|
00014e  2700              MOVS     r7,#0                 ;815
000150  e00d              B        |L10.366|
                  |L10.338|
000152  4821              LDR      r0,|L10.472|
000154  5dc0              LDRB     r0,[r0,r7]            ;817
000156  2130              MOVS     r1,#0x30              ;817
000158  eb012157          ADD      r1,r1,r7,LSR #9       ;817
00015c  4288              CMP      r0,r1                 ;817
00015e  d005              BEQ      |L10.364|
000160  f04f0a01          MOV      r10,#1                ;819
000164  a061              ADR      r0,|L10.748|
000166  f7fffffe          BL       __2printf
00016a  e003              B        |L10.372|
                  |L10.364|
00016c  1c7f              ADDS     r7,r7,#1              ;815
                  |L10.366|
00016e  f5b75f80          CMP      r7,#0x1000            ;815
000172  d3ee              BCC      |L10.338|
                  |L10.372|
000174  bf00              NOP                            ;821
000176  f1ba0f01          CMP      r10,#1                ;824
00017a  d106              BNE      |L10.394|
00017c  e009              B        |L10.402|
                  |L10.382|
00017e  f04f0a01          MOV      r10,#1                ;831
000182  a067              ADR      r0,|L10.800|
000184  f7fffffe          BL       __2printf
000188  e003              B        |L10.402|
                  |L10.394|
00018a  1c64              ADDS     r4,r4,#1              ;804
                  |L10.396|
00018c  f5b47f00          CMP      r4,#0x200             ;804
000190  d3cd              BCC      |L10.302|
                  |L10.402|
000192  bf00              NOP                            ;826
000194  f7fffffe          BL       bsp_GetRunTime
000198  4681              MOV      r9,r0                 ;836
00019a  f1ba0f00          CMP      r10,#0                ;838
00019e  d10f              BNE      |L10.448|
0001a0  eba90608          SUB      r6,r9,r8              ;840
0001a4  f44f10fa          MOV      r0,#0x1f4000          ;841
0001a8  fbb0fbf6          UDIV     r11,r0,r6             ;841
0001ac  0280              LSLS     r0,r0,#10             ;841
0001ae  fbb0f1f6          UDIV     r1,r0,r6              ;841
0001b2  465b              MOV      r3,r11                ;841
0001b4  460a              MOV      r2,r1                 ;841
0001b6  910b              STR      r1,[sp,#0x2c]         ;841
0001b8  4631              MOV      r1,r6                 ;841
0001ba  a061              ADR      r0,|L10.832|
0001bc  f7fffffe          BL       __2printf
                  |L10.448|
0001c0  a81a              ADD      r0,sp,#0x68           ;846
0001c2  f7fffffe          BL       f_close
0001c6  2200              MOVS     r2,#0                 ;849
0001c8  a104              ADR      r1,|L10.476|
0001ca  4610              MOV      r0,r2                 ;849
0001cc  f7fffffe          BL       f_mount
0001d0  4605              MOV      r5,r0                 ;849
0001d2  bf00              NOP      
0001d4  e740              B        |L10.88|
;;;851    
                          ENDP

0001d6  0000              DCW      0x0000
                  |L10.472|
                          DCD      g_TestBuf
                  |L10.476|
0001dc  303a00            DCB      "0:",0
0001df  00                DCB      0
                  |L10.480|
                          DCD      FR_Table
                  |L10.484|
0001e4  e68c82e8          DCB      230,140,130,232,189,189,230,150,135,228,187,182,231,179,187
0001e8  bdbde696
0001ec  87e4bbb6
0001f0  e7b3bb  
0001f3  e7bb9fe5          DCB      231,187,159,229,164,177,232,180,165," (%s)\r\n",0
0001f7  a4b1e8b4
0001fb  a5202825
0001ff  73290d0a
000203  00      
                  |L10.516|
000204  2f00              DCB      "/",0
000206  00                DCB      0
000207  00                DCB      0
                  |L10.520|
000208  e68993e5          DCB      230,137,147,229,188,128,230,160,185,231,155,174,229,189,149
00020c  bc80e6a0
000210  b9e79bae
000214  e5bd95  
000217  e5a4b1e8          DCB      229,164,177,232,180,165," (%s)\r\n",0
00021b  b4a52028
00021f  2573290d
000223  0a00    
000225  00                DCB      0
000226  00                DCB      0
000227  00                DCB      0
                  |L10.552|
                          DCD      s_ucTestSn
                  |L10.556|
00022c  53706565          DCB      "Speed%02d.txt",0
000230  64253032
000234  642e7478
000238  7400    
00023a  00                DCB      0
00023b  00                DCB      0
                  |L10.572|
00023c  e5bc80e5          DCB      229,188,128,229,167,139,229,134,153,230,150,135,228,187,182
000240  a78be586
000244  99e69687
000248  e4bbb6  
00024b  25732025          DCB      "%s %dKB ...\r\n",0
00024f  644b4220
000253  2e2e2e0d
000257  0a00    
000259  00                DCB      0
00025a  00                DCB      0
00025b  00                DCB      0
                  |L10.604|
00025c  2e00              DCB      ".",0
00025e  00                DCB      0
00025f  00                DCB      0
                  |L10.608|
000260  2573e696          DCB      "%s",230,150,135,228,187,182,229,134,153,229,164,177,232
000264  87e4bbb6
000268  e58699e5
00026c  a4b1e8  
00026f  b4a55c72          DCB      180,165,"\\r\n",0
000273  0a00    
000275  00                DCB      0
000276  00                DCB      0
000277  00                DCB      0
                  |L10.632|
000278  0d0a2020          DCB      "\r\n  ",229,134,153,232,128,151,230,151,182," : %dms   "
00027c  e58699e8
000280  8097e697
000284  b6203a20
000288  25646d73
00028c  202020  
00028f  e5b9b3e5          DCB      229,185,179,229,157,135,229,134,153,233,128,159,229,186,166
000293  9d87e586
000297  99e9809f
00029b  e5baa6  
00029e  203a2025          DCB      " : %dB/S (%dKB/S)\r\n",0
0002a2  64422f53
0002a6  20282564
0002aa  4b422f53
0002ae  290d0a00
0002b2  00                DCB      0
0002b3  00                DCB      0
                  |L10.692|
0002b4  e6b2a1e6          DCB      230,178,161,230,156,137,230,137,190,229,136,176,230,150,135
0002b8  9c89e689
0002bc  bee588b0
0002c0  e69687  
0002c3  e4bbb63a          DCB      228,187,182,": %s\r\n",0
0002c7  2025730d
0002cb  0a00    
0002cd  00                DCB      0
0002ce  00                DCB      0
0002cf  00                DCB      0
                  |L10.720|
0002d0  e5bc80e5          DCB      229,188,128,229,167,139,232,175,187,230,150,135,228,187,182
0002d4  a78be8af
0002d8  bbe69687
0002dc  e4bbb6  
0002df  2025644b          DCB      " %dKB ...\r\n",0
0002e3  42202e2e
0002e7  2e0d0a00
0002eb  00                DCB      0
                  |L10.748|
0002ec  53706565          DCB      "Speed1.txt ",230,150,135,228,187,182,232,175,187,230,136
0002f0  64312e74
0002f4  787420e6
0002f8  9687e4bb
0002fc  b6e8afbb
000300  e688    
000302  90e58a9f          DCB      144,229,138,159,239,188,140,228,189,134,230,152,175,230,149
000306  efbc8ce4
00030a  bd86e698
00030e  afe695  
000311  b0e68dae          DCB      176,230,141,174,229,135,186,233,148,153,"\r\n",0
000315  e587bae9
000319  94990d0a
00031d  00      
00031e  00                DCB      0
00031f  00                DCB      0
                  |L10.800|
000320  53706565          DCB      "Speed1.txt ",230,150,135,228,187,182,232,175,187,229,164
000324  64312e74
000328  787420e6
00032c  9687e4bb
000330  b6e8afbb
000334  e5a4    
000336  b1e8b4a5          DCB      177,232,180,165,"\\r\n",0
00033a  5c720a00
00033e  00                DCB      0
00033f  00                DCB      0
                  |L10.832|
000340  0d0a2020          DCB      "\r\n  ",232,175,187,232,128,151,230,151,182," : %dms   "
000344  e8afbbe8
000348  8097e697
00034c  b6203a20
000350  25646d73
000354  202020  
000357  e5b9b3e5          DCB      229,185,179,229,157,135,232,175,187,233,128,159,229,186,166
00035b  9d87e8af
00035f  bbe9809f
000363  e5baa6  
000366  203a2025          DCB      " : %dB/S (%dKB/S)\r\n",0
00036a  64422f53
00036e  20282564
000372  4b422f53
000376  290d0a00
00037a  00                DCB      0
00037b  00                DCB      0

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  g_TestBuf
                          %        4096

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  46525f4f          DCB      "FR_OK",0
000004  4b00    
000006  00                DCB      0
000007  00                DCB      0
000008  46525f44          DCB      "FR_DISK_ERR",0
00000c  49534b5f
000010  45525200
000014  46525f49          DCB      "FR_INT_ERR",0
000018  4e545f45
00001c  525200  
00001f  00                DCB      0
000020  46525f4e          DCB      "FR_NOT_READY",0
000024  4f545f52
000028  45414459
00002c  00      
00002d  00                DCB      0
00002e  00                DCB      0
00002f  00                DCB      0
000030  46525f4e          DCB      "FR_NO_FILE",0
000034  4f5f4649
000038  4c4500  
00003b  00                DCB      0
00003c  46525f4e          DCB      "FR_NO_PATH",0
000040  4f5f5041
000044  544800  
000047  00                DCB      0
000048  46525f49          DCB      "FR_INVALID_NAME",0
00004c  4e56414c
000050  49445f4e
000054  414d4500
000058  46525f44          DCB      "FR_DENIED",0
00005c  454e4945
000060  4400    
000062  00                DCB      0
000063  00                DCB      0
000064  46525f45          DCB      "FR_EXIST",0
000068  58495354
00006c  00      
00006d  00                DCB      0
00006e  00                DCB      0
00006f  00                DCB      0
000070  46525f49          DCB      "FR_INVALID_OBJECT",0
000074  4e56414c
000078  49445f4f
00007c  424a4543
000080  5400    
000082  00                DCB      0
000083  00                DCB      0
000084  46525f57          DCB      "FR_WRITE_PROTECTED",0
000088  52495445
00008c  5f50524f
000090  54454354
000094  454400  
000097  00                DCB      0
000098  46525f49          DCB      "FR_INVALID_DRIVE",0
00009c  4e56414c
0000a0  49445f44
0000a4  52495645
0000a8  00      
0000a9  00                DCB      0
0000aa  00                DCB      0
0000ab  00                DCB      0
0000ac  46525f4e          DCB      "FR_NOT_ENABLED",0
0000b0  4f545f45
0000b4  4e41424c
0000b8  454400  
0000bb  00                DCB      0
0000bc  46525f4e          DCB      "FR_NO_FILESYSTEM",0
0000c0  4f5f4649
0000c4  4c455359
0000c8  5354454d
0000cc  00      
0000cd  00                DCB      0
0000ce  00                DCB      0
0000cf  00                DCB      0
0000d0  46525f4d          DCB      "FR_MKFS_ABORTED",0
0000d4  4b46535f
0000d8  41424f52
0000dc  54454400
0000e0  46525f54          DCB      "FR_TIMEOUT",0
0000e4  494d454f
0000e8  555400  
0000eb  00                DCB      0
0000ec  46525f4c          DCB      "FR_LOCKED",0
0000f0  4f434b45
0000f4  4400    
0000f6  00                DCB      0
0000f7  00                DCB      0
0000f8  46525f4e          DCB      "FR_NOT_ENOUGH_CORE",0
0000fc  4f545f45
000100  4e4f5547
000104  485f434f
000108  524500  
00010b  00                DCB      0
00010c  46525f54          DCB      "FR_TOO_MANY_OPEN_FILES",0
000110  4f4f5f4d
000114  414e595f
000118  4f50454e
00011c  5f46494c
000120  455300  
000123  00                DCB      0
000124  46525f49          DCB      "FR_INVALID_PARAMETER",0
000128  4e56414c
00012c  49445f50
000130  4152414d
000134  45544552
000138  00      
000139  00                DCB      0
00013a  00                DCB      0
00013b  00                DCB      0
00013c  e588a0e9          DCB      229,136,160,233,153,164,"Dir1",229,164,177,232,180,165,"("
000140  99a44469
000144  7231e5a4
000148  b1e8b4a5
00014c  28      
00014d  e99499e8          DCB      233,148,153,232,175,175,228,187,163,231,160,129," = %s) "
000151  afafe4bb
000155  a3e7a081
000159  203d2025
00015d  732920  
000160  e69687e4          DCB      230,150,135,228,187,182,229,143,170,232,175,187,230,136,150
000164  bbb6e58f
000168  aae8afbb
00016c  e68896  
00016f  e79baee5          DCB      231,155,174,229,189,149,233,157,158,231,169,186,"\\r\n",0
000173  bd95e99d
000177  9ee7a9ba
00017b  5c720a00
00017f  00                DCB      0
000180  e588a0e9          DCB      229,136,160,233,153,164,229,173,144,231,155,174,229,189,149
000184  99a4e5ad
000188  90e79bae
00018c  e5bd95  
00018f  2f446972          DCB      "/Dir1/Dir1_1",229,164,177,232,180,165,"(",233,148,153,232
000193  312f4469
000197  72315f31
00019b  e5a4b1e8
00019f  b4a528e9
0001a3  9499e8  
0001a6  afafe4bb          DCB      175,175,228,187,163,231,160,129," = %s) ",230,150,135,228
0001aa  a3e7a081
0001ae  203d2025
0001b2  732920e6
0001b6  9687e4  
0001b9  bbb6e58f          DCB      187,182,229,143,170,232,175,187,230,136,150,231,155,174,229
0001bd  aae8afbb
0001c1  e68896e7
0001c5  9baee5  
0001c8  bd95e99d          DCB      189,149,233,157,158,231,169,186,"\\r\n",0
0001cc  9ee7a9ba
0001d0  5c720a00
0001d4  e588a0e9          DCB      229,136,160,233,153,164,"Dir2 ",229,164,177,232,180,165,"("
0001d8  99a44469
0001dc  723220e5
0001e0  a4b1e8b4
0001e4  a528    
0001e6  e99499e8          DCB      233,148,153,232,175,175,228,187,163,231,160,129," = %s) "
0001ea  afafe4bb
0001ee  a3e7a081
0001f2  203d2025
0001f6  732920  
0001f9  e69687e4          DCB      230,150,135,228,187,182,229,143,170,232,175,187,230,136,150
0001fd  bbb6e58f
000201  aae8afbb
000205  e68896  
000208  e79baee5          DCB      231,155,174,229,189,149,233,157,158,231,169,186,"\\r\n",0
00020c  bd95e99d
000210  9ee7a9ba
000214  5c720a00
000218  e588a0e9          DCB      229,136,160,233,153,164,"armfly.txt",229,164,177,232,180
00021c  99a46172
000220  6d666c79
000224  2e747874
000228  e5a4b1e8
00022c  b4      
00022d  a528e994          DCB      165,"(",233,148,153,232,175,175,228,187,163,231,160,129," "
000231  99e8afaf
000235  e4bba3e7
000239  a08120  
00023c  3d202573          DCB      "= %s) ",230,150,135,228,187,182,229,143,170,232,175,187
000240  2920e696
000244  87e4bbb6
000248  e58faae8
00024c  afbb    
00024e  e68896e7          DCB      230,136,150,231,155,174,229,189,149,233,157,158,231,169,186
000252  9baee5bd
000256  95e99d9e
00025a  e7a9ba  
00025d  5c720a00          DCB      "\\r\n",0
000261  00                DCB      0
000262  00                DCB      0
000263  00                DCB      0
000264  e588a0e9          DCB      229,136,160,233,153,164,"%s",230,150,135,228,187,182,229
000268  99a42573
00026c  e69687e4
000270  bbb6e5  
000273  a4b1e8b4          DCB      164,177,232,180,165,"(",233,148,153,232,175,175,228,187,163
000277  a528e994
00027b  99e8afaf
00027f  e4bba3  
000282  e7a08120          DCB      231,160,129," = %d) ",230,150,135,228,187,182,229,143,170
000286  3d202564
00028a  2920e696
00028e  87e4bbb6
000292  e58faa  
000295  e8afbbe6          DCB      232,175,187,230,136,150,231,155,174,229,189,149,233,157,158
000299  8896e79b
00029d  aee5bd95
0002a1  e99d9e  
0002a4  e7a9ba5c          DCB      231,169,186,"\\r\n",0
0002a8  720a00  

                          AREA ||.data||, DATA, ALIGN=2

                  FR_Table
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x8
                          DCD      ||.conststring||+0x14
                          DCD      ||.conststring||+0x20
                          DCD      ||.conststring||+0x30
                          DCD      ||.conststring||+0x3c
                          DCD      ||.conststring||+0x48
                          DCD      ||.conststring||+0x58
                          DCD      ||.conststring||+0x64
                          DCD      ||.conststring||+0x70
                          DCD      ||.conststring||+0x84
                          DCD      ||.conststring||+0x98
                          DCD      ||.conststring||+0xac
                          DCD      ||.conststring||+0xbc
                          DCD      ||.conststring||+0xd0
                          DCD      ||.conststring||+0xe0
                          DCD      ||.conststring||+0xec
                          DCD      ||.conststring||+0xf8
                          DCD      ||.conststring||+0x10c
                          DCD      ||.conststring||+0x124
                  s_ucTestSn
000050  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\demo_spi_flash_fatfs.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___22_demo_spi_flash_fatfs_c_bd2f6d1e____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___22_demo_spi_flash_fatfs_c_bd2f6d1e____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___22_demo_spi_flash_fatfs_c_bd2f6d1e____REVSH|
#line 144
|__asm___22_demo_spi_flash_fatfs_c_bd2f6d1e____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
