; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\test_current.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\test_current.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\test_current.crf ..\..\User\chip_ft\test_current.c]
                          THUMB

                          AREA ||i.iovcc_in_float||, CODE, READONLY, ALIGN=2

                  iovcc_in_float PROC
;;;10     
;;;11     void iovcc_in_float(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;12     {
;;;13         GPIO_InitTypeDef GPIO_InitStructure;
;;;14         // 开启GPIOA的时钟
;;;15         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;16         
;;;17         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8; //IOVCC
00000a  f44f7080          MOV      r0,#0x100
00000e  9000              STR      r0,[sp,#0]
;;;18     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
000010  2003              MOVS     r0,#3
000012  f88d0004          STRB     r0,[sp,#4]
;;;19     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL ;
000016  2000              MOVS     r0,#0
000018  f88d0007          STRB     r0,[sp,#7]
;;;20     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4802              LDR      r0,|L1.40|
000020  f7fffffe          BL       GPIO_Init
;;;21     }
000024  bd1c              POP      {r2-r4,pc}
;;;22     
                          ENDP

000026  0000              DCW      0x0000
                  |L1.40|
                          DCD      0x40020000

                          AREA ||i.iovcc_in_pull_down||, CODE, READONLY, ALIGN=2

                  iovcc_in_pull_down PROC
;;;22     
;;;23     void iovcc_in_pull_down(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;24     {
;;;25         GPIO_InitTypeDef GPIO_InitStructure;
;;;26         // 开启GPIOA的时钟
;;;27         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);
000002  2101              MOVS     r1,#1
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;28         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8; //IOVCC
00000a  f44f7080          MOV      r0,#0x100
00000e  9000              STR      r0,[sp,#0]
;;;29     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
000010  2001              MOVS     r0,#1
000012  f88d0004          STRB     r0,[sp,#4]
;;;30     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;//GPIO_PuPd_DOWN ;
000016  2000              MOVS     r0,#0
000018  f88d0007          STRB     r0,[sp,#7]
;;;31     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4804              LDR      r0,|L2.48|
000020  f7fffffe          BL       GPIO_Init
;;;32         GPIO_ResetBits(GPIOA, GPIO_Pin_8);
000024  f44f7180          MOV      r1,#0x100
000028  4801              LDR      r0,|L2.48|
00002a  f7fffffe          BL       GPIO_ResetBits
;;;33     }
00002e  bd1c              POP      {r2-r4,pc}
;;;34     
                          ENDP

                  |L2.48|
                          DCD      0x40020000

                          AREA ||i.no_load_current_calibration||, CODE, READONLY, ALIGN=2

                  no_load_current_calibration PROC
;;;170    //空载电流校准
;;;171    fsm_rt_t no_load_current_calibration(void)
000000  b570              PUSH     {r4-r6,lr}
;;;172    {
;;;173        static enum
;;;174        {
;;;175            START = 0,
;;;176            CALI_POWER_ON,
;;;177            NO_LOAD_CALI,
;;;178            CALI_OVER,
;;;179            CPL,
;;;180        } s_tState = START;
;;;181     
;;;182        static uint32_t adc_cnt;
;;;183        static uint32_t adc_sum;
;;;184        static uint32_t cali_sum;
;;;185        static uint32_t cali_cnt;
;;;186        static uint32_t temp;
;;;187        
;;;188        timer_creat();
;;;189        switch( s_tState )
000002  4861              LDR      r0,|L3.392|
000004  7800              LDRB     r0,[r0,#0]  ; s_tState
000006  2805              CMP      r0,#5
000008  d25d              BCS      |L3.198|
00000a  e8dff000          TBB      [pc,r0]
00000e  0310              DCB      0x03,0x10
000010  255d8300          DCB      0x25,0x5d,0x83,0x00
;;;190        {
;;;191        case START:
;;;192            temp = 0;
000014  2000              MOVS     r0,#0
000016  495d              LDR      r1,|L3.396|
000018  6008              STR      r0,[r1,#0]  ; temp
;;;193            cali_cnt = 0;
00001a  495d              LDR      r1,|L3.400|
00001c  6008              STR      r0,[r1,#0]  ; cali_cnt
;;;194            cali_sum = 0;
00001e  495d              LDR      r1,|L3.404|
000020  6008              STR      r0,[r1,#0]  ; cali_sum
;;;195            s_tState++;
000022  4859              LDR      r0,|L3.392|
000024  7800              LDRB     r0,[r0,#0]  ; s_tState
000026  1c40              ADDS     r0,r0,#1
000028  4957              LDR      r1,|L3.392|
00002a  7008              STRB     r0,[r1,#0]
;;;196            //break;
;;;197        
;;;198        case CALI_POWER_ON:
00002c  bf00              NOP      
;;;199            adc_sum = 0;
00002e  2000              MOVS     r0,#0
000030  4959              LDR      r1,|L3.408|
000032  6008              STR      r0,[r1,#0]  ; adc_sum
;;;200            adc_cnt = 0;
000034  4959              LDR      r1,|L3.412|
000036  6008              STR      r0,[r1,#0]  ; adc_cnt
;;;201            test_power.on();
000038  4959              LDR      r1,|L3.416|
00003a  6848              LDR      r0,[r1,#4]  ; test_power
00003c  4780              BLX      r0
;;;202            test_power.consumption_on();                                        //接入功耗测量电阻100欧姆
00003e  4958              LDR      r1,|L3.416|
000040  68c8              LDR      r0,[r1,#0xc]  ; test_power
000042  4780              BLX      r0
;;;203            timer_start(500);
000044  4857              LDR      r0,|L3.420|
000046  6800              LDR      r0,[r0,#0]  ; g_iRunTime
000048  f50070fa          ADD      r0,r0,#0x1f4
00004c  4956              LDR      r1,|L3.424|
00004e  6008              STR      r0,[r1,#0]  ; timer
;;;204            s_tState = NO_LOAD_CALI; 
000050  2002              MOVS     r0,#2
000052  494d              LDR      r1,|L3.392|
000054  7008              STRB     r0,[r1,#0]
;;;205            //break;
;;;206        
;;;207        case NO_LOAD_CALI:  //检查是否进入 standby ，如进入后则测功耗 之后退出低功耗
000056  bf00              NOP      
;;;208            if( is_time_up() )
000058  4852              LDR      r0,|L3.420|
00005a  6800              LDR      r0,[r0,#0]  ; g_iRunTime
00005c  4952              LDR      r1,|L3.424|
00005e  6809              LDR      r1,[r1,#0]  ; timer
000060  1a40              SUBS     r0,r0,r1
000062  f06f4100          MVN      r1,#0x80000000
000066  4288              CMP      r0,r1
000068  d22d              BCS      |L3.198|
;;;209            {
;;;210                IWDG_Feed();
00006a  f7fffffe          BL       IWDG_Feed
;;;211                adc_sum += g_adc_value[ADC_RANK_AMP];
00006e  484f              LDR      r0,|L3.428|
000070  8880              LDRH     r0,[r0,#4]  ; g_adc_value
000072  4949              LDR      r1,|L3.408|
000074  6809              LDR      r1,[r1,#0]  ; adc_sum
000076  4408              ADD      r0,r0,r1
000078  4947              LDR      r1,|L3.408|
00007a  6008              STR      r0,[r1,#0]  ; adc_sum
;;;212                adc_cnt++;
00007c  4847              LDR      r0,|L3.412|
00007e  6800              LDR      r0,[r0,#0]  ; adc_cnt
000080  1c40              ADDS     r0,r0,#1
000082  4946              LDR      r1,|L3.412|
000084  6008              STR      r0,[r1,#0]  ; adc_cnt
;;;213                //timer_start(1);
;;;214                if(adc_cnt == 1024)
000086  4608              MOV      r0,r1
000088  6800              LDR      r0,[r0,#0]  ; adc_cnt
00008a  f5b06f80          CMP      r0,#0x400
00008e  d11a              BNE      |L3.198|
;;;215                {
;;;216                    uint32_t current_adc_mean = adc_sum/1024;
000090  4841              LDR      r0,|L3.408|
000092  6800              LDR      r0,[r0,#0]  ; adc_sum
000094  0a84              LSRS     r4,r0,#10
;;;217                    temp = current_adc_mean*3300/4095;
000096  f64040e4          MOV      r0,#0xce4
00009a  4360              MULS     r0,r4,r0
00009c  f64071ff          MOV      r1,#0xfff
0000a0  fbb0f0f1          UDIV     r0,r0,r1
0000a4  4939              LDR      r1,|L3.396|
0000a6  6008              STR      r0,[r1,#0]  ; temp
;;;218                    test_power.consumption_off();  //电流取样电阻去除
0000a8  493d              LDR      r1,|L3.416|
0000aa  6908              LDR      r0,[r1,#0x10]  ; test_power
0000ac  4780              BLX      r0
;;;219                    test_power.off();
0000ae  493c              LDR      r1,|L3.416|
0000b0  6888              LDR      r0,[r1,#8]  ; test_power
0000b2  4780              BLX      r0
;;;220                    s_tState = CALI_OVER;
0000b4  2003              MOVS     r0,#3
0000b6  4934              LDR      r1,|L3.392|
0000b8  7008              STRB     r0,[r1,#0]
;;;221                    timer_start(50);
0000ba  483a              LDR      r0,|L3.420|
0000bc  6800              LDR      r0,[r0,#0]  ; g_iRunTime
0000be  3032              ADDS     r0,r0,#0x32
0000c0  4939              LDR      r1,|L3.424|
0000c2  6008              STR      r0,[r1,#0]  ; timer
;;;222                }
0000c4  bf00              NOP      
                  |L3.198|
;;;223            }
;;;224            break;
0000c6  e05c              B        |L3.386|
;;;225    
;;;226        case CALI_OVER:
;;;227            if(is_time_up())
0000c8  4836              LDR      r0,|L3.420|
0000ca  6800              LDR      r0,[r0,#0]  ; g_iRunTime
0000cc  4936              LDR      r1,|L3.424|
0000ce  6809              LDR      r1,[r1,#0]  ; timer
0000d0  1a40              SUBS     r0,r0,r1
0000d2  f06f4100          MVN      r1,#0x80000000
0000d6  4288              CMP      r0,r1
0000d8  d21b              BCS      |L3.274|
;;;228            {
;;;229                cali_sum += temp;
0000da  482e              LDR      r0,|L3.404|
0000dc  6800              LDR      r0,[r0,#0]  ; cali_sum
0000de  492b              LDR      r1,|L3.396|
0000e0  6809              LDR      r1,[r1,#0]  ; temp
0000e2  4408              ADD      r0,r0,r1
0000e4  492b              LDR      r1,|L3.404|
0000e6  6008              STR      r0,[r1,#0]  ; cali_sum
;;;230                cali_cnt++;
0000e8  4829              LDR      r0,|L3.400|
0000ea  6800              LDR      r0,[r0,#0]  ; cali_cnt
0000ec  1c40              ADDS     r0,r0,#1
0000ee  4928              LDR      r1,|L3.400|
0000f0  6008              STR      r0,[r1,#0]  ; cali_cnt
;;;231                if(cali_cnt == 8)
0000f2  4608              MOV      r0,r1
0000f4  6800              LDR      r0,[r0,#0]  ; cali_cnt
0000f6  2808              CMP      r0,#8
0000f8  d108              BNE      |L3.268|
;;;232                {
;;;233                    temp = cali_sum/8;
0000fa  4826              LDR      r0,|L3.404|
0000fc  6800              LDR      r0,[r0,#0]  ; cali_sum
0000fe  08c0              LSRS     r0,r0,#3
000100  4922              LDR      r1,|L3.396|
000102  6008              STR      r0,[r1,#0]  ; temp
;;;234                    s_tState = CPL;
000104  2004              MOVS     r0,#4
000106  4920              LDR      r1,|L3.392|
000108  7008              STRB     r0,[r1,#0]
00010a  e002              B        |L3.274|
                  |L3.268|
;;;235                }
;;;236                else
;;;237                {
;;;238                    s_tState = CALI_POWER_ON;
00010c  2001              MOVS     r0,#1
00010e  491e              LDR      r1,|L3.392|
000110  7008              STRB     r0,[r1,#0]
                  |L3.274|
;;;239                }
;;;240            }
;;;241            break;
000112  e036              B        |L3.386|
;;;242        case CPL:   //结束
;;;243            
;;;244            s_tState = START;
000114  2000              MOVS     r0,#0
000116  491c              LDR      r1,|L3.392|
000118  7008              STRB     r0,[r1,#0]
;;;245            
;;;246            if( (temp < CURRENT_OFFSET_MAX))
00011a  481c              LDR      r0,|L3.396|
00011c  6800              LDR      r0,[r0,#0]  ; temp
00011e  280f              CMP      r0,#0xf
000120  d21b              BCS      |L3.346|
;;;247            {
;;;248                test_power.consumption_off();  //电流取样电阻去除
000122  491f              LDR      r1,|L3.416|
000124  6908              LDR      r0,[r1,#0x10]  ; test_power
000126  4780              BLX      r0
;;;249                ee_data.current_offset = temp;
000128  4818              LDR      r0,|L3.396|
00012a  6800              LDR      r0,[r0,#0]  ; temp
00012c  4920              LDR      r1,|L3.432|
00012e  6088              STR      r0,[r1,#8]  ; ee_data
;;;250                ee_data_save();
000130  f7fffffe          BL       ee_data_save
;;;251                LCD_SHOW_WARN("SUCCESS CALI OFFSET:%d.%duA\r\n",temp/10, temp%10);
000134  4815              LDR      r0,|L3.396|
000136  6800              LDR      r0,[r0,#0]  ; temp
000138  210a              MOVS     r1,#0xa
00013a  fbb0f2f1          UDIV     r2,r0,r1
00013e  fb010412          MLS      r4,r1,r2,r0
000142  4812              LDR      r0,|L3.396|
000144  6800              LDR      r0,[r0,#0]  ; temp
000146  fbb0f5f1          UDIV     r5,r0,r1
00014a  4623              MOV      r3,r4
00014c  462a              MOV      r2,r5
00014e  a119              ADR      r1,|L3.436|
000150  2003              MOVS     r0,#3
000152  f7fffffe          BL       display_show_log
;;;252                return fsm_rt_cpl;
000156  2000              MOVS     r0,#0
                  |L3.344|
;;;253            }
;;;254            else
;;;255            {
;;;256                LCD_SHOW_WARN("FAIL CALI OFFSET:%d.%duA\r\n",temp/10, temp%10);
;;;257                return fsm_rt_err_no_load_current;
;;;258            }
;;;259            //break;
;;;260               
;;;261        }
;;;262        return fsm_rt_on_going;
;;;263    }
000158  bd70              POP      {r4-r6,pc}
                  |L3.346|
00015a  480c              LDR      r0,|L3.396|
00015c  6800              LDR      r0,[r0,#0]            ;256  ; temp
00015e  210a              MOVS     r1,#0xa               ;256
000160  fbb0f2f1          UDIV     r2,r0,r1              ;256
000164  fb010412          MLS      r4,r1,r2,r0           ;256
000168  4808              LDR      r0,|L3.396|
00016a  6800              LDR      r0,[r0,#0]            ;256  ; temp
00016c  fbb0f5f1          UDIV     r5,r0,r1              ;256
000170  4623              MOV      r3,r4                 ;256
000172  462a              MOV      r2,r5                 ;256
000174  a117              ADR      r1,|L3.468|
000176  2003              MOVS     r0,#3                 ;256
000178  f7fffffe          BL       display_show_log
00017c  f06f002d          MVN      r0,#0x2d              ;257
000180  e7ea              B        |L3.344|
                  |L3.386|
000182  bf00              NOP                            ;224
000184  2001              MOVS     r0,#1                 ;262
000186  e7e7              B        |L3.344|
                          ENDP

                  |L3.392|
                          DCD      |symbol_number.24|
                  |L3.396|
                          DCD      temp
                  |L3.400|
                          DCD      cali_cnt
                  |L3.404|
                          DCD      cali_sum
                  |L3.408|
                          DCD      |symbol_number.26|
                  |L3.412|
                          DCD      |symbol_number.25|
                  |L3.416|
                          DCD      test_power
                  |L3.420|
                          DCD      g_iRunTime
                  |L3.424|
                          DCD      |symbol_number.30|
                  |L3.428|
                          DCD      g_adc_value
                  |L3.432|
                          DCD      ee_data
                  |L3.436|
0001b4  53554343          DCB      "SUCCESS CALI OFFSET:%d.%duA\r\n",0
0001b8  45535320
0001bc  43414c49
0001c0  204f4646
0001c4  5345543a
0001c8  25642e25
0001cc  6475410d
0001d0  0a00    
0001d2  00                DCB      0
0001d3  00                DCB      0
                  |L3.468|
0001d4  4641494c          DCB      "FAIL CALI OFFSET:%d.%duA\r\n",0
0001d8  2043414c
0001dc  49204f46
0001e0  46534554
0001e4  3a25642e
0001e8  25647541
0001ec  0d0a00  
0001ef  00                DCB      0

                          AREA ||i.test_current||, CODE, READONLY, ALIGN=2

                  test_current PROC
;;;35     
;;;36     fsm_rt_t test_current(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;37     {
;;;38         
;;;39         static fsm_rt_t ret=fsm_rt_cpl;
;;;40         static enum
;;;41         {
;;;42             START = 0,
;;;43             ENTER_HIBERNATE,
;;;44             IS_CALI_MODE,
;;;45             MEASURE_CURRENT,
;;;46      
;;;47         } s_tState = START;
;;;48      
;;;49         static uint32_t adc_cnt;
;;;50         static uint32_t adc_sum;
;;;51         static uint32_t siovcc_adc_sum;
;;;52         //fsm_rt_t ret;
;;;53         timer_creat();
;;;54         switch( s_tState )
000002  4874              LDR      r0,|L4.468|
000004  7800              LDRB     r0,[r0,#0]  ; s_tState
000006  b130              CBZ      r0,|L4.22|
000008  2801              CMP      r0,#1
00000a  d02e              BEQ      |L4.106|
00000c  2802              CMP      r0,#2
00000e  d03f              BEQ      |L4.144|
000010  2803              CMP      r0,#3
000012  d13c              BNE      |L4.142|
000014  e04e              B        |L4.180|
                  |L4.22|
;;;55         {
;;;56         case START:
;;;57             {
;;;58                 apple_prst();
000016  2002              MOVS     r0,#2
000018  f7fffffe          BL       socket_prst_ctl
00001c  200a              MOVS     r0,#0xa
00001e  f7fffffe          BL       bsp_DelayMS
000022  2001              MOVS     r0,#1
000024  f7fffffe          BL       socket_prst_ctl
000028  200a              MOVS     r0,#0xa
00002a  f7fffffe          BL       bsp_DelayMS
;;;59                 test_power.consumption_on();                                        /* 接入功耗测量电阻100欧姆 */
00002e  496a              LDR      r1,|L4.472|
000030  68c8              LDR      r0,[r1,#0xc]  ; test_power
000032  4780              BLX      r0
;;;60                 adc_cnt = 0;
000034  2000              MOVS     r0,#0
000036  4969              LDR      r1,|L4.476|
000038  6008              STR      r0,[r1,#0]  ; adc_cnt
;;;61                 adc_sum = 0;
00003a  4969              LDR      r1,|L4.480|
00003c  6008              STR      r0,[r1,#0]  ; adc_sum
;;;62                 uint8_t temp=0;//复位寄存器设置：使能debounce,低电平触发，使能上拉，使能复位
00003e  9000              STR      r0,[sp,#0]
;;;63                 apple_write_addr16(APPLE_DEV_ADDR,&temp,PRST_CTL_REG,1);  
000040  2301              MOVS     r3,#1
000042  f24c221e          MOV      r2,#0xc21e
000046  4669              MOV      r1,sp
000048  2060              MOVS     r0,#0x60
00004a  f7fffffe          BL       apple_write_addr16
;;;64                 set_apple_debug_out(ITEM_PMU_DBG_OFF);
00004e  200b              MOVS     r0,#0xb
000050  f7fffffe          BL       set_apple_debug_out
;;;65                 set_apple_debug_out(ITEM_CMU_DBG_OFF);
000054  200c              MOVS     r0,#0xc
000056  f7fffffe          BL       set_apple_debug_out
;;;66                 socket_touch_off();
00005a  f7fffffe          BL       socket_touch_off
;;;67                 s_tState++;
00005e  485d              LDR      r0,|L4.468|
000060  7800              LDRB     r0,[r0,#0]  ; s_tState
000062  1c40              ADDS     r0,r0,#1
000064  495b              LDR      r1,|L4.468|
000066  7008              STRB     r0,[r1,#0]
;;;68             }
;;;69            
;;;70             //break;
;;;71         
;;;72         case ENTER_HIBERNATE:
000068  bf00              NOP      
                  |L4.106|
;;;73      
;;;74             ret = set_apple_work_state(STANDBY);
00006a  2002              MOVS     r0,#2
00006c  f7fffffe          BL       set_apple_work_state
000070  495c              LDR      r1,|L4.484|
000072  7008              STRB     r0,[r1,#0]
;;;75             socket_asu_pu_off();
000074  f7fffffe          BL       socket_asu_pu_off
;;;76             socket_prst_ctl(prst_state_float);
000078  2000              MOVS     r0,#0
00007a  f7fffffe          BL       socket_prst_ctl
;;;77     //        if(ret != fsm_rt_cpl) 
;;;78     //        {
;;;79     //            ret = fsm_rt_err_st
;;;80     //            goto fail;
;;;81     //        }
;;;82             #if SIOVCC_EN
;;;83             iovcc_sample_pin_deinit();
;;;84             timer_start(50);
;;;85             #else
;;;86             
;;;87             timer_start(150);
00007e  485a              LDR      r0,|L4.488|
000080  6800              LDR      r0,[r0,#0]  ; g_iRunTime
000082  3096              ADDS     r0,r0,#0x96
000084  4959              LDR      r1,|L4.492|
000086  6008              STR      r0,[r1,#0]  ; timer
;;;88             #endif
;;;89             
;;;90             s_tState = IS_CALI_MODE;
000088  2002              MOVS     r0,#2
00008a  4952              LDR      r1,|L4.468|
00008c  7008              STRB     r0,[r1,#0]
                  |L4.142|
;;;91             break;
00008e  e094              B        |L4.442|
                  |L4.144|
;;;92             
;;;93         case IS_CALI_MODE:
;;;94             if(is_time_up())
000090  4855              LDR      r0,|L4.488|
000092  6800              LDR      r0,[r0,#0]  ; g_iRunTime
000094  4955              LDR      r1,|L4.492|
000096  6809              LDR      r1,[r1,#0]  ; timer
000098  1a40              SUBS     r0,r0,r1
00009a  f06f4100          MVN      r1,#0x80000000
00009e  4288              CMP      r0,r1
0000a0  d207              BCS      |L4.178|
;;;95             {
;;;96                 #if SIOVCC_EN
;;;97                 iovcc_sample_pin_init();
;;;98                 #endif
;;;99      
;;;100                
;;;101               // socket_i_self();
;;;102                timer_start(150);
0000a2  4851              LDR      r0,|L4.488|
0000a4  6800              LDR      r0,[r0,#0]  ; g_iRunTime
0000a6  3096              ADDS     r0,r0,#0x96
0000a8  4950              LDR      r1,|L4.492|
0000aa  6008              STR      r0,[r1,#0]  ; timer
;;;103                s_tState = MEASURE_CURRENT;
0000ac  2003              MOVS     r0,#3
0000ae  4949              LDR      r1,|L4.468|
0000b0  7008              STRB     r0,[r1,#0]
                  |L4.178|
;;;104            }
;;;105            break;
0000b2  e082              B        |L4.442|
                  |L4.180|
;;;106        
;;;107        case MEASURE_CURRENT: //hibernate下测量siovcc电压 和 电流
;;;108            if( is_time_up() )
0000b4  484c              LDR      r0,|L4.488|
0000b6  6800              LDR      r0,[r0,#0]  ; g_iRunTime
0000b8  494c              LDR      r1,|L4.492|
0000ba  6809              LDR      r1,[r1,#0]  ; timer
0000bc  1a40              SUBS     r0,r0,r1
0000be  f06f4100          MVN      r1,#0x80000000
0000c2  4288              CMP      r0,r1
0000c4  d278              BCS      |L4.440|
;;;109            {
;;;110                
;;;111                adc_sum += g_adc_value[ADC_RANK_AMP];
0000c6  484a              LDR      r0,|L4.496|
0000c8  8880              LDRH     r0,[r0,#4]  ; g_adc_value
0000ca  4945              LDR      r1,|L4.480|
0000cc  6809              LDR      r1,[r1,#0]  ; adc_sum
0000ce  4408              ADD      r0,r0,r1
0000d0  4943              LDR      r1,|L4.480|
0000d2  6008              STR      r0,[r1,#0]  ; adc_sum
;;;112                siovcc_adc_sum += g_adc_value[ADC_RANK_BGR];
0000d4  4846              LDR      r0,|L4.496|
0000d6  8900              LDRH     r0,[r0,#8]  ; g_adc_value
0000d8  4946              LDR      r1,|L4.500|
0000da  6809              LDR      r1,[r1,#0]  ; siovcc_adc_sum
0000dc  4408              ADD      r0,r0,r1
0000de  4945              LDR      r1,|L4.500|
0000e0  6008              STR      r0,[r1,#0]  ; siovcc_adc_sum
;;;113                adc_cnt++;
0000e2  483e              LDR      r0,|L4.476|
0000e4  6800              LDR      r0,[r0,#0]  ; adc_cnt
0000e6  1c40              ADDS     r0,r0,#1
0000e8  493c              LDR      r1,|L4.476|
0000ea  6008              STR      r0,[r1,#0]  ; adc_cnt
;;;114                timer_start(2);
0000ec  483e              LDR      r0,|L4.488|
0000ee  6800              LDR      r0,[r0,#0]  ; g_iRunTime
0000f0  1c80              ADDS     r0,r0,#2
0000f2  493e              LDR      r1,|L4.492|
0000f4  6008              STR      r0,[r1,#0]  ; timer
;;;115                if(adc_cnt == 256)
0000f6  4839              LDR      r0,|L4.476|
0000f8  6800              LDR      r0,[r0,#0]  ; adc_cnt
0000fa  f5b07f80          CMP      r0,#0x100
0000fe  d15b              BNE      |L4.440|
;;;116                {
;;;117                    uint32_t current_adc_mean = adc_sum/256;
000100  4837              LDR      r0,|L4.480|
000102  6800              LDR      r0,[r0,#0]  ; adc_sum
000104  0a04              LSRS     r4,r0,#8
;;;118                    uint32_t siovcc_adc_mean = siovcc_adc_sum/256;
000106  483b              LDR      r0,|L4.500|
000108  6800              LDR      r0,[r0,#0]  ; siovcc_adc_sum
00010a  0a05              LSRS     r5,r0,#8
;;;119                    trim_result.standby_current = current_adc_mean*3300/4095;
00010c  f64040e4          MOV      r0,#0xce4
000110  4360              MULS     r0,r4,r0
000112  f64071ff          MOV      r1,#0xfff
000116  fbb0f0f1          UDIV     r0,r0,r1
00011a  4937              LDR      r1,|L4.504|
00011c  6608              STR      r0,[r1,#0x60]  ; trim_result
;;;120                    trim_result.hibernate_siovcc_volt = siovcc_adc_mean*3300/4095;
00011e  f64040e4          MOV      r0,#0xce4
000122  4368              MULS     r0,r5,r0
000124  f64071ff          MOV      r1,#0xfff
000128  fbb0f0f1          UDIV     r0,r0,r1
00012c  4932              LDR      r1,|L4.504|
00012e  6648              STR      r0,[r1,#0x64]  ; trim_result
;;;121                    #if SIOVCC_EN
;;;122                    if(trim_result.hibernate_siovcc_volt < SIOVCC_VOLT_MIN || trim_result.hibernate_siovcc_volt > SIOVCC_VOLT_MAX)
;;;123                    {
;;;124                        logging("fail siovcc volt:%4dmv\r\n",trim_result.hibernate_siovcc_volt);
;;;125                        ret = fsm_rt_err_siovcc;
;;;126                        goto fail;
;;;127                    }
;;;128                    else
;;;129                    {
;;;130                        logging("SUCCESS siovcc volt:%4dmv\r\n",trim_result.hibernate_siovcc_volt);
;;;131                    }
;;;132                    #endif
;;;133                    
;;;134                    if(trim_result.standby_current >  CURRENT_OFFSET) trim_result.standby_current -= CURRENT_OFFSET;
000130  4608              MOV      r0,r1
000132  6e00              LDR      r0,[r0,#0x60]  ; trim_result
000134  4931              LDR      r1,|L4.508|
000136  6889              LDR      r1,[r1,#8]  ; ee_data
000138  4288              CMP      r0,r1
00013a  d906              BLS      |L4.330|
00013c  482e              LDR      r0,|L4.504|
00013e  6e00              LDR      r0,[r0,#0x60]  ; trim_result
000140  492e              LDR      r1,|L4.508|
000142  6889              LDR      r1,[r1,#8]  ; ee_data
000144  1a40              SUBS     r0,r0,r1
000146  492c              LDR      r1,|L4.504|
000148  6608              STR      r0,[r1,#0x60]  ; trim_result
                  |L4.330|
;;;135                    if((trim_result.standby_current > STANDBY_CURRENT_LO) && (trim_result.standby_current < STANDBY_CURRENT_HI))
00014a  482b              LDR      r0,|L4.504|
00014c  6e00              LDR      r0,[r0,#0x60]  ; trim_result
00014e  2814              CMP      r0,#0x14
000150  dd1b              BLE      |L4.394|
000152  4829              LDR      r0,|L4.504|
000154  6e00              LDR      r0,[r0,#0x60]  ; trim_result
000156  2832              CMP      r0,#0x32
000158  da17              BGE      |L4.394|
;;;136                    {
;;;137                        //test_power.consumption_off();  //电流取样电阻去除
;;;138                        logging("SUCCESS current(%d):%d.%duA\r\n",ee_data.current_offset,trim_result.standby_current/10, trim_result.standby_current%10);
00015a  4827              LDR      r0,|L4.504|
00015c  6e00              LDR      r0,[r0,#0x60]  ; trim_result
00015e  210a              MOVS     r1,#0xa
000160  fb90f2f1          SDIV     r2,r0,r1
000164  fb010612          MLS      r6,r1,r2,r0
000168  4823              LDR      r0,|L4.504|
00016a  6e00              LDR      r0,[r0,#0x60]  ; trim_result
00016c  fb90f7f1          SDIV     r7,r0,r1
000170  4822              LDR      r0,|L4.508|
000172  9600              STR      r6,[sp,#0]
000174  463b              MOV      r3,r7
000176  6882              LDR      r2,[r0,#8]  ; ee_data
000178  481b              LDR      r0,|L4.488|
00017a  6801              LDR      r1,[r0,#0]  ; g_iRunTime
00017c  a020              ADR      r0,|L4.512|
00017e  f7fffffe          BL       logger_buffer_write
;;;139    //                    adc_cnt = 0;
;;;140    //                    adc_sum = 0;
;;;141    //                    siovcc_adc_sum = 0;
;;;142                        s_tState = START;
000182  2000              MOVS     r0,#0
000184  4913              LDR      r1,|L4.468|
000186  7008              STRB     r0,[r1,#0]
                  |L4.392|
;;;143                        return fsm_rt_cpl;
;;;144                    }
;;;145                    else
;;;146                    {
;;;147                        
;;;148                        logging("fail current:%d.%duA\r\n",trim_result.standby_current/10, trim_result.standby_current%10);
;;;149                        ret = fsm_rt_err_standby_current;
;;;150                        goto fail;
;;;151                    }
;;;152                }
;;;153            }
;;;154            break; 
;;;155        }
;;;156        
;;;157        return fsm_rt_on_going;
;;;158        
;;;159        fail:
;;;160        s_tState = START;
;;;161        test_power.consumption_off();  //电流取样电阻去除
;;;162        return ret;
;;;163    }
000188  bdf8              POP      {r3-r7,pc}
                  |L4.394|
00018a  481b              LDR      r0,|L4.504|
00018c  6e00              LDR      r0,[r0,#0x60]         ;148  ; trim_result
00018e  210a              MOVS     r1,#0xa               ;148
000190  fb90f2f1          SDIV     r2,r0,r1              ;148
000194  fb010612          MLS      r6,r1,r2,r0           ;148
000198  4817              LDR      r0,|L4.504|
00019a  6e00              LDR      r0,[r0,#0x60]         ;148  ; trim_result
00019c  fb90f7f1          SDIV     r7,r0,r1              ;148
0001a0  4633              MOV      r3,r6                 ;148
0001a2  463a              MOV      r2,r7                 ;148
0001a4  4810              LDR      r0,|L4.488|
0001a6  6801              LDR      r1,[r0,#0]            ;148  ; g_iRunTime
0001a8  a01e              ADR      r0,|L4.548|
0001aa  f7fffffe          BL       logger_buffer_write
0001ae  20e7              MOVS     r0,#0xe7              ;149
0001b0  490c              LDR      r1,|L4.484|
0001b2  7008              STRB     r0,[r1,#0]            ;149
0001b4  e004              B        |L4.448|
0001b6  e7ff              B        |L4.440|
                  |L4.440|
0001b8  bf00              NOP                            ;154
                  |L4.442|
0001ba  bf00              NOP                            ;91
0001bc  2001              MOVS     r0,#1                 ;157
0001be  e7e3              B        |L4.392|
                  |L4.448|
0001c0  2000              MOVS     r0,#0                 ;160
0001c2  4904              LDR      r1,|L4.468|
0001c4  7008              STRB     r0,[r1,#0]            ;160
0001c6  4904              LDR      r1,|L4.472|
0001c8  6908              LDR      r0,[r1,#0x10]         ;161  ; test_power
0001ca  4780              BLX      r0                    ;161
0001cc  4805              LDR      r0,|L4.484|
0001ce  f9900000          LDRSB    r0,[r0,#0]            ;162  ; ret
0001d2  e7d9              B        |L4.392|
;;;164    
                          ENDP

                  |L4.468|
                          DCD      s_tState
                  |L4.472|
                          DCD      test_power
                  |L4.476|
                          DCD      adc_cnt
                  |L4.480|
                          DCD      adc_sum
                  |L4.484|
                          DCD      ||ret||
                  |L4.488|
                          DCD      g_iRunTime
                  |L4.492|
                          DCD      timer
                  |L4.496|
                          DCD      g_adc_value
                  |L4.500|
                          DCD      siovcc_adc_sum
                  |L4.504|
                          DCD      trim_result
                  |L4.508|
                          DCD      ee_data
                  |L4.512|
000200  5b253864          DCB      "[%8d]SUCCESS current(%d):%d.%duA\r\n",0
000204  5d535543
000208  43455353
00020c  20637572
000210  72656e74
000214  28256429
000218  3a25642e
00021c  25647541
000220  0d0a00  
000223  00                DCB      0
                  |L4.548|
000224  5b253864          DCB      "[%8d]fail current:%d.%duA\r\n",0
000228  5d666169
00022c  6c206375
000230  7272656e
000234  743a2564
000238  2e256475
00023c  410d0a00

                          AREA ||.data||, DATA, ALIGN=2

                  g_no_load_current
                          DCD      0x00000000
                  ||ret||
000004  00                DCB      0x00
                  s_tState
000005  000000            DCB      0x00,0x00,0x00
                  adc_cnt
                          DCD      0x00000000
                  adc_sum
                          DCD      0x00000000
                  siovcc_adc_sum
                          DCD      0x00000000
                  timer
                          DCD      0x00000000
                  |symbol_number.24|
000018  00000000          DCB      0x00,0x00,0x00,0x00
                  |symbol_number.25|
                          DCD      0x00000000
                  |symbol_number.26|
                          DCD      0x00000000
                  cali_sum
                          DCD      0x00000000
                  cali_cnt
                          DCD      0x00000000
                  temp
                          DCD      0x00000000
                  |symbol_number.30|
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\chip_ft\\test_current.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___14_test_current_c_a9bb7cbe____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___14_test_current_c_a9bb7cbe____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___14_test_current_c_a9bb7cbe____REVSH|
#line 144
|__asm___14_test_current_c_a9bb7cbe____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
