; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\test_bus_kiwi.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\test_bus_kiwi.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\BERRY_TWI -I..\..\User\berry_ft -I..\..\User\ft_support -I..\..\User\berry_test -I..\..\User\factory_test -I..\..\User\emenu -I..\..\User\kiwi_ft -I..\..\User\kiwi_ft\spv40 -I..\..\User\kiwi_ft\spv40\peripheral -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\kiwi_ft -I..\..\User\MultiButton-1.1.0 -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\test_bus_kiwi.crf ..\..\User\kiwi_ft\test_bus_kiwi.c]
                          THUMB

                          AREA ||i.test_hand_shark_state||, CODE, READONLY, ALIGN=2

                  test_hand_shark_state PROC
;;;8      
;;;9      fsm_rt_t test_hand_shark_state(void)
000000  b57c              PUSH     {r2-r6,lr}
;;;10     {
;;;11         #define CHIP_ID_REG         0x20000000
;;;12         #define CHIP_OTP_DATA_REG   0x20000010
;;;13         #define MEM_CTL_REG         0x20009004
;;;14         #define MEM_STAT_REG        0x20009008
;;;15         uint32_t  chip_id;
;;;16         
;;;17         static enum
;;;18         {
;;;19             START = 0,
;;;20             GET_CHIP_ID,
;;;21             CACHE_BIST_EN,
;;;22             CACHE_BIST_RESULT_QUERY,
;;;23             GET_OTP_DATA,
;;;24         } s_tState = START;
;;;25         fsm_rt_t ret;
;;;26         if( !is_test_item(pmu_item) ) 
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       is_test_item
000008  b930              CBNZ     r0,|L1.24|
;;;27         {
;;;28             logging("INFO skip BGR\r\n");
00000a  4857              LDR      r0,|L1.360|
00000c  6801              LDR      r1,[r0,#0]  ; g_iRunTime
00000e  a057              ADR      r0,|L1.364|
000010  f7fffffe          BL       logger_buffer_write
;;;29             return fsm_rt_cpl;
000014  2000              MOVS     r0,#0
                  |L1.22|
;;;30         }        
;;;31     
;;;32         timer_creat();
;;;33         switch(s_tState)
;;;34         {
;;;35         case START:
;;;36             s_tState++;
;;;37             //break;
;;;38         
;;;39         case GET_CHIP_ID:
;;;40             {
;;;41                 comSendChar(COM2,0x80);                                             //同步波特率 发单个byte 0x80
;;;42                 ret = brom_read_word(CHIP_ID_REG, &chip_id);                        //读取chip  id：brom 0x81
;;;43                 if(ret != fsm_rt_cpl) goto fail;
;;;44                 if(chip_id != KIWI_CHIP_ID)
;;;45                 {
;;;46                     ret = fsm_rt_err_chip_id;
;;;47                     goto fail;
;;;48                 }
;;;49                 s_tState = CACHE_BIST_EN;
;;;50             }
;;;51             //break;
;;;52             
;;;53         case CACHE_BIST_EN:
;;;54             {
;;;55                 uint32_t mem_ctl;
;;;56                 ret = brom_read_word(MEM_CTL_REG, &mem_ctl);
;;;57                 if(ret != fsm_rt_cpl)
;;;58                 {
;;;59                     ret = fsm_rt_err_bist_asu;
;;;60                     goto fail;
;;;61                 }
;;;62                 mem_ctl |= (1<<1);
;;;63                 ret = brom_write_word(MEM_CTL_REG,mem_ctl);
;;;64                 if(ret != fsm_rt_cpl)
;;;65                 {
;;;66                     ret = fsm_rt_err_bist_asu;
;;;67                     goto fail;
;;;68                 }
;;;69                 timer_start(500);
;;;70                 s_tState = CACHE_BIST_RESULT_QUERY;
;;;71             }
;;;72             //break;
;;;73             
;;;74         case CACHE_BIST_RESULT_QUERY:
;;;75             {
;;;76                 uint32_t mem_stat;
;;;77     
;;;78                 ret = brom_read_word(MEM_STAT_REG, &mem_stat);
;;;79                 if(ret != fsm_rt_cpl)
;;;80                 {
;;;81                     ret = fsm_rt_err_bist_asu;
;;;82                     goto fail;
;;;83                 }
;;;84                 if( (mem_stat&(1<<1)) )
;;;85                 {
;;;86                     if( mem_stat & (1<<17) )
;;;87                     {
;;;88                         ret = fsm_rt_err_bist_cache;
;;;89                         goto fail;
;;;90                     }
;;;91                     else
;;;92                     {
;;;93                         s_tState = GET_OTP_DATA; 
;;;94                         logging("SUCCESS cache bist\r\n");
;;;95                     }
;;;96                 } 
;;;97                 if(is_time_up())
;;;98                 {
;;;99                     ret = fsm_rt_err_bist_timeout;
;;;100                    goto fail;
;;;101                }
;;;102            }
;;;103            break;
;;;104            
;;;105        case GET_OTP_DATA:
;;;106            {
;;;107                uint32_t* pOTP_DATA;
;;;108                uint32_t otp_sum=0;
;;;109                ret = brom_read(CHIP_OTP_DATA_REG, 32, &pOTP_DATA); //32byte 
;;;110                if(ret != fsm_rt_cpl) goto fail;
;;;111                for(uint8_t i=0; i<8; i++)
;;;112                {
;;;113                    otp_sum += pOTP_DATA[i];
;;;114                    logging("OTP_DATA[%d]=0x%08x\r\n",i,pOTP_DATA[i]);
;;;115                    efuse_otp_data_brom.word_table[i] = pOTP_DATA[i];
;;;116                }
;;;117                if(pOTP_DATA[0] == 0x8e3b5a69 ) 
;;;118                {
;;;119                   // return fsm_rt_err_final_tested;
;;;120                    //goto fail;
;;;121                }
;;;122                else
;;;123                {
;;;124                    if(otp_sum != 0)  //otp 数据不对；需要筛选出
;;;125                    {
;;;126                        ret = fsm_rt_err_otp_dirty_data;
;;;127                        goto fail;
;;;128                    }
;;;129                }
;;;130                s_tState = START;
;;;131                return fsm_rt_cpl;
;;;132            }
;;;133            //break;
;;;134        }
;;;135    
;;;136        return fsm_rt_on_going;
;;;137        
;;;138        fail:
;;;139        s_tState = START;
;;;140        return ret;
;;;141    }
000016  bd7c              POP      {r2-r6,pc}
                  |L1.24|
000018  485a              LDR      r0,|L1.388|
00001a  7800              LDRB     r0,[r0,#0]            ;33  ; s_tState
00001c  2805              CMP      r0,#5                 ;33
00001e  d26a              BCS      |L1.246|
000020  e8dff000          TBB      [pc,r0]               ;33
000024  03092040          DCB      0x03,0x09,0x20,0x40
000028  6a00              DCB      0x6a,0x00
00002a  4856              LDR      r0,|L1.388|
00002c  7800              LDRB     r0,[r0,#0]            ;36  ; s_tState
00002e  1c40              ADDS     r0,r0,#1              ;36
000030  4954              LDR      r1,|L1.388|
000032  7008              STRB     r0,[r1,#0]            ;36
000034  bf00              NOP                            ;39
000036  2180              MOVS     r1,#0x80              ;41
000038  2001              MOVS     r0,#1                 ;41
00003a  f7fffffe          BL       comSendChar
00003e  a901              ADD      r1,sp,#4              ;42
000040  f04f5000          MOV      r0,#0x20000000        ;42
000044  f7fffffe          BL       brom_read_word
000048  4604              MOV      r4,r0                 ;42
00004a  b104              CBZ      r4,|L1.78|
00004c  e086              B        |L1.348|
                  |L1.78|
00004e  494e              LDR      r1,|L1.392|
000050  9801              LDR      r0,[sp,#4]            ;44
000052  4288              CMP      r0,r1                 ;44
000054  d002              BEQ      |L1.92|
000056  f06f0425          MVN      r4,#0x25              ;46
00005a  e07f              B        |L1.348|
                  |L1.92|
00005c  2002              MOVS     r0,#2                 ;49
00005e  4949              LDR      r1,|L1.388|
000060  7008              STRB     r0,[r1,#0]            ;49
000062  bf00              NOP                            ;53
000064  4669              MOV      r1,sp                 ;56
000066  4849              LDR      r0,|L1.396|
000068  f7fffffe          BL       brom_read_word
00006c  4604              MOV      r4,r0                 ;56
00006e  b114              CBZ      r4,|L1.118|
000070  f06f0432          MVN      r4,#0x32              ;59
000074  e072              B        |L1.348|
                  |L1.118|
000076  9800              LDR      r0,[sp,#0]            ;62
000078  f0400002          ORR      r0,r0,#2              ;62
00007c  9000              STR      r0,[sp,#0]            ;62
00007e  4843              LDR      r0,|L1.396|
000080  9900              LDR      r1,[sp,#0]            ;63
000082  f7fffffe          BL       brom_write_word
000086  4604              MOV      r4,r0                 ;63
000088  b114              CBZ      r4,|L1.144|
00008a  f06f0432          MVN      r4,#0x32              ;66
00008e  e065              B        |L1.348|
                  |L1.144|
000090  4835              LDR      r0,|L1.360|
000092  6800              LDR      r0,[r0,#0]            ;69  ; g_iRunTime
000094  f50070fa          ADD      r0,r0,#0x1f4          ;69
000098  493d              LDR      r1,|L1.400|
00009a  6008              STR      r0,[r1,#0]            ;69  ; timer
00009c  2003              MOVS     r0,#3                 ;70
00009e  4939              LDR      r1,|L1.388|
0000a0  7008              STRB     r0,[r1,#0]            ;70
0000a2  bf00              NOP                            ;74
0000a4  4669              MOV      r1,sp                 ;78
0000a6  4839              LDR      r0,|L1.396|
0000a8  1d00              ADDS     r0,r0,#4              ;78
0000aa  f7fffffe          BL       brom_read_word
0000ae  4604              MOV      r4,r0                 ;78
0000b0  b114              CBZ      r4,|L1.184|
0000b2  f06f0432          MVN      r4,#0x32              ;81
0000b6  e051              B        |L1.348|
                  |L1.184|
0000b8  9800              LDR      r0,[sp,#0]            ;84
0000ba  f0000002          AND      r0,r0,#2              ;84
0000be  b170              CBZ      r0,|L1.222|
0000c0  9800              LDR      r0,[sp,#0]            ;86
0000c2  f4003000          AND      r0,r0,#0x20000        ;86
0000c6  b110              CBZ      r0,|L1.206|
0000c8  f06f0433          MVN      r4,#0x33              ;88
0000cc  e046              B        |L1.348|
                  |L1.206|
0000ce  2004              MOVS     r0,#4                 ;93
0000d0  492c              LDR      r1,|L1.388|
0000d2  7008              STRB     r0,[r1,#0]            ;93
0000d4  4824              LDR      r0,|L1.360|
0000d6  6801              LDR      r1,[r0,#0]            ;94  ; g_iRunTime
0000d8  a02e              ADR      r0,|L1.404|
0000da  f7fffffe          BL       logger_buffer_write
                  |L1.222|
0000de  4822              LDR      r0,|L1.360|
0000e0  6800              LDR      r0,[r0,#0]            ;97  ; g_iRunTime
0000e2  492b              LDR      r1,|L1.400|
0000e4  6809              LDR      r1,[r1,#0]            ;97  ; timer
0000e6  1a40              SUBS     r0,r0,r1              ;97
0000e8  f06f4100          MVN      r1,#0x80000000        ;97
0000ec  4288              CMP      r0,r1                 ;97
0000ee  d202              BCS      |L1.246|
0000f0  f06f0416          MVN      r4,#0x16              ;99
0000f4  e032              B        |L1.348|
                  |L1.246|
0000f6  e02e              B        |L1.342|
0000f8  2600              MOVS     r6,#0                 ;108
0000fa  466a              MOV      r2,sp                 ;109
0000fc  2120              MOVS     r1,#0x20              ;109
0000fe  482c              LDR      r0,|L1.432|
000100  f7fffffe          BL       brom_read
000104  4604              MOV      r4,r0                 ;109
000106  b104              CBZ      r4,|L1.266|
000108  e028              B        |L1.348|
                  |L1.266|
00010a  2500              MOVS     r5,#0                 ;111
00010c  e014              B        |L1.312|
                  |L1.270|
00010e  9800              LDR      r0,[sp,#0]            ;113
000110  f8500025          LDR      r0,[r0,r5,LSL #2]     ;113
000114  4406              ADD      r6,r6,r0              ;113
000116  9800              LDR      r0,[sp,#0]            ;114
000118  f8503025          LDR      r3,[r0,r5,LSL #2]     ;114
00011c  462a              MOV      r2,r5                 ;114
00011e  4812              LDR      r0,|L1.360|
000120  6801              LDR      r1,[r0,#0]            ;114  ; g_iRunTime
000122  a024              ADR      r0,|L1.436|
000124  f7fffffe          BL       logger_buffer_write
000128  9800              LDR      r0,[sp,#0]            ;115
00012a  f8500025          LDR      r0,[r0,r5,LSL #2]     ;115
00012e  4928              LDR      r1,|L1.464|
000130  f8410025          STR      r0,[r1,r5,LSL #2]     ;115
000134  1c68              ADDS     r0,r5,#1              ;111
000136  b2c5              UXTB     r5,r0                 ;111
                  |L1.312|
000138  2d08              CMP      r5,#8                 ;111
00013a  dbe8              BLT      |L1.270|
00013c  9800              LDR      r0,[sp,#0]            ;117
00013e  6800              LDR      r0,[r0,#0]            ;117
000140  4924              LDR      r1,|L1.468|
000142  4288              CMP      r0,r1                 ;117
000144  d003              BEQ      |L1.334|
000146  b116              CBZ      r6,|L1.334|
000148  f06f0437          MVN      r4,#0x37              ;126
00014c  e006              B        |L1.348|
                  |L1.334|
00014e  2000              MOVS     r0,#0                 ;130
000150  490c              LDR      r1,|L1.388|
000152  7008              STRB     r0,[r1,#0]            ;130
000154  e75f              B        |L1.22|
                  |L1.342|
000156  bf00              NOP                            ;103
000158  2001              MOVS     r0,#1                 ;136
00015a  e75c              B        |L1.22|
                  |L1.348|
00015c  2000              MOVS     r0,#0                 ;139
00015e  4909              LDR      r1,|L1.388|
000160  7008              STRB     r0,[r1,#0]            ;139
000162  4620              MOV      r0,r4                 ;140
000164  e757              B        |L1.22|
;;;142    
                          ENDP

000166  0000              DCW      0x0000
                  |L1.360|
                          DCD      g_iRunTime
                  |L1.364|
00016c  5b253864          DCB      "[%8d]INFO skip BGR\r\n",0
000170  5d494e46
000174  4f20736b
000178  69702042
00017c  47520d0a
000180  00      
000181  00                DCB      0
000182  00                DCB      0
000183  00                DCB      0
                  |L1.388|
                          DCD      s_tState
                  |L1.392|
                          DCD      0x49533180
                  |L1.396|
                          DCD      0x20009004
                  |L1.400|
                          DCD      timer
                  |L1.404|
000194  5b253864          DCB      "[%8d]SUCCESS cache bist\r\n",0
000198  5d535543
00019c  43455353
0001a0  20636163
0001a4  68652062
0001a8  6973740d
0001ac  0a00    
0001ae  00                DCB      0
0001af  00                DCB      0
                  |L1.432|
                          DCD      0x20000010
                  |L1.436|
0001b4  5b253864          DCB      "[%8d]OTP_DATA[%d]=0x%08x\r\n",0
0001b8  5d4f5450
0001bc  5f444154
0001c0  415b2564
0001c4  5d3d3078
0001c8  25303878
0001cc  0d0a00  
0001cf  00                DCB      0
                  |L1.464|
                          DCD      efuse_otp_data_brom
                  |L1.468|
                          DCD      0x8e3b5a69

                          AREA ||.data||, DATA, ALIGN=2

                  s_tState
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  timer
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\kiwi_ft\\test_bus_kiwi.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_test_bus_kiwi_c_8d42e702____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_test_bus_kiwi_c_8d42e702____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_test_bus_kiwi_c_8d42e702____REVSH|
#line 144
|__asm___15_test_bus_kiwi_c_8d42e702____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
