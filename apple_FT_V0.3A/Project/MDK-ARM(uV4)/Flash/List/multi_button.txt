; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\multi_button.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\multi_button.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\multi_button.crf ..\..\User\MultiButton-1.1.0\multi_button.c]
                          THUMB

                          AREA ||i.button_attach||, CODE, READONLY, ALIGN=1

                  button_attach PROC
;;;47       */
;;;48     void button_attach(struct button* handle, PressEvent event, BtnCallback cb)
000000  f1000308          ADD      r3,r0,#8
;;;49     {
;;;50         handle->cb[event] = cb;
000004  f8432021          STR      r2,[r3,r1,LSL #2]
;;;51     }
000008  4770              BX       lr
;;;52     
                          ENDP


                          AREA ||i.button_handler||, CODE, READONLY, ALIGN=1

                  button_handler PROC
;;;67       */
;;;68     void button_handler(struct button* handle)
000000  b570              PUSH     {r4-r6,lr}
;;;69     {
000002  4604              MOV      r4,r0
;;;70         uint8_t read_gpio_level = handle->hal_button_Level();
000004  6860              LDR      r0,[r4,#4]
000006  4780              BLX      r0
000008  4605              MOV      r5,r0
;;;71     
;;;72         //ticks counter working..
;;;73         if((handle->state) > 0)
00000a  78e0              LDRB     r0,[r4,#3]
00000c  f0000007          AND      r0,r0,#7
000010  2800              CMP      r0,#0
000012  dd02              BLE      |L2.26|
;;;74         {
;;;75             handle->ticks++;
000014  8820              LDRH     r0,[r4,#0]
000016  1c40              ADDS     r0,r0,#1
000018  8020              STRH     r0,[r4,#0]
                  |L2.26|
;;;76         }
;;;77     
;;;78         /*------------button debounce handle---------------*/
;;;79         if(read_gpio_level != handle->button_level)
00001a  78e0              LDRB     r0,[r4,#3]
00001c  ebb51fd0          CMP      r5,r0,LSR #7
000020  d013              BEQ      |L2.74|
;;;80         {
;;;81             //not equal to prev one
;;;82             //continue read 3 times same new level change
;;;83             if(++(handle->debounce_cnt) >= DEBOUNCE_TICKS)
000022  78e0              LDRB     r0,[r4,#3]
000024  08c0              LSRS     r0,r0,#3
000026  1c40              ADDS     r0,r0,#1
000028  78e1              LDRB     r1,[r4,#3]
00002a  f36001c5          BFI      r1,r0,#3,#3
00002e  70e1              STRB     r1,[r4,#3]
000030  f3c100c2          UBFX     r0,r1,#3,#3
000034  2803              CMP      r0,#3
000036  db0c              BLT      |L2.82|
;;;84             {
;;;85                 handle->button_level = read_gpio_level;
000038  78e0              LDRB     r0,[r4,#3]
00003a  f36510c7          BFI      r0,r5,#7,#1
00003e  70e0              STRB     r0,[r4,#3]
;;;86                 handle->debounce_cnt = 0;
000040  78e0              LDRB     r0,[r4,#3]
000042  f0200038          BIC      r0,r0,#0x38
000046  70e0              STRB     r0,[r4,#3]
000048  e003              B        |L2.82|
                  |L2.74|
;;;87             }
;;;88         }
;;;89         else
;;;90         {
;;;91             // leved not change ,counter reset.
;;;92             handle->debounce_cnt = 0;
00004a  78e0              LDRB     r0,[r4,#3]
00004c  f0200038          BIC      r0,r0,#0x38
000050  70e0              STRB     r0,[r4,#3]
                  |L2.82|
;;;93         }
;;;94     
;;;95         /*-----------------State machine-------------------*/
;;;96         switch (handle->state)
000052  78e0              LDRB     r0,[r4,#3]
000054  f0000007          AND      r0,r0,#7
000058  2806              CMP      r0,#6
00005a  d226              BCS      |L2.170|
00005c  e8dff000          TBB      [pc,r0]
000060  0326529c          DCB      0x03,0x26,0x52,0x9c
000064  e5bd              DCB      0xe5,0xbd
;;;97         {
;;;98         case 0:
;;;99             if(handle->button_level == handle->active_level)
000066  78e0              LDRB     r0,[r4,#3]
000068  f3c01080          UBFX     r0,r0,#6,#1
00006c  78e1              LDRB     r1,[r4,#3]
00006e  ebb01fd1          CMP      r0,r1,LSR #7
000072  d115              BNE      |L2.160|
;;;100            {
;;;101                handle->event = (uint8_t)PRESS_DOWN;
000074  78a0              LDRB     r0,[r4,#2]
000076  f02000f0          BIC      r0,r0,#0xf0
00007a  70a0              STRB     r0,[r4,#2]
;;;102                EVENT_CB(PRESS_DOWN);
00007c  68a0              LDR      r0,[r4,#8]
00007e  b110              CBZ      r0,|L2.134|
000080  4620              MOV      r0,r4
000082  68a1              LDR      r1,[r4,#8]
000084  4788              BLX      r1
                  |L2.134|
;;;103                handle->ticks  = 0;
000086  2000              MOVS     r0,#0
000088  8020              STRH     r0,[r4,#0]
;;;104                handle->repeat = 1;
00008a  78a0              LDRB     r0,[r4,#2]
00008c  f020000f          BIC      r0,r0,#0xf
000090  1c40              ADDS     r0,r0,#1
000092  70a0              STRB     r0,[r4,#2]
;;;105                handle->state  = 1;
000094  78e0              LDRB     r0,[r4,#3]
000096  f0200007          BIC      r0,r0,#7
00009a  1c40              ADDS     r0,r0,#1
00009c  70e0              STRB     r0,[r4,#3]
00009e  e004              B        |L2.170|
                  |L2.160|
;;;106            }
;;;107            else
;;;108            {
;;;109                handle->event = (uint8_t)NONE_PRESS;
0000a0  78a0              LDRB     r0,[r4,#2]
0000a2  f02000f0          BIC      r0,r0,#0xf0
0000a6  3080              ADDS     r0,r0,#0x80
0000a8  70a0              STRB     r0,[r4,#2]
                  |L2.170|
;;;110            }
;;;111            break;
0000aa  e0be              B        |L2.554|
;;;112    
;;;113        case 1:
;;;114            if(handle->button_level != handle->active_level)
0000ac  78e0              LDRB     r0,[r4,#3]
0000ae  f3c01080          UBFX     r0,r0,#6,#1
0000b2  78e1              LDRB     r1,[r4,#3]
0000b4  ebb01fd1          CMP      r0,r1,LSR #7
0000b8  d011              BEQ      |L2.222|
;;;115            {
;;;116                handle->event = (uint8_t)PRESS_UP;
0000ba  78a0              LDRB     r0,[r4,#2]
0000bc  f02000f0          BIC      r0,r0,#0xf0
0000c0  3010              ADDS     r0,r0,#0x10
0000c2  70a0              STRB     r0,[r4,#2]
;;;117                EVENT_CB(PRESS_UP);
0000c4  68e0              LDR      r0,[r4,#0xc]
0000c6  b110              CBZ      r0,|L2.206|
0000c8  4620              MOV      r0,r4
0000ca  68e1              LDR      r1,[r4,#0xc]
0000cc  4788              BLX      r1
                  |L2.206|
;;;118                handle->ticks = 0;
0000ce  2000              MOVS     r0,#0
0000d0  8020              STRH     r0,[r4,#0]
;;;119                handle->state = 2;
0000d2  78e0              LDRB     r0,[r4,#3]
0000d4  f0200007          BIC      r0,r0,#7
0000d8  1c80              ADDS     r0,r0,#2
0000da  70e0              STRB     r0,[r4,#3]
0000dc  e011              B        |L2.258|
                  |L2.222|
;;;120    
;;;121            }
;;;122            else if(handle->ticks > LONG_TICKS)
0000de  8820              LDRH     r0,[r4,#0]
0000e0  28c8              CMP      r0,#0xc8
0000e2  dd0e              BLE      |L2.258|
;;;123            {
;;;124                handle->event = (uint8_t)LONG_PRESS_START;
0000e4  78a0              LDRB     r0,[r4,#2]
0000e6  f02000f0          BIC      r0,r0,#0xf0
0000ea  3050              ADDS     r0,r0,#0x50
0000ec  70a0              STRB     r0,[r4,#2]
;;;125                EVENT_CB(LONG_PRESS_START);
0000ee  69e0              LDR      r0,[r4,#0x1c]
0000f0  b110              CBZ      r0,|L2.248|
0000f2  4620              MOV      r0,r4
0000f4  69e1              LDR      r1,[r4,#0x1c]
0000f6  4788              BLX      r1
                  |L2.248|
;;;126                handle->state = 5;
0000f8  78e0              LDRB     r0,[r4,#3]
0000fa  f0200007          BIC      r0,r0,#7
0000fe  1d40              ADDS     r0,r0,#5
000100  70e0              STRB     r0,[r4,#3]
                  |L2.258|
;;;127            }
;;;128            break;
000102  e092              B        |L2.554|
;;;129    
;;;130        case 2:
;;;131            if(handle->button_level == handle->active_level)
000104  78e0              LDRB     r0,[r4,#3]
000106  f3c01080          UBFX     r0,r0,#6,#1
00010a  78e1              LDRB     r1,[r4,#3]
00010c  ebb01fd1          CMP      r0,r1,LSR #7
000110  d11b              BNE      |L2.330|
;;;132            {
;;;133                handle->event = (uint8_t)PRESS_DOWN;
000112  78a0              LDRB     r0,[r4,#2]
000114  f02000f0          BIC      r0,r0,#0xf0
000118  70a0              STRB     r0,[r4,#2]
;;;134                EVENT_CB(PRESS_DOWN);
00011a  68a0              LDR      r0,[r4,#8]
00011c  b110              CBZ      r0,|L2.292|
00011e  4620              MOV      r0,r4
000120  68a1              LDR      r1,[r4,#8]
000122  4788              BLX      r1
                  |L2.292|
;;;135                handle->repeat++;
000124  78a0              LDRB     r0,[r4,#2]
000126  1c40              ADDS     r0,r0,#1
000128  78a1              LDRB     r1,[r4,#2]
00012a  f3600103          BFI      r1,r0,#0,#4
00012e  70a1              STRB     r1,[r4,#2]
;;;136                EVENT_CB(PRESS_REPEAT);
000130  6920              LDR      r0,[r4,#0x10]
000132  b110              CBZ      r0,|L2.314|
000134  4620              MOV      r0,r4
000136  6921              LDR      r1,[r4,#0x10]
000138  4788              BLX      r1
                  |L2.314|
;;;137                handle->ticks = 0;
00013a  2000              MOVS     r0,#0
00013c  8020              STRH     r0,[r4,#0]
;;;138                handle->state = 3;
00013e  78e0              LDRB     r0,[r4,#3]
000140  f0200007          BIC      r0,r0,#7
000144  1cc0              ADDS     r0,r0,#3
000146  70e0              STRB     r0,[r4,#3]
000148  e025              B        |L2.406|
                  |L2.330|
;;;139            }
;;;140            else if(handle->ticks > SHORT_TICKS)
00014a  8820              LDRH     r0,[r4,#0]
00014c  281e              CMP      r0,#0x1e
00014e  dd22              BLE      |L2.406|
;;;141            {
;;;142                if(handle->repeat == 1)
000150  78a0              LDRB     r0,[r4,#2]
000152  f000000f          AND      r0,r0,#0xf
000156  2801              CMP      r0,#1
000158  d10a              BNE      |L2.368|
;;;143                {
;;;144                    handle->event = (uint8_t)SINGLE_CLICK;
00015a  78a0              LDRB     r0,[r4,#2]
00015c  f02000f0          BIC      r0,r0,#0xf0
000160  3030              ADDS     r0,r0,#0x30
000162  70a0              STRB     r0,[r4,#2]
;;;145                    EVENT_CB(SINGLE_CLICK);
000164  6960              LDR      r0,[r4,#0x14]
000166  b190              CBZ      r0,|L2.398|
000168  4620              MOV      r0,r4
00016a  6961              LDR      r1,[r4,#0x14]
00016c  4788              BLX      r1
00016e  e00e              B        |L2.398|
                  |L2.368|
;;;146                }
;;;147                else if(handle->repeat == 2)
000170  78a0              LDRB     r0,[r4,#2]
000172  f000000f          AND      r0,r0,#0xf
000176  2802              CMP      r0,#2
000178  d109              BNE      |L2.398|
;;;148                {
;;;149                    handle->event = (uint8_t)DOUBLE_CLICK;
00017a  78a0              LDRB     r0,[r4,#2]
00017c  f02000f0          BIC      r0,r0,#0xf0
000180  3040              ADDS     r0,r0,#0x40
000182  70a0              STRB     r0,[r4,#2]
;;;150                    EVENT_CB(DOUBLE_CLICK);
000184  69a0              LDR      r0,[r4,#0x18]
000186  b110              CBZ      r0,|L2.398|
000188  4620              MOV      r0,r4
00018a  69a1              LDR      r1,[r4,#0x18]
00018c  4788              BLX      r1
                  |L2.398|
;;;151                }
;;;152                handle->state = 0;
00018e  78e0              LDRB     r0,[r4,#3]
000190  f0200007          BIC      r0,r0,#7
000194  70e0              STRB     r0,[r4,#3]
                  |L2.406|
;;;153            }
;;;154            break;
000196  e048              B        |L2.554|
;;;155    
;;;156        case 3:
;;;157            if(handle->button_level != handle->active_level)
000198  78e0              LDRB     r0,[r4,#3]
00019a  f3c01080          UBFX     r0,r0,#6,#1
00019e  78e1              LDRB     r1,[r4,#3]
0001a0  ebb01fd1          CMP      r0,r1,LSR #7
0001a4  d018              BEQ      |L2.472|
;;;158            {
;;;159                handle->event = (uint8_t)PRESS_UP;
0001a6  78a0              LDRB     r0,[r4,#2]
0001a8  f02000f0          BIC      r0,r0,#0xf0
0001ac  3010              ADDS     r0,r0,#0x10
0001ae  70a0              STRB     r0,[r4,#2]
;;;160                EVENT_CB(PRESS_UP);
0001b0  68e0              LDR      r0,[r4,#0xc]
0001b2  b110              CBZ      r0,|L2.442|
0001b4  4620              MOV      r0,r4
0001b6  68e1              LDR      r1,[r4,#0xc]
0001b8  4788              BLX      r1
                  |L2.442|
;;;161    
;;;162                if(handle->ticks < SHORT_TICKS)
0001ba  8820              LDRH     r0,[r4,#0]
0001bc  281e              CMP      r0,#0x1e
0001be  da07              BGE      |L2.464|
;;;163                {
;;;164                    handle->ticks = 0;
0001c0  2000              MOVS     r0,#0
0001c2  8020              STRH     r0,[r4,#0]
;;;165                    handle->state = 2;
0001c4  78e0              LDRB     r0,[r4,#3]
0001c6  f0200007          BIC      r0,r0,#7
0001ca  1c80              ADDS     r0,r0,#2
0001cc  70e0              STRB     r0,[r4,#3]
0001ce  e003              B        |L2.472|
                  |L2.464|
;;;166                }
;;;167                else
;;;168                {
;;;169                    handle->state = 0;
0001d0  78e0              LDRB     r0,[r4,#3]
0001d2  f0200007          BIC      r0,r0,#7
0001d6  70e0              STRB     r0,[r4,#3]
                  |L2.472|
;;;170                }
;;;171            }
;;;172            break;
0001d8  e027              B        |L2.554|
;;;173    
;;;174        case 5:
;;;175            if(handle->button_level == handle->active_level)
0001da  78e0              LDRB     r0,[r4,#3]
0001dc  f3c01080          UBFX     r0,r0,#6,#1
0001e0  78e1              LDRB     r1,[r4,#3]
0001e2  ebb01fd1          CMP      r0,r1,LSR #7
0001e6  d111              BNE      |L2.524|
;;;176            {
;;;177                handle->event = (uint8_t)LONG_PRESS_HOLD;
0001e8  78a0              LDRB     r0,[r4,#2]
0001ea  f02000f0          BIC      r0,r0,#0xf0
0001ee  3060              ADDS     r0,r0,#0x60
0001f0  70a0              STRB     r0,[r4,#2]
;;;178                if (handle->ticks % LONG_HOLD_CYC == 0)
0001f2  8820              LDRH     r0,[r4,#0]
0001f4  2132              MOVS     r1,#0x32
0001f6  fb90f2f1          SDIV     r2,r0,r1
0001fa  fb010012          MLS      r0,r1,r2,r0
0001fe  b998              CBNZ     r0,|L2.552|
;;;179                {
;;;180                    EVENT_CB(LONG_PRESS_HOLD);
000200  6a20              LDR      r0,[r4,#0x20]
000202  b188              CBZ      r0,|L2.552|
000204  4620              MOV      r0,r4
000206  6a21              LDR      r1,[r4,#0x20]
000208  4788              BLX      r1
00020a  e00d              B        |L2.552|
                  |L2.524|
;;;181                }
;;;182            }
;;;183            else
;;;184            {
;;;185                handle->event = (uint8_t)PRESS_UP;
00020c  78a0              LDRB     r0,[r4,#2]
00020e  f02000f0          BIC      r0,r0,#0xf0
000212  3010              ADDS     r0,r0,#0x10
000214  70a0              STRB     r0,[r4,#2]
;;;186                EVENT_CB(PRESS_UP);
000216  68e0              LDR      r0,[r4,#0xc]
000218  b110              CBZ      r0,|L2.544|
00021a  4620              MOV      r0,r4
00021c  68e1              LDR      r1,[r4,#0xc]
00021e  4788              BLX      r1
                  |L2.544|
;;;187    
;;;188                handle->state = 0;
000220  78e0              LDRB     r0,[r4,#3]
000222  f0200007          BIC      r0,r0,#7
000226  70e0              STRB     r0,[r4,#3]
                  |L2.552|
;;;189            }
;;;190            break;
000228  bf00              NOP      
                  |L2.554|
00022a  bf00              NOP                            ;111
;;;191        }
;;;192    }
00022c  bd70              POP      {r4-r6,pc}
;;;193    
                          ENDP


                          AREA ||i.button_init||, CODE, READONLY, ALIGN=1

                  button_init PROC
;;;31       */
;;;32     void button_init(struct button* handle, uint8_t(*pin_level)(void), uint8_t active_level)
000000  b570              PUSH     {r4-r6,lr}
;;;33     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;34         memset(handle, 0, sizeof(struct button));
000008  2128              MOVS     r1,#0x28
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       __aeabi_memclr4
;;;35         handle->event = (uint8_t)NONE_PRESS;
000010  78a0              LDRB     r0,[r4,#2]
000012  f02000f0          BIC      r0,r0,#0xf0
000016  3080              ADDS     r0,r0,#0x80
000018  70a0              STRB     r0,[r4,#2]
;;;36         handle->hal_button_Level = pin_level;
00001a  6065              STR      r5,[r4,#4]
;;;37         handle->button_level = handle->hal_button_Level();
00001c  6860              LDR      r0,[r4,#4]
00001e  4780              BLX      r0
000020  78e1              LDRB     r1,[r4,#3]
000022  f36011c7          BFI      r1,r0,#7,#1
000026  70e1              STRB     r1,[r4,#3]
;;;38         handle->active_level = active_level;
000028  78e0              LDRB     r0,[r4,#3]
00002a  f3661086          BFI      r0,r6,#6,#1
00002e  70e0              STRB     r0,[r4,#3]
;;;39     }
000030  bd70              POP      {r4-r6,pc}
;;;40     
                          ENDP


                          AREA ||i.button_start||, CODE, READONLY, ALIGN=2

                  button_start PROC
;;;198      */
;;;199    int button_start(struct button* handle)
000000  4601              MOV      r1,r0
;;;200    {
;;;201        struct button* target = head_handle;
000002  4809              LDR      r0,|L4.40|
000004  6802              LDR      r2,[r0,#0]  ; head_handle
;;;202    
;;;203        while(target)
000006  e005              B        |L4.20|
                  |L4.8|
;;;204        {
;;;205            if(target == handle)
000008  428a              CMP      r2,r1
00000a  d102              BNE      |L4.18|
;;;206            {
;;;207                return -1;  //already exist.
00000c  f04f30ff          MOV      r0,#0xffffffff
                  |L4.16|
;;;208            }
;;;209    
;;;210            target = target->next;
;;;211        }
;;;212    
;;;213        handle->next = head_handle;
;;;214        head_handle = handle;
;;;215    
;;;216        return 0;
;;;217    }
000010  4770              BX       lr
                  |L4.18|
000012  6a52              LDR      r2,[r2,#0x24]         ;210
                  |L4.20|
000014  2a00              CMP      r2,#0                 ;203
000016  d1f7              BNE      |L4.8|
000018  4803              LDR      r0,|L4.40|
00001a  6800              LDR      r0,[r0,#0]            ;213  ; head_handle
00001c  6248              STR      r0,[r1,#0x24]         ;213
00001e  4802              LDR      r0,|L4.40|
000020  6001              STR      r1,[r0,#0]            ;214  ; head_handle
000022  2000              MOVS     r0,#0                 ;216
000024  e7f4              B        |L4.16|
;;;218    
                          ENDP

000026  0000              DCW      0x0000
                  |L4.40|
                          DCD      head_handle

                          AREA ||i.button_stop||, CODE, READONLY, ALIGN=2

                  button_stop PROC
;;;223      */
;;;224    void button_stop(struct button* handle)
000000  4602              MOV      r2,r0
;;;225    {
;;;226        struct button** curr;
;;;227    
;;;228        for(curr = &head_handle; *curr;)
000002  4807              LDR      r0,|L5.32|
000004  e008              B        |L5.24|
                  |L5.6|
;;;229        {
;;;230            struct button* entry = *curr;
000006  6801              LDR      r1,[r0,#0]
;;;231    
;;;232            if (entry == handle)
000008  4291              CMP      r1,r2
00000a  d102              BNE      |L5.18|
;;;233            {
;;;234                *curr = entry->next;
00000c  6a4b              LDR      r3,[r1,#0x24]
00000e  6003              STR      r3,[r0,#0]
000010  e001              B        |L5.22|
                  |L5.18|
;;;235            }
;;;236            else
;;;237            {
;;;238                curr = &entry->next;
000012  f1010024          ADD      r0,r1,#0x24
                  |L5.22|
;;;239            }
;;;240        }
000016  bf00              NOP      
                  |L5.24|
000018  6801              LDR      r1,[r0,#0]            ;228
00001a  2900              CMP      r1,#0                 ;228
00001c  d1f3              BNE      |L5.6|
;;;241    }
00001e  4770              BX       lr
;;;242    
                          ENDP

                  |L5.32|
                          DCD      head_handle

                          AREA ||i.button_ticks||, CODE, READONLY, ALIGN=2

                  button_ticks PROC
;;;247      */
;;;248    void button_ticks(void)
000000  b510              PUSH     {r4,lr}
;;;249    {
;;;250        struct button* target;
;;;251    
;;;252        for(target = head_handle; target != NULL; target = target->next)
000002  4805              LDR      r0,|L6.24|
000004  6804              LDR      r4,[r0,#0]  ; head_handle
000006  e003              B        |L6.16|
                  |L6.8|
;;;253        {
;;;254            button_handler(target);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       button_handler
00000e  6a64              LDR      r4,[r4,#0x24]         ;252
                  |L6.16|
000010  2c00              CMP      r4,#0                 ;252
000012  d1f9              BNE      |L6.8|
;;;255        }
;;;256    }
000014  bd10              POP      {r4,pc}
                          ENDP

000016  0000              DCW      0x0000
                  |L6.24|
                          DCD      head_handle

                          AREA ||i.get_button_event||, CODE, READONLY, ALIGN=1

                  get_button_event PROC
;;;57       */
;;;58     PressEvent get_button_event(struct button* handle)
000000  4601              MOV      r1,r0
;;;59     {
;;;60         return (PressEvent)(handle->event);
000002  7888              LDRB     r0,[r1,#2]
000004  0900              LSRS     r0,r0,#4
;;;61     }
000006  4770              BX       lr
;;;62     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  head_handle
                          DCD      0x00000000
