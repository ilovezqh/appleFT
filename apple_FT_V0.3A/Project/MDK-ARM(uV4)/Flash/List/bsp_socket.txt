; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\bsp_socket.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_socket.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\bsp_socket.crf ..\..\User\bsp_stm32f4xx\src\bsp_socket.c]
                          THUMB

                          AREA ||i.bsp_kiwi_ft_relay_off||, CODE, READONLY, ALIGN=2

                  bsp_kiwi_ft_relay_off PROC
;;;303    //关掉继电器 kiwi GPIO4|GPIO5 断开一切连接
;;;304    void bsp_kiwi_ft_relay_off(void)
000000  b510              PUSH     {r4,lr}
;;;305    {
;;;306        GPIO_ResetBits(GPIO_PORT_RELAY, GPIO_PIN_RELAY);
000002  2104              MOVS     r1,#4
000004  4801              LDR      r0,|L1.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;307    }
00000a  bd10              POP      {r4,pc}
;;;308    
                          ENDP

                  |L1.12|
                          DCD      0x40021000

                          AREA ||i.bsp_kiwi_ft_relay_on||, CODE, READONLY, ALIGN=2

                  bsp_kiwi_ft_relay_on PROC
;;;297    // 开继电器 kiwi GPIO4|GPIO5 接socket板载比较器用于hp offset校准
;;;298    void bsp_kiwi_ft_relay_on(void)
000000  b510              PUSH     {r4,lr}
;;;299    {
;;;300        GPIO_SetBits(GPIO_PORT_RELAY, GPIO_PIN_RELAY);
000002  2104              MOVS     r1,#4
000004  4801              LDR      r0,|L2.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;301    }
00000a  bd10              POP      {r4,pc}
;;;302    
                          ENDP

                  |L2.12|
                          DCD      0x40021000

                          AREA ||i.bsp_kiwi_onoff_deinit||, CODE, READONLY, ALIGN=2

                  bsp_kiwi_onoff_deinit PROC
;;;206    
;;;207    void bsp_kiwi_onoff_deinit(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;208    {
;;;209        GPIO_InitTypeDef GPIO_InitStructure;
;;;210    
;;;211    	/* 打开GPIO时钟 */
;;;212    	RCC_AHB1PeriphClockCmd(RCC_ALL_SOCKET, ENABLE);
000002  2101              MOVS     r1,#1
000004  2013              MOVS     r0,#0x13
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;213        bsp_kiwi_onoff_hi();
00000a  f7fffffe          BL       bsp_kiwi_onoff_hi
;;;214    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;		/* 设为输出口 */
00000e  2001              MOVS     r0,#1
000010  f88d0004          STRB     r0,[sp,#4]
;;;215    	GPIO_InitStructure.GPIO_OType = GPIO_OType_OD;		/* 设为推挽模式 */
000014  f88d0006          STRB     r0,[sp,#6]
;;;216    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	/* 上下拉电阻不使能 */
000018  2000              MOVS     r0,#0
00001a  f88d0007          STRB     r0,[sp,#7]
;;;217    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;	/* IO口最大速度 */
00001e  2003              MOVS     r0,#3
000020  f88d0005          STRB     r0,[sp,#5]
;;;218        
;;;219    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_ONOFF;
000024  2001              MOVS     r0,#1
000026  9000              STR      r0,[sp,#0]
;;;220    	GPIO_Init(GPIO_PORT_ONOFF, &GPIO_InitStructure);
000028  4669              MOV      r1,sp
00002a  4802              LDR      r0,|L3.52|
00002c  f7fffffe          BL       GPIO_Init
;;;221    }
000030  bd1c              POP      {r2-r4,pc}
;;;222    
                          ENDP

000032  0000              DCW      0x0000
                  |L3.52|
                          DCD      0x40020000

                          AREA ||i.bsp_kiwi_onoff_hi||, CODE, READONLY, ALIGN=2

                  bsp_kiwi_onoff_hi PROC
;;;222    
;;;223    void bsp_kiwi_onoff_hi(void)
000000  b510              PUSH     {r4,lr}
;;;224    {
;;;225        GPIO_SetBits(GPIO_PORT_ONOFF, GPIO_PIN_ONOFF);
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L4.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;226    }
00000a  bd10              POP      {r4,pc}
;;;227    
                          ENDP

                  |L4.12|
                          DCD      0x40020000

                          AREA ||i.bsp_kiwi_onoff_init||, CODE, READONLY, ALIGN=2

                  bsp_kiwi_onoff_init PROC
;;;187    
;;;188    void bsp_kiwi_onoff_init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;189    {
;;;190    	GPIO_InitTypeDef GPIO_InitStructure;
;;;191    
;;;192    	/* 打开GPIO时钟 */
;;;193    	RCC_AHB1PeriphClockCmd(RCC_ALL_SOCKET, ENABLE);
000002  2101              MOVS     r1,#1
000004  2013              MOVS     r0,#0x13
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;194     
;;;195     
;;;196        bsp_kiwi_onoff_hi();
00000a  f7fffffe          BL       bsp_kiwi_onoff_hi
;;;197    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;		/* 设为输出口 */
00000e  2001              MOVS     r0,#1
000010  f88d0004          STRB     r0,[sp,#4]
;;;198    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		/* 设为推挽模式 */
000014  2000              MOVS     r0,#0
000016  f88d0006          STRB     r0,[sp,#6]
;;;199    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;	    /* 上下拉电阻不使能 */
00001a  2001              MOVS     r0,#1
00001c  f88d0007          STRB     r0,[sp,#7]
;;;200    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;	/* IO口最大速度 */
000020  2003              MOVS     r0,#3
000022  f88d0005          STRB     r0,[sp,#5]
;;;201     
;;;202    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_ONOFF;
000026  2001              MOVS     r0,#1
000028  9000              STR      r0,[sp,#0]
;;;203    	GPIO_Init(GPIO_PORT_ONOFF, &GPIO_InitStructure);
00002a  4669              MOV      r1,sp
00002c  4801              LDR      r0,|L5.52|
00002e  f7fffffe          BL       GPIO_Init
;;;204    }
000032  bd1c              POP      {r2-r4,pc}
;;;205    
                          ENDP

                  |L5.52|
                          DCD      0x40020000

                          AREA ||i.bsp_kiwi_onoff_lo||, CODE, READONLY, ALIGN=2

                  bsp_kiwi_onoff_lo PROC
;;;227    
;;;228    void bsp_kiwi_onoff_lo(void)
000000  b510              PUSH     {r4,lr}
;;;229    {
;;;230        GPIO_ResetBits(GPIO_PORT_ONOFF, GPIO_PIN_ONOFF);
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L6.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;231    }
00000a  bd10              POP      {r4,pc}
;;;232    
                          ENDP

                  |L6.12|
                          DCD      0x40020000

                          AREA ||i.bsp_relay_toggle||, CODE, READONLY, ALIGN=2

                  bsp_relay_toggle PROC
;;;308    
;;;309    void bsp_relay_toggle(void)
000000  b510              PUSH     {r4,lr}
;;;310    {
;;;311        GPIO_ToggleBits(GPIO_PORT_RELAY, GPIO_PIN_RELAY);
000002  2104              MOVS     r1,#4
000004  4801              LDR      r0,|L7.12|
000006  f7fffffe          BL       GPIO_ToggleBits
;;;312    }
00000a  bd10              POP      {r4,pc}
;;;313    
                          ENDP

                  |L7.12|
                          DCD      0x40021000

                          AREA ||i.bsp_socket_init||, CODE, READONLY, ALIGN=2

                  bsp_socket_init PROC
;;;63     */
;;;64     void bsp_socket_init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;65     {
;;;66     	GPIO_InitTypeDef GPIO_InitStructure;
;;;67     
;;;68     	/* 打开GPIO时钟 */
;;;69     	RCC_AHB1PeriphClockCmd(RCC_ALL_SOCKET, ENABLE);
000002  2101              MOVS     r1,#1
000004  2013              MOVS     r0,#0x13
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;70      
;;;71     	bsp_kiwi_ft_relay_off();  
00000a  f7fffffe          BL       bsp_kiwi_ft_relay_off
;;;72         socket_touch_off();
00000e  f7fffffe          BL       socket_touch_off
;;;73         socket_i_chip();//socket_i_self();
000012  f7fffffe          BL       socket_i_chip
;;;74         socket_asu_pu_on();
000016  f7fffffe          BL       socket_asu_pu_on
;;;75         socket_prst_ctl(prst_state_float);
00001a  2000              MOVS     r0,#0
00001c  f7fffffe          BL       socket_prst_ctl
;;;76         socket_ivref_vref();
000020  f7fffffe          BL       socket_ivref_vref
;;;77         GPIO_SetBits(GPIO_PORT_APPLE_PRST, GPIO_PIN_APPLE_PRST);
000024  f44f7180          MOV      r1,#0x100
000028  481c              LDR      r0,|L8.156|
00002a  f7fffffe          BL       GPIO_SetBits
;;;78         
;;;79         
;;;80     	GPIO_InitStructure.GPIO_Mode    = GPIO_Mode_OUT;		/* 设为输出口 */
00002e  2001              MOVS     r0,#1
000030  f88d0004          STRB     r0,[sp,#4]
;;;81     	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;		/* 设为推挽模式 */
000034  2000              MOVS     r0,#0
000036  f88d0006          STRB     r0,[sp,#6]
;;;82     	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_UP;	        /* 上下拉电阻不使能 */
00003a  2001              MOVS     r0,#1
00003c  f88d0007          STRB     r0,[sp,#7]
;;;83     	GPIO_InitStructure.GPIO_Speed   = GPIO_Speed_100MHz;	/* IO口最大速度 */
000040  2003              MOVS     r0,#3
000042  f88d0005          STRB     r0,[sp,#5]
;;;84      
;;;85         GPIO_InitStructure.GPIO_Pin = GPIO_PIN_RELAY;
000046  2004              MOVS     r0,#4
000048  9000              STR      r0,[sp,#0]
;;;86     	GPIO_Init(GPIO_PORT_RELAY, &GPIO_InitStructure);
00004a  4669              MOV      r1,sp
00004c  4814              LDR      r0,|L8.160|
00004e  f7fffffe          BL       GPIO_Init
;;;87         
;;;88         
;;;89         
;;;90         GPIO_InitStructure.GPIO_Pin = GPIO_PIN_TOUCH_TEST;
000052  2010              MOVS     r0,#0x10
000054  9000              STR      r0,[sp,#0]
;;;91     	GPIO_Init(GPIO_PORT_TOUCH_TEST, &GPIO_InitStructure);
000056  4669              MOV      r1,sp
000058  4811              LDR      r0,|L8.160|
00005a  f7fffffe          BL       GPIO_Init
;;;92         
;;;93         GPIO_InitStructure.GPIO_Pin = GPIO_PIN_I_SELF;
00005e  2008              MOVS     r0,#8
000060  9000              STR      r0,[sp,#0]
;;;94     	GPIO_Init(GPIO_PORT_I_SELF, &GPIO_InitStructure);
000062  4669              MOV      r1,sp
000064  480e              LDR      r0,|L8.160|
000066  f7fffffe          BL       GPIO_Init
;;;95      
;;;96         GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IVREF_CALI;
00006a  2020              MOVS     r0,#0x20
00006c  9000              STR      r0,[sp,#0]
;;;97     	GPIO_Init(GPIO_PORT_IVREF_CALI, &GPIO_InitStructure);
00006e  4669              MOV      r1,sp
000070  480b              LDR      r0,|L8.160|
000072  f7fffffe          BL       GPIO_Init
;;;98         
;;;99         GPIO_InitStructure.GPIO_Mode    = GPIO_Mode_OUT;		/* 设为输出口 */
000076  2001              MOVS     r0,#1
000078  f88d0004          STRB     r0,[sp,#4]
;;;100    	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;		/* 设为推挽模式 */
00007c  2000              MOVS     r0,#0
00007e  f88d0006          STRB     r0,[sp,#6]
;;;101    	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;	        /* 上下拉电阻不使能 */
000082  f88d0007          STRB     r0,[sp,#7]
;;;102    	GPIO_InitStructure.GPIO_Speed   = GPIO_Speed_100MHz;	/* IO口最大速度 */
000086  2003              MOVS     r0,#3
000088  f88d0005          STRB     r0,[sp,#5]
;;;103        
;;;104        GPIO_InitStructure.GPIO_Pin = GPIO_PIN_ASU_PU_EN;
00008c  f44f7080          MOV      r0,#0x100
000090  9000              STR      r0,[sp,#0]
;;;105    	GPIO_Init(GPIO_PORT_ASU_PU_EN, &GPIO_InitStructure);
000092  4669              MOV      r1,sp
000094  4803              LDR      r0,|L8.164|
000096  f7fffffe          BL       GPIO_Init
;;;106    }
00009a  bd1c              POP      {r2-r4,pc}
;;;107    
                          ENDP

                  |L8.156|
                          DCD      0x40020400
                  |L8.160|
                          DCD      0x40021000
                  |L8.164|
                          DCD      0x40020000

                          AREA ||i.bsp_socket_ldo3v3_disable||, CODE, READONLY, ALIGN=2

                  bsp_socket_ldo3v3_disable PROC
;;;291    
;;;292    void bsp_socket_ldo3v3_disable(void)
000000  b510              PUSH     {r4,lr}
;;;293    {
;;;294        GPIO_ResetBits(GPIO_PORT_LDO3V3_EN, GPIO_PIN_LDO3V3_EN);
000002  f44f4100          MOV      r1,#0x8000
000006  4802              LDR      r0,|L9.16|
000008  f7fffffe          BL       GPIO_ResetBits
;;;295    }
00000c  bd10              POP      {r4,pc}
;;;296    
                          ENDP

00000e  0000              DCW      0x0000
                  |L9.16|
                          DCD      0x40020000

                          AREA ||i.bsp_socket_ldo3v3_enable||, CODE, READONLY, ALIGN=2

                  bsp_socket_ldo3v3_enable PROC
;;;286    
;;;287    void bsp_socket_ldo3v3_enable(void)
000000  b510              PUSH     {r4,lr}
;;;288    {
;;;289        GPIO_SetBits(GPIO_PORT_LDO3V3_EN, GPIO_PIN_LDO3V3_EN);
000002  f44f4100          MOV      r1,#0x8000
000006  4802              LDR      r0,|L10.16|
000008  f7fffffe          BL       GPIO_SetBits
;;;290    }
00000c  bd10              POP      {r4,pc}
;;;291    
                          ENDP

00000e  0000              DCW      0x0000
                  |L10.16|
                          DCD      0x40020000

                          AREA ||i.bsp_socket_ldo3v3_init||, CODE, READONLY, ALIGN=2

                  bsp_socket_ldo3v3_init PROC
;;;265    
;;;266    void bsp_socket_ldo3v3_init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;267    {
;;;268     
;;;269        GPIO_InitTypeDef GPIO_InitStructure;
;;;270    
;;;271    	/* 打开GPIO时钟 */
;;;272    	RCC_AHB1PeriphClockCmd(RCC_ALL_SOCKET, ENABLE);
000002  2101              MOVS     r1,#1
000004  2013              MOVS     r0,#0x13
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;273        GPIO_ResetBits(GPIO_PORT_LDO3V3_EN, GPIO_PIN_LDO3V3_EN);
00000a  f44f4100          MOV      r1,#0x8000
00000e  480b              LDR      r0,|L11.60|
000010  f7fffffe          BL       GPIO_ResetBits
;;;274     
;;;275      
;;;276    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;		/* 设为输出口 */
000014  2001              MOVS     r0,#1
000016  f88d0004          STRB     r0,[sp,#4]
;;;277    	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		/* 设为推挽模式 */
00001a  2000              MOVS     r0,#0
00001c  f88d0006          STRB     r0,[sp,#6]
;;;278    	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;	    /* 上下拉电阻不使能 */
000020  2001              MOVS     r0,#1
000022  f88d0007          STRB     r0,[sp,#7]
;;;279    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;	/* IO口最大速度 */
000026  2003              MOVS     r0,#3
000028  f88d0005          STRB     r0,[sp,#5]
;;;280     
;;;281    	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LDO3V3_EN;
00002c  f44f4000          MOV      r0,#0x8000
000030  9000              STR      r0,[sp,#0]
;;;282    	GPIO_Init(GPIO_PORT_LDO3V3_EN, &GPIO_InitStructure);
000032  4669              MOV      r1,sp
000034  4801              LDR      r0,|L11.60|
000036  f7fffffe          BL       GPIO_Init
;;;283        
;;;284     
;;;285    }
00003a  bd1c              POP      {r2-r4,pc}
;;;286    
                          ENDP

                  |L11.60|
                          DCD      0x40020000

                          AREA ||i.socket_asu_pu_off||, CODE, READONLY, ALIGN=2

                  socket_asu_pu_off PROC
;;;137    
;;;138    void socket_asu_pu_off(void)
000000  b510              PUSH     {r4,lr}
;;;139    {
;;;140        GPIO_ResetBits(GPIO_PORT_ASU_PU_EN, GPIO_PIN_ASU_PU_EN);
000002  f44f7180          MOV      r1,#0x100
000006  4802              LDR      r0,|L12.16|
000008  f7fffffe          BL       GPIO_ResetBits
;;;141    }
00000c  bd10              POP      {r4,pc}
;;;142    
                          ENDP

00000e  0000              DCW      0x0000
                  |L12.16|
                          DCD      0x40020000

                          AREA ||i.socket_asu_pu_on||, CODE, READONLY, ALIGN=2

                  socket_asu_pu_on PROC
;;;132    
;;;133    void socket_asu_pu_on(void)
000000  b510              PUSH     {r4,lr}
;;;134    {
;;;135        GPIO_SetBits(GPIO_PORT_ASU_PU_EN, GPIO_PIN_ASU_PU_EN);
000002  f44f7180          MOV      r1,#0x100
000006  4802              LDR      r0,|L13.16|
000008  f7fffffe          BL       GPIO_SetBits
;;;136    }
00000c  bd10              POP      {r4,pc}
;;;137    
                          ENDP

00000e  0000              DCW      0x0000
                  |L13.16|
                          DCD      0x40020000

                          AREA ||i.socket_i_chip||, CODE, READONLY, ALIGN=2

                  socket_i_chip PROC
;;;248    
;;;249    void socket_i_chip(void)
000000  b510              PUSH     {r4,lr}
;;;250    {
;;;251        GPIO_ResetBits(GPIO_PORT_I_SELF, GPIO_PIN_I_SELF);
000002  2108              MOVS     r1,#8
000004  4801              LDR      r0,|L14.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;252    }
00000a  bd10              POP      {r4,pc}
;;;253    
                          ENDP

                  |L14.12|
                          DCD      0x40021000

                          AREA ||i.socket_i_self||, CODE, READONLY, ALIGN=2

                  socket_i_self PROC
;;;243    /* socket功耗自测校准，切换到 200K的负载上进行功耗校准 高电平：切到芯片功耗回路，低电平：切到校准回路 */
;;;244    void socket_i_self(void)
000000  b510              PUSH     {r4,lr}
;;;245    {
;;;246        GPIO_SetBits(GPIO_PORT_I_SELF, GPIO_PIN_I_SELF);
000002  2108              MOVS     r1,#8
000004  4801              LDR      r0,|L15.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;247    }
00000a  bd10              POP      {r4,pc}
;;;248    
                          ENDP

                  |L15.12|
                          DCD      0x40021000

                          AREA ||i.socket_ivref_iref||, CODE, READONLY, ALIGN=2

                  socket_ivref_iref PROC
;;;254    /* IREF/VREF校准模式切换， 高电平：IREF（通过ADC123_IN3_PA3），低电平：VREF（通过ADC123_IN2_PA2） */
;;;255    void socket_ivref_iref(void)
000000  b510              PUSH     {r4,lr}
;;;256    {
;;;257        GPIO_SetBits(GPIO_PORT_IVREF_CALI, GPIO_PIN_IVREF_CALI);
000002  2120              MOVS     r1,#0x20
000004  4801              LDR      r0,|L16.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;258    }
00000a  bd10              POP      {r4,pc}
;;;259    
                          ENDP

                  |L16.12|
                          DCD      0x40021000

                          AREA ||i.socket_ivref_vref||, CODE, READONLY, ALIGN=2

                  socket_ivref_vref PROC
;;;259    
;;;260    void socket_ivref_vref(void)
000000  b510              PUSH     {r4,lr}
;;;261    {
;;;262        GPIO_ResetBits(GPIO_PORT_IVREF_CALI, GPIO_PIN_IVREF_CALI);
000002  2120              MOVS     r1,#0x20
000004  4801              LDR      r0,|L17.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;263    }
00000a  bd10              POP      {r4,pc}
;;;264    
                          ENDP

                  |L17.12|
                          DCD      0x40021000

                          AREA ||i.socket_prst_ctl||, CODE, READONLY, ALIGN=2

                  socket_prst_ctl PROC
;;;142    
;;;143    void socket_prst_ctl(enum  prst_state_e state)
000000  b51c              PUSH     {r2-r4,lr}
;;;144    {
000002  4604              MOV      r4,r0
;;;145        GPIO_InitTypeDef GPIO_InitStructure={0};
000004  2000              MOVS     r0,#0
000006  9000              STR      r0,[sp,#0]
000008  9001              STR      r0,[sp,#4]
;;;146        
;;;147        switch(state)
00000a  b124              CBZ      r4,|L18.22|
00000c  2c01              CMP      r4,#1
00000e  d016              BEQ      |L18.62|
000010  2c02              CMP      r4,#2
000012  d146              BNE      |L18.162|
000014  e02c              B        |L18.112|
                  |L18.22|
;;;148        {
;;;149            case prst_state_float:
;;;150            {
;;;151                GPIO_InitStructure.GPIO_Mode    = GPIO_Mode_IN;		/* 设为输出口 */
000016  2000              MOVS     r0,#0
000018  f88d0004          STRB     r0,[sp,#4]
;;;152                GPIO_InitStructure.GPIO_OType   = GPIO_OType_OD;		/* 设为推挽模式 */
00001c  2001              MOVS     r0,#1
00001e  f88d0006          STRB     r0,[sp,#6]
;;;153                GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;	        /* 上下拉电阻不使能 */
000022  2000              MOVS     r0,#0
000024  f88d0007          STRB     r0,[sp,#7]
;;;154                GPIO_InitStructure.GPIO_Speed   = GPIO_Speed_100MHz;	/* IO口最大速度 */
000028  2003              MOVS     r0,#3
00002a  f88d0005          STRB     r0,[sp,#5]
;;;155             
;;;156                GPIO_InitStructure.GPIO_Pin = GPIO_PIN_APPLE_PRST;
00002e  f44f7080          MOV      r0,#0x100
000032  9000              STR      r0,[sp,#0]
;;;157                GPIO_Init(GPIO_PORT_APPLE_PRST, &GPIO_InitStructure);
000034  4669              MOV      r1,sp
000036  481c              LDR      r0,|L18.168|
000038  f7fffffe          BL       GPIO_Init
;;;158            }break;
00003c  e032              B        |L18.164|
                  |L18.62|
;;;159            
;;;160            case prst_state_hi:
;;;161            {
;;;162                GPIO_SetBits(GPIO_PORT_APPLE_PRST, GPIO_PIN_APPLE_PRST);
00003e  f44f7180          MOV      r1,#0x100
000042  4819              LDR      r0,|L18.168|
000044  f7fffffe          BL       GPIO_SetBits
;;;163                GPIO_InitStructure.GPIO_Mode    = GPIO_Mode_OUT;		/* 设为输出口 */
000048  2001              MOVS     r0,#1
00004a  f88d0004          STRB     r0,[sp,#4]
;;;164                GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;		/* 设为推挽模式 */
00004e  2000              MOVS     r0,#0
000050  f88d0006          STRB     r0,[sp,#6]
;;;165                GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_UP;	        /* 上下拉电阻不使能 */
000054  2001              MOVS     r0,#1
000056  f88d0007          STRB     r0,[sp,#7]
;;;166                GPIO_InitStructure.GPIO_Speed   = GPIO_Speed_100MHz;	/* IO口最大速度 */
00005a  2003              MOVS     r0,#3
00005c  f88d0005          STRB     r0,[sp,#5]
;;;167                
;;;168                GPIO_InitStructure.GPIO_Pin = GPIO_PIN_APPLE_PRST;
000060  f44f7080          MOV      r0,#0x100
000064  9000              STR      r0,[sp,#0]
;;;169                GPIO_Init(GPIO_PORT_APPLE_PRST, &GPIO_InitStructure);
000066  4669              MOV      r1,sp
000068  480f              LDR      r0,|L18.168|
00006a  f7fffffe          BL       GPIO_Init
;;;170            }break;
00006e  e019              B        |L18.164|
                  |L18.112|
;;;171            
;;;172            case prst_state_lo:
;;;173            {
;;;174                GPIO_ResetBits(GPIO_PORT_APPLE_PRST, GPIO_PIN_APPLE_PRST);
000070  f44f7180          MOV      r1,#0x100
000074  480c              LDR      r0,|L18.168|
000076  f7fffffe          BL       GPIO_ResetBits
;;;175                GPIO_InitStructure.GPIO_Mode    = GPIO_Mode_OUT;		/* 设为输出口 */
00007a  2001              MOVS     r0,#1
00007c  f88d0004          STRB     r0,[sp,#4]
;;;176                GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;		/* 设为推挽模式 */
000080  2000              MOVS     r0,#0
000082  f88d0006          STRB     r0,[sp,#6]
;;;177                GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_UP;	        /* 上下拉电阻不使能 */
000086  2001              MOVS     r0,#1
000088  f88d0007          STRB     r0,[sp,#7]
;;;178                GPIO_InitStructure.GPIO_Speed   = GPIO_Speed_100MHz;	/* IO口最大速度 */
00008c  2003              MOVS     r0,#3
00008e  f88d0005          STRB     r0,[sp,#5]
;;;179                
;;;180                GPIO_InitStructure.GPIO_Pin = GPIO_PIN_APPLE_PRST;
000092  f44f7080          MOV      r0,#0x100
000096  9000              STR      r0,[sp,#0]
;;;181                GPIO_Init(GPIO_PORT_APPLE_PRST, &GPIO_InitStructure);
000098  4669              MOV      r1,sp
00009a  4803              LDR      r0,|L18.168|
00009c  f7fffffe          BL       GPIO_Init
;;;182            }break;
0000a0  e000              B        |L18.164|
                  |L18.162|
;;;183            
;;;184            default:break;
0000a2  bf00              NOP      
                  |L18.164|
0000a4  bf00              NOP                            ;158
;;;185        }
;;;186    }
0000a6  bd1c              POP      {r2-r4,pc}
;;;187    
                          ENDP

                  |L18.168|
                          DCD      0x40020400

                          AREA ||i.socket_touch_off||, CODE, READONLY, ALIGN=2

                  socket_touch_off PROC
;;;237    
;;;238    void socket_touch_off(void)
000000  b510              PUSH     {r4,lr}
;;;239    {
;;;240        GPIO_ResetBits(GPIO_PORT_TOUCH_TEST, GPIO_PIN_TOUCH_TEST);
000002  2110              MOVS     r1,#0x10
000004  4801              LDR      r0,|L19.12|
000006  f7fffffe          BL       GPIO_ResetBits
;;;241    }
00000a  bd10              POP      {r4,pc}
;;;242    
                          ENDP

                  |L19.12|
                          DCD      0x40021000

                          AREA ||i.socket_touch_on||, CODE, READONLY, ALIGN=2

                  socket_touch_on PROC
;;;232    
;;;233    void socket_touch_on(void)
000000  b510              PUSH     {r4,lr}
;;;234    {
;;;235        GPIO_SetBits(GPIO_PORT_TOUCH_TEST, GPIO_PIN_TOUCH_TEST);
000002  2110              MOVS     r1,#0x10
000004  4801              LDR      r0,|L20.12|
000006  f7fffffe          BL       GPIO_SetBits
;;;236    }
00000a  bd10              POP      {r4,pc}
;;;237    
                          ENDP

                  |L20.12|
                          DCD      0x40021000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_socket.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_bsp_socket_c_e473fd96____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_bsp_socket_c_e473fd96____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_bsp_socket_c_e473fd96____REVSH|
#line 144
|__asm___12_bsp_socket_c_e473fd96____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
