; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\asu_current.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\asu_current.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\BERRY_TWI -I..\..\User\berry_ft -I..\..\User\ft_support -I..\..\User\berry_test -I..\..\User\factory_test -I..\..\User\emenu -I..\..\User\kiwi_ft -I..\..\User\kiwi_ft\spv40 -I..\..\User\kiwi_ft\spv40\peripheral -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\kiwi_ft -I..\..\User\MultiButton-1.1.0 -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.16.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\asu_current.crf ..\..\User\kiwi_ft\asu_current.c]
                          THUMB

                          AREA ||i.asu_current_state||, CODE, READONLY, ALIGN=2

                  asu_current_state PROC
;;;8      //static void current_test_init(void);
;;;9      fsm_rt_t asu_current_state(void)
000000  b570              PUSH     {r4-r6,lr}
;;;10     {
;;;11         #define GPIO08_CTL      0x20090020
;;;12         #define GPIO_ONOFF      0x20090130
;;;13         #define PMU_STATE_CTL   0x200C0000
;;;14         #define PMU_ONOFF_CTL   0x200C000C
;;;15         #define PMU_ALARM_CTL   0x200C0010
;;;16         #define PMU_WAK_EN      0x200C0024
;;;17         static fsm_rt_t ret=fsm_rt_cpl;
;;;18         static enum
;;;19         {
;;;20             START = 0,
;;;21             ENTER_STANDBY,
;;;22             MEASURE_CURRENT,
;;;23             CPL,
;;;24         } s_tState = START;
;;;25      
;;;26         static uint32_t adc_cnt;
;;;27         static uint32_t adc_sum;
;;;28         
;;;29         timer_creat();
;;;30         switch( s_tState )
000002  4852              LDR      r0,|L1.332|
000004  7800              LDRB     r0,[r0,#0]  ; s_tState
000006  b130              CBZ      r0,|L1.22|
000008  2801              CMP      r0,#1
00000a  d00f              BEQ      |L1.44|
00000c  2802              CMP      r0,#2
00000e  d02e              BEQ      |L1.110|
000010  2803              CMP      r0,#3
000012  d12b              BNE      |L1.108|
000014  e090              B        |L1.312|
                  |L1.22|
;;;31         {
;;;32         case START:
;;;33             adc_cnt = 0;
000016  2000              MOVS     r0,#0
000018  494d              LDR      r1,|L1.336|
00001a  6008              STR      r0,[r1,#0]  ; adc_cnt
;;;34             adc_sum = 0;
00001c  494d              LDR      r1,|L1.340|
00001e  6008              STR      r0,[r1,#0]  ; adc_sum
;;;35             s_tState++;
000020  484a              LDR      r0,|L1.332|
000022  7800              LDRB     r0,[r0,#0]  ; s_tState
000024  1c40              ADDS     r0,r0,#1
000026  4949              LDR      r1,|L1.332|
000028  7008              STRB     r0,[r1,#0]
;;;36             //break;
;;;37         
;;;38         case ENTER_STANDBY:
00002a  bf00              NOP      
                  |L1.44|
;;;39             do
00002c  bf00              NOP      
                  |L1.46|
;;;40             {
;;;41                ret = online_update_sm(0xF5,0,NULL);
00002e  2200              MOVS     r2,#0
000030  4611              MOV      r1,r2
000032  20f5              MOVS     r0,#0xf5
000034  f7fffffe          BL       online_update_sm
000038  4947              LDR      r1,|L1.344|
00003a  7008              STRB     r0,[r1,#0]
;;;42             }while(ret == fsm_rt_on_going);
00003c  4608              MOV      r0,r1
00003e  7800              LDRB     r0,[r0,#0]  ; ret
000040  2801              CMP      r0,#1
000042  d0f4              BEQ      |L1.46|
;;;43             if(ret != fsm_rt_cpl )
000044  4608              MOV      r0,r1
000046  7800              LDRB     r0,[r0,#0]  ; ret
000048  b110              CBZ      r0,|L1.80|
;;;44             {
;;;45                 return fsm_rt_err_hibernate_ack;
00004a  f06f002e          MVN      r0,#0x2e
                  |L1.78|
;;;46             }
;;;47             hp_osc_deinit();
;;;48             test_power.consumption_on();                                        //接入功耗测量电阻100欧姆
;;;49             timer_start(1500);
;;;50             s_tState = MEASURE_CURRENT;
;;;51             break;
;;;52         
;;;53         case MEASURE_CURRENT:
;;;54             if( is_time_up() )
;;;55             {
;;;56                 adc_sum += g_adc_value[ADC_RANK_AMP];
;;;57                 adc_cnt++;
;;;58                 timer_start(1);
;;;59                 if(adc_cnt == 64)
;;;60                 {
;;;61                     uint32_t current_adc_mean = adc_sum/64;
;;;62                     trim_result.standby_current = current_adc_mean*3300/4095;
;;;63                     if((trim_result.standby_current > STANDBY_CURRENT_LO) && (trim_result.standby_current < STANDBY_CURRENT_HI))
;;;64                     {
;;;65                         //bsp_kiwi_onoff_init();
;;;66                         //bsp_kiwi_onoff_hi();           //ONOFF信号高
;;;67                         test_power.consumption_off();  //电流取样电阻去除
;;;68                         ret = fsm_rt_cpl;
;;;69                         logging("SUCCESS current:%d.%duA\r\n",trim_result.standby_current/10, trim_result.standby_current%10);
;;;70                     }
;;;71                     else
;;;72                     {
;;;73                         logging("FAIL current:%d.%duA\r\n",trim_result.standby_current/10, trim_result.standby_current%10);
;;;74                         
;;;75                         ret = fsm_rt_err_standby_current;
;;;76                     }
;;;77                     s_tState = CPL;
;;;78                 }
;;;79             }
;;;80             break;
;;;81         
;;;82         case CPL:
;;;83             s_tState = START;
;;;84             return ret;
;;;85             //break;
;;;86         }
;;;87         
;;;88         return fsm_rt_on_going;
;;;89     }
00004e  bd70              POP      {r4-r6,pc}
                  |L1.80|
000050  f7fffffe          BL       hp_osc_deinit
000054  4941              LDR      r1,|L1.348|
000056  68c8              LDR      r0,[r1,#0xc]          ;48  ; test_power
000058  4780              BLX      r0                    ;48
00005a  4841              LDR      r0,|L1.352|
00005c  6800              LDR      r0,[r0,#0]            ;49  ; g_iRunTime
00005e  f20050dc          ADD      r0,r0,#0x5dc          ;49
000062  4940              LDR      r1,|L1.356|
000064  6008              STR      r0,[r1,#0]            ;49  ; timer
000066  2002              MOVS     r0,#2                 ;50
000068  4938              LDR      r1,|L1.332|
00006a  7008              STRB     r0,[r1,#0]            ;50
                  |L1.108|
00006c  e06b              B        |L1.326|
                  |L1.110|
00006e  483c              LDR      r0,|L1.352|
000070  6800              LDR      r0,[r0,#0]            ;54  ; g_iRunTime
000072  493c              LDR      r1,|L1.356|
000074  6809              LDR      r1,[r1,#0]            ;54  ; timer
000076  1a40              SUBS     r0,r0,r1              ;54
000078  f06f4100          MVN      r1,#0x80000000        ;54
00007c  4288              CMP      r0,r1                 ;54
00007e  d25a              BCS      |L1.310|
000080  4839              LDR      r0,|L1.360|
000082  8880              LDRH     r0,[r0,#4]            ;56  ; g_adc_value
000084  4933              LDR      r1,|L1.340|
000086  6809              LDR      r1,[r1,#0]            ;56  ; adc_sum
000088  4408              ADD      r0,r0,r1              ;56
00008a  4932              LDR      r1,|L1.340|
00008c  6008              STR      r0,[r1,#0]            ;56  ; adc_sum
00008e  4830              LDR      r0,|L1.336|
000090  6800              LDR      r0,[r0,#0]            ;57  ; adc_cnt
000092  1c40              ADDS     r0,r0,#1              ;57
000094  492e              LDR      r1,|L1.336|
000096  6008              STR      r0,[r1,#0]            ;57  ; adc_cnt
000098  4831              LDR      r0,|L1.352|
00009a  6800              LDR      r0,[r0,#0]            ;58  ; g_iRunTime
00009c  1c40              ADDS     r0,r0,#1              ;58
00009e  4931              LDR      r1,|L1.356|
0000a0  6008              STR      r0,[r1,#0]            ;58  ; timer
0000a2  482b              LDR      r0,|L1.336|
0000a4  6800              LDR      r0,[r0,#0]            ;59  ; adc_cnt
0000a6  2840              CMP      r0,#0x40              ;59
0000a8  d145              BNE      |L1.310|
0000aa  482a              LDR      r0,|L1.340|
0000ac  6800              LDR      r0,[r0,#0]            ;61  ; adc_sum
0000ae  0984              LSRS     r4,r0,#6              ;61
0000b0  f64040e4          MOV      r0,#0xce4             ;62
0000b4  4360              MULS     r0,r4,r0              ;62
0000b6  f64071ff          MOV      r1,#0xfff             ;62
0000ba  fbb0f0f1          UDIV     r0,r0,r1              ;62
0000be  492b              LDR      r1,|L1.364|
0000c0  6648              STR      r0,[r1,#0x64]         ;62  ; trim_result
0000c2  4608              MOV      r0,r1                 ;63
0000c4  6e40              LDR      r0,[r0,#0x64]         ;63  ; trim_result
0000c6  2814              CMP      r0,#0x14              ;63
0000c8  dd1c              BLE      |L1.260|
0000ca  4608              MOV      r0,r1                 ;63
0000cc  6e40              LDR      r0,[r0,#0x64]         ;63  ; trim_result
0000ce  283c              CMP      r0,#0x3c              ;63
0000d0  da18              BGE      |L1.260|
0000d2  4922              LDR      r1,|L1.348|
0000d4  6908              LDR      r0,[r1,#0x10]         ;67  ; test_power
0000d6  4780              BLX      r0                    ;67
0000d8  2000              MOVS     r0,#0                 ;68
0000da  491f              LDR      r1,|L1.344|
0000dc  7008              STRB     r0,[r1,#0]            ;68
0000de  4823              LDR      r0,|L1.364|
0000e0  6e40              LDR      r0,[r0,#0x64]         ;69  ; trim_result
0000e2  210a              MOVS     r1,#0xa               ;69
0000e4  fb90f2f1          SDIV     r2,r0,r1              ;69
0000e8  fb010512          MLS      r5,r1,r2,r0           ;69
0000ec  481f              LDR      r0,|L1.364|
0000ee  6e40              LDR      r0,[r0,#0x64]         ;69  ; trim_result
0000f0  fb90f6f1          SDIV     r6,r0,r1              ;69
0000f4  462b              MOV      r3,r5                 ;69
0000f6  4632              MOV      r2,r6                 ;69
0000f8  4819              LDR      r0,|L1.352|
0000fa  6801              LDR      r1,[r0,#0]            ;69  ; g_iRunTime
0000fc  a01c              ADR      r0,|L1.368|
0000fe  f7fffffe          BL       logger_buffer_write
000102  e014              B        |L1.302|
                  |L1.260|
000104  4819              LDR      r0,|L1.364|
000106  6e40              LDR      r0,[r0,#0x64]         ;73  ; trim_result
000108  210a              MOVS     r1,#0xa               ;73
00010a  fb90f2f1          SDIV     r2,r0,r1              ;73
00010e  fb010512          MLS      r5,r1,r2,r0           ;73
000112  4816              LDR      r0,|L1.364|
000114  6e40              LDR      r0,[r0,#0x64]         ;73  ; trim_result
000116  fb90f6f1          SDIV     r6,r0,r1              ;73
00011a  462b              MOV      r3,r5                 ;73
00011c  4632              MOV      r2,r6                 ;73
00011e  4810              LDR      r0,|L1.352|
000120  6801              LDR      r1,[r0,#0]            ;73  ; g_iRunTime
000122  a01b              ADR      r0,|L1.400|
000124  f7fffffe          BL       logger_buffer_write
000128  20e7              MOVS     r0,#0xe7              ;75
00012a  490b              LDR      r1,|L1.344|
00012c  7008              STRB     r0,[r1,#0]            ;75
                  |L1.302|
00012e  2003              MOVS     r0,#3                 ;77
000130  4906              LDR      r1,|L1.332|
000132  7008              STRB     r0,[r1,#0]            ;77
000134  bf00              NOP                            ;78
                  |L1.310|
000136  e006              B        |L1.326|
                  |L1.312|
000138  2000              MOVS     r0,#0                 ;83
00013a  4904              LDR      r1,|L1.332|
00013c  7008              STRB     r0,[r1,#0]            ;83
00013e  4806              LDR      r0,|L1.344|
000140  f9900000          LDRSB    r0,[r0,#0]            ;84  ; ret
000144  e783              B        |L1.78|
                  |L1.326|
000146  bf00              NOP                            ;51
000148  2001              MOVS     r0,#1                 ;88
00014a  e780              B        |L1.78|
;;;90     
                          ENDP

                  |L1.332|
                          DCD      s_tState
                  |L1.336|
                          DCD      adc_cnt
                  |L1.340|
                          DCD      adc_sum
                  |L1.344|
                          DCD      ||ret||
                  |L1.348|
                          DCD      test_power
                  |L1.352|
                          DCD      g_iRunTime
                  |L1.356|
                          DCD      timer
                  |L1.360|
                          DCD      g_adc_value
                  |L1.364|
                          DCD      trim_result
                  |L1.368|
000170  5b253864          DCB      "[%8d]SUCCESS current:%d.%duA\r\n",0
000174  5d535543
000178  43455353
00017c  20637572
000180  72656e74
000184  3a25642e
000188  25647541
00018c  0d0a00  
00018f  00                DCB      0
                  |L1.400|
000190  5b253864          DCB      "[%8d]FAIL current:%d.%duA\r\n",0
000194  5d464149
000198  4c206375
00019c  7272656e
0001a0  743a2564
0001a4  2e256475
0001a8  410d0a00

                          AREA ||i.no_load_current_calibration||, CODE, READONLY, ALIGN=2

                  no_load_current_calibration PROC
;;;96     //空载电流校准
;;;97     fsm_rt_t no_load_current_calibration(void)
000000  b570              PUSH     {r4-r6,lr}
;;;98     {
;;;99         static enum
;;;100        {
;;;101            START = 0,
;;;102            CALI_POWER_ON,
;;;103            NO_LOAD_CALI,
;;;104            CALI_OVER,
;;;105            CPL,
;;;106        } s_tState = START;
;;;107     
;;;108        static uint32_t adc_cnt;
;;;109        static uint32_t adc_sum;
;;;110        static uint32_t cali_sum;
;;;111        static uint32_t cali_cnt;
;;;112        static uint32_t temp;
;;;113        timer_creat();
;;;114        switch( s_tState )
000002  4860              LDR      r0,|L2.388|
000004  7800              LDRB     r0,[r0,#0]  ; s_tState
000006  2805              CMP      r0,#5
000008  d25b              BCS      |L2.194|
00000a  e8dff000          TBB      [pc,r0]
00000e  0310              DCB      0x03,0x10
000010  255b8100          DCB      0x25,0x5b,0x81,0x00
;;;115        {
;;;116        case START:
;;;117            temp = 0;
000014  2000              MOVS     r0,#0
000016  495c              LDR      r1,|L2.392|
000018  6008              STR      r0,[r1,#0]  ; temp
;;;118            cali_cnt = 0;
00001a  495c              LDR      r1,|L2.396|
00001c  6008              STR      r0,[r1,#0]  ; cali_cnt
;;;119            cali_sum = 0;
00001e  495c              LDR      r1,|L2.400|
000020  6008              STR      r0,[r1,#0]  ; cali_sum
;;;120            s_tState++;
000022  4858              LDR      r0,|L2.388|
000024  7800              LDRB     r0,[r0,#0]  ; s_tState
000026  1c40              ADDS     r0,r0,#1
000028  4956              LDR      r1,|L2.388|
00002a  7008              STRB     r0,[r1,#0]
;;;121            //break;
;;;122        
;;;123        case CALI_POWER_ON:
00002c  bf00              NOP      
;;;124            adc_sum = 0;
00002e  2000              MOVS     r0,#0
000030  4958              LDR      r1,|L2.404|
000032  6008              STR      r0,[r1,#0]  ; adc_sum
;;;125            adc_cnt = 0;
000034  4958              LDR      r1,|L2.408|
000036  6008              STR      r0,[r1,#0]  ; adc_cnt
;;;126            test_power.on();
000038  4958              LDR      r1,|L2.412|
00003a  6848              LDR      r0,[r1,#4]  ; test_power
00003c  4780              BLX      r0
;;;127            test_power.consumption_on();                                        //接入功耗测量电阻100欧姆
00003e  4957              LDR      r1,|L2.412|
000040  68c8              LDR      r0,[r1,#0xc]  ; test_power
000042  4780              BLX      r0
;;;128            timer_start(500);
000044  4856              LDR      r0,|L2.416|
000046  6800              LDR      r0,[r0,#0]  ; g_iRunTime
000048  f50070fa          ADD      r0,r0,#0x1f4
00004c  4955              LDR      r1,|L2.420|
00004e  6008              STR      r0,[r1,#0]  ; timer
;;;129            s_tState = NO_LOAD_CALI; 
000050  2002              MOVS     r0,#2
000052  494c              LDR      r1,|L2.388|
000054  7008              STRB     r0,[r1,#0]
;;;130            //break;
;;;131        
;;;132        case NO_LOAD_CALI:  //检查是否进入 standby ，如进入后则测功耗 之后退出低功耗
000056  bf00              NOP      
;;;133            if( is_time_up() )
000058  4851              LDR      r0,|L2.416|
00005a  6800              LDR      r0,[r0,#0]  ; g_iRunTime
00005c  4951              LDR      r1,|L2.420|
00005e  6809              LDR      r1,[r1,#0]  ; timer
000060  1a40              SUBS     r0,r0,r1
000062  f06f4100          MVN      r1,#0x80000000
000066  4288              CMP      r0,r1
000068  d22b              BCS      |L2.194|
;;;134            {
;;;135                adc_sum += g_adc_value[ADC_RANK_AMP];
00006a  484f              LDR      r0,|L2.424|
00006c  8880              LDRH     r0,[r0,#4]  ; g_adc_value
00006e  4949              LDR      r1,|L2.404|
000070  6809              LDR      r1,[r1,#0]  ; adc_sum
000072  4408              ADD      r0,r0,r1
000074  4947              LDR      r1,|L2.404|
000076  6008              STR      r0,[r1,#0]  ; adc_sum
;;;136                adc_cnt++;
000078  4847              LDR      r0,|L2.408|
00007a  6800              LDR      r0,[r0,#0]  ; adc_cnt
00007c  1c40              ADDS     r0,r0,#1
00007e  4946              LDR      r1,|L2.408|
000080  6008              STR      r0,[r1,#0]  ; adc_cnt
;;;137                //timer_start(1);
;;;138                if(adc_cnt == 1024)
000082  4608              MOV      r0,r1
000084  6800              LDR      r0,[r0,#0]  ; adc_cnt
000086  f5b06f80          CMP      r0,#0x400
00008a  d11a              BNE      |L2.194|
;;;139                {
;;;140                    uint32_t current_adc_mean = adc_sum/1024;
00008c  4841              LDR      r0,|L2.404|
00008e  6800              LDR      r0,[r0,#0]  ; adc_sum
000090  0a84              LSRS     r4,r0,#10
;;;141                    temp = current_adc_mean*3300/4095;
000092  f64040e4          MOV      r0,#0xce4
000096  4360              MULS     r0,r4,r0
000098  f64071ff          MOV      r1,#0xfff
00009c  fbb0f0f1          UDIV     r0,r0,r1
0000a0  4939              LDR      r1,|L2.392|
0000a2  6008              STR      r0,[r1,#0]  ; temp
;;;142                    test_power.consumption_off();  //电流取样电阻去除
0000a4  493d              LDR      r1,|L2.412|
0000a6  6908              LDR      r0,[r1,#0x10]  ; test_power
0000a8  4780              BLX      r0
;;;143                    test_power.off();
0000aa  493c              LDR      r1,|L2.412|
0000ac  6888              LDR      r0,[r1,#8]  ; test_power
0000ae  4780              BLX      r0
;;;144                    s_tState = CALI_OVER;
0000b0  2003              MOVS     r0,#3
0000b2  4934              LDR      r1,|L2.388|
0000b4  7008              STRB     r0,[r1,#0]
;;;145                    timer_start(100);
0000b6  483a              LDR      r0,|L2.416|
0000b8  6800              LDR      r0,[r0,#0]  ; g_iRunTime
0000ba  3064              ADDS     r0,r0,#0x64
0000bc  4939              LDR      r1,|L2.420|
0000be  6008              STR      r0,[r1,#0]  ; timer
;;;146                }
0000c0  bf00              NOP      
                  |L2.194|
;;;147            }
;;;148            break;
0000c2  e05c              B        |L2.382|
;;;149    
;;;150        case CALI_OVER:
;;;151            if(is_time_up())
0000c4  4836              LDR      r0,|L2.416|
0000c6  6800              LDR      r0,[r0,#0]  ; g_iRunTime
0000c8  4936              LDR      r1,|L2.420|
0000ca  6809              LDR      r1,[r1,#0]  ; timer
0000cc  1a40              SUBS     r0,r0,r1
0000ce  f06f4100          MVN      r1,#0x80000000
0000d2  4288              CMP      r0,r1
0000d4  d21b              BCS      |L2.270|
;;;152            {
;;;153                cali_sum += temp;
0000d6  482e              LDR      r0,|L2.400|
0000d8  6800              LDR      r0,[r0,#0]  ; cali_sum
0000da  492b              LDR      r1,|L2.392|
0000dc  6809              LDR      r1,[r1,#0]  ; temp
0000de  4408              ADD      r0,r0,r1
0000e0  492b              LDR      r1,|L2.400|
0000e2  6008              STR      r0,[r1,#0]  ; cali_sum
;;;154                cali_cnt++;
0000e4  4829              LDR      r0,|L2.396|
0000e6  6800              LDR      r0,[r0,#0]  ; cali_cnt
0000e8  1c40              ADDS     r0,r0,#1
0000ea  4928              LDR      r1,|L2.396|
0000ec  6008              STR      r0,[r1,#0]  ; cali_cnt
;;;155                if(cali_cnt == 8)
0000ee  4608              MOV      r0,r1
0000f0  6800              LDR      r0,[r0,#0]  ; cali_cnt
0000f2  2808              CMP      r0,#8
0000f4  d108              BNE      |L2.264|
;;;156                {
;;;157                    temp = cali_sum/8;
0000f6  4826              LDR      r0,|L2.400|
0000f8  6800              LDR      r0,[r0,#0]  ; cali_sum
0000fa  08c0              LSRS     r0,r0,#3
0000fc  4922              LDR      r1,|L2.392|
0000fe  6008              STR      r0,[r1,#0]  ; temp
;;;158                    s_tState = CPL;
000100  2004              MOVS     r0,#4
000102  4920              LDR      r1,|L2.388|
000104  7008              STRB     r0,[r1,#0]
000106  e002              B        |L2.270|
                  |L2.264|
;;;159                }
;;;160                else
;;;161                {
;;;162                    s_tState = CALI_POWER_ON;
000108  2001              MOVS     r0,#1
00010a  491e              LDR      r1,|L2.388|
00010c  7008              STRB     r0,[r1,#0]
                  |L2.270|
;;;163                }
;;;164            }
;;;165            break;
00010e  e036              B        |L2.382|
;;;166        case CPL:   //结束
;;;167            
;;;168            s_tState = START;
000110  2000              MOVS     r0,#0
000112  491c              LDR      r1,|L2.388|
000114  7008              STRB     r0,[r1,#0]
;;;169            
;;;170            if((temp > NO_LOAD_CURRENT_LO) && (temp < NO_LOAD_CURRENT_HI))
000116  481c              LDR      r0,|L2.392|
000118  6800              LDR      r0,[r0,#0]  ; temp
00011a  2805              CMP      r0,#5
00011c  d91a              BLS      |L2.340|
00011e  481a              LDR      r0,|L2.392|
000120  6800              LDR      r0,[r0,#0]  ; temp
000122  2814              CMP      r0,#0x14
000124  d216              BCS      |L2.340|
;;;171            {
;;;172                test_power.consumption_off();  //电流取样电阻去除
000126  491d              LDR      r1,|L2.412|
000128  6908              LDR      r0,[r1,#0x10]  ; test_power
00012a  4780              BLX      r0
;;;173                logging("SUCCESS current:%d.%duA\r\n",temp/10, temp%10);
00012c  4816              LDR      r0,|L2.392|
00012e  6800              LDR      r0,[r0,#0]  ; temp
000130  210a              MOVS     r1,#0xa
000132  fbb0f2f1          UDIV     r2,r0,r1
000136  fb010412          MLS      r4,r1,r2,r0
00013a  4813              LDR      r0,|L2.392|
00013c  6800              LDR      r0,[r0,#0]  ; temp
00013e  fbb0f5f1          UDIV     r5,r0,r1
000142  4623              MOV      r3,r4
000144  462a              MOV      r2,r5
000146  4816              LDR      r0,|L2.416|
000148  6801              LDR      r1,[r0,#0]  ; g_iRunTime
00014a  a018              ADR      r0,|L2.428|
00014c  f7fffffe          BL       logger_buffer_write
;;;174                return fsm_rt_cpl;
000150  2000              MOVS     r0,#0
                  |L2.338|
;;;175            }
;;;176            else
;;;177            {
;;;178                logging("FAIL current:%d.%duA\r\n",temp/10, temp%10);
;;;179                return fsm_rt_err_no_load_current;
;;;180            }
;;;181            //break;
;;;182               
;;;183        }
;;;184        return fsm_rt_on_going;
;;;185    }
000152  bd70              POP      {r4-r6,pc}
                  |L2.340|
000154  480c              LDR      r0,|L2.392|
000156  6800              LDR      r0,[r0,#0]            ;178  ; temp
000158  210a              MOVS     r1,#0xa               ;178
00015a  fbb0f2f1          UDIV     r2,r0,r1              ;178
00015e  fb010412          MLS      r4,r1,r2,r0           ;178
000162  4809              LDR      r0,|L2.392|
000164  6800              LDR      r0,[r0,#0]            ;178  ; temp
000166  fbb0f5f1          UDIV     r5,r0,r1              ;178
00016a  4623              MOV      r3,r4                 ;178
00016c  462a              MOV      r2,r5                 ;178
00016e  480c              LDR      r0,|L2.416|
000170  6801              LDR      r1,[r0,#0]            ;178  ; g_iRunTime
000172  a016              ADR      r0,|L2.460|
000174  f7fffffe          BL       logger_buffer_write
000178  f06f002d          MVN      r0,#0x2d              ;179
00017c  e7e9              B        |L2.338|
                  |L2.382|
00017e  bf00              NOP                            ;148
000180  2001              MOVS     r0,#1                 ;184
000182  e7e6              B        |L2.338|
                          ENDP

                  |L2.388|
                          DCD      |symbol_number.17|
                  |L2.392|
                          DCD      temp
                  |L2.396|
                          DCD      cali_cnt
                  |L2.400|
                          DCD      cali_sum
                  |L2.404|
                          DCD      |symbol_number.19|
                  |L2.408|
                          DCD      |symbol_number.18|
                  |L2.412|
                          DCD      test_power
                  |L2.416|
                          DCD      g_iRunTime
                  |L2.420|
                          DCD      |symbol_number.23|
                  |L2.424|
                          DCD      g_adc_value
                  |L2.428|
0001ac  5b253864          DCB      "[%8d]SUCCESS current:%d.%duA\r\n",0
0001b0  5d535543
0001b4  43455353
0001b8  20637572
0001bc  72656e74
0001c0  3a25642e
0001c4  25647541
0001c8  0d0a00  
0001cb  00                DCB      0
                  |L2.460|
0001cc  5b253864          DCB      "[%8d]FAIL current:%d.%duA\r\n",0
0001d0  5d464149
0001d4  4c206375
0001d8  7272656e
0001dc  743a2564
0001e0  2e256475
0001e4  410d0a00

                          AREA ||.data||, DATA, ALIGN=2

                  g_no_load_current
                          DCD      0x00000000
                  ||ret||
000004  00                DCB      0x00
                  s_tState
000005  000000            DCB      0x00,0x00,0x00
                  adc_cnt
                          DCD      0x00000000
                  adc_sum
                          DCD      0x00000000
                  timer
                          DCD      0x00000000
                  |symbol_number.17|
000014  00000000          DCB      0x00,0x00,0x00,0x00
                  |symbol_number.18|
                          DCD      0x00000000
                  |symbol_number.19|
                          DCD      0x00000000
                  cali_sum
                          DCD      0x00000000
                  cali_cnt
                          DCD      0x00000000
                  temp
                          DCD      0x00000000
                  |symbol_number.23|
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\kiwi_ft\\asu_current.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___13_asu_current_c_87bf922a____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___13_asu_current_c_87bf922a____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___13_asu_current_c_87bf922a____REVSH|
#line 144
|__asm___13_asu_current_c_87bf922a____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
