; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\bsp_ch440r_ex.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_ch440r_ex.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\bsp_ch440r_ex.crf ..\..\User\bsp_stm32f4xx\src\bsp_ch440r_ex.c]
                          THUMB

                          AREA ||i.bsp_ch440r_ctrl_ex||, CODE, READONLY, ALIGN=2

                  bsp_ch440r_ctrl_ex PROC
;;;73     */
;;;74     void bsp_ch440r_ctrl_ex(uint8_t ctrl)
000000  b510              PUSH     {r4,lr}
;;;75     {
000002  4604              MOV      r4,r0
;;;76         if( ctrl & CH440R_EX_CTRL_ALL_DETACH)
000004  f0040001          AND      r0,r4,#1
000008  b140              CBZ      r0,|L1.28|
;;;77         {
;;;78             CH440R_IOTEST_DETACH();
00000a  2140              MOVS     r1,#0x40
00000c  4821              LDR      r0,|L1.148|
00000e  f7fffffe          BL       GPIO_SetBits
;;;79             CH440R_UC_DETACH();
000012  2110              MOVS     r1,#0x10
000014  481f              LDR      r0,|L1.148|
000016  f7fffffe          BL       GPIO_SetBits
                  |L1.26|
;;;80             return;
;;;81         }
;;;82         
;;;83         if( ctrl & CH440R_EX_CTRL_UC_DETACH)
;;;84         {
;;;85             CH440R_UC_DETACH();
;;;86         }
;;;87         
;;;88         if( ctrl & CH440R_EX_CTRL_IOTEST_DETACH)
;;;89         {
;;;90             CH440R_IOTEST_DETACH();
;;;91         }
;;;92         
;;;93     
;;;94         if( ctrl & CH440R_EX_CTRL_I2C)
;;;95         {
;;;96             CH440R_UC_ATTACH();
;;;97             CH440R_UC_I2C();
;;;98         }
;;;99         if( ctrl & CH440R_EX_CTRL_UART)
;;;100        {
;;;101            CH440R_UC_ATTACH();
;;;102            CH440R_UC_UART();
;;;103        }
;;;104     
;;;105        if( ctrl & CH440R_EX_CTRL_IO_S1)
;;;106        {
;;;107            CH440R_IOTEST_ATTACH();
;;;108            CH440R_IOTEST_S1();
;;;109        }
;;;110     
;;;111        if( ctrl & CH440R_EX_CTRL_IO_S2)
;;;112        {
;;;113            CH440R_IOTEST_ATTACH();
;;;114            CH440R_IOTEST_S2();
;;;115        }
;;;116     
;;;117    }
00001a  bd10              POP      {r4,pc}
                  |L1.28|
00001c  f0040020          AND      r0,r4,#0x20           ;83
000020  b118              CBZ      r0,|L1.42|
000022  2110              MOVS     r1,#0x10              ;85
000024  481b              LDR      r0,|L1.148|
000026  f7fffffe          BL       GPIO_SetBits
                  |L1.42|
00002a  f0040040          AND      r0,r4,#0x40           ;88
00002e  b118              CBZ      r0,|L1.56|
000030  2140              MOVS     r1,#0x40              ;90
000032  4818              LDR      r0,|L1.148|
000034  f7fffffe          BL       GPIO_SetBits
                  |L1.56|
000038  f0040002          AND      r0,r4,#2              ;94
00003c  b138              CBZ      r0,|L1.78|
00003e  2110              MOVS     r1,#0x10              ;96
000040  4814              LDR      r0,|L1.148|
000042  f7fffffe          BL       GPIO_ResetBits
000046  2108              MOVS     r1,#8                 ;97
000048  4812              LDR      r0,|L1.148|
00004a  f7fffffe          BL       GPIO_ResetBits
                  |L1.78|
00004e  f0040008          AND      r0,r4,#8              ;99
000052  b138              CBZ      r0,|L1.100|
000054  2110              MOVS     r1,#0x10              ;101
000056  480f              LDR      r0,|L1.148|
000058  f7fffffe          BL       GPIO_ResetBits
00005c  2108              MOVS     r1,#8                 ;102
00005e  480d              LDR      r0,|L1.148|
000060  f7fffffe          BL       GPIO_SetBits
                  |L1.100|
000064  f0040004          AND      r0,r4,#4              ;105
000068  b138              CBZ      r0,|L1.122|
00006a  2140              MOVS     r1,#0x40              ;107
00006c  4809              LDR      r0,|L1.148|
00006e  f7fffffe          BL       GPIO_ResetBits
000072  2120              MOVS     r1,#0x20              ;108
000074  4807              LDR      r0,|L1.148|
000076  f7fffffe          BL       GPIO_ResetBits
                  |L1.122|
00007a  f0040010          AND      r0,r4,#0x10           ;111
00007e  b138              CBZ      r0,|L1.144|
000080  2140              MOVS     r1,#0x40              ;113
000082  4804              LDR      r0,|L1.148|
000084  f7fffffe          BL       GPIO_ResetBits
000088  2120              MOVS     r1,#0x20              ;114
00008a  4802              LDR      r0,|L1.148|
00008c  f7fffffe          BL       GPIO_SetBits
                  |L1.144|
000090  bf00              NOP      
000092  e7c2              B        |L1.26|
;;;118    
                          ENDP

                  |L1.148|
                          DCD      0x40021000

                          AREA ||i.bsp_ch440r_init_ex||, CODE, READONLY, ALIGN=2

                  bsp_ch440r_init_ex PROC
;;;39     //初始化 CH440R的控制口;
;;;40     void bsp_ch440r_init_ex(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;41     {
;;;42         GPIO_InitTypeDef GPIO_InitStructure;
;;;43      
;;;44     	RCC_AHB1PeriphClockCmd(RCC_ALL_CH440, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;45     
;;;46         CH440R_IOTEST_DETACH();
00000a  2140              MOVS     r1,#0x40
00000c  4815              LDR      r0,|L2.100|
00000e  f7fffffe          BL       GPIO_SetBits
;;;47         CH440R_UC_DETACH();//kiwi断开所有的与ch440r的连接
000012  2110              MOVS     r1,#0x10
000014  4813              LDR      r0,|L2.100|
000016  f7fffffe          BL       GPIO_SetBits
;;;48      
;;;49     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;		                        /* 设为输出口 */
00001a  2001              MOVS     r0,#1
00001c  f88d0004          STRB     r0,[sp,#4]
;;;50     	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;		                        /* 设为推挽模式 */
000020  2000              MOVS     r0,#0
000022  f88d0006          STRB     r0,[sp,#6]
;;;51     	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;	                        /* 上下拉电阻不使能 */
000026  f88d0007          STRB     r0,[sp,#7]
;;;52     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_100MHz;	                        /* IO口最大速度 */
00002a  2003              MOVS     r0,#3
00002c  f88d0005          STRB     r0,[sp,#5]
;;;53     
;;;54     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IOTEST_CH440_EN;
000030  2040              MOVS     r0,#0x40
000032  9000              STR      r0,[sp,#0]
;;;55     	GPIO_Init(GPIO_PORT_IOTEST_CH440_EN, &GPIO_InitStructure);
000034  4669              MOV      r1,sp
000036  480b              LDR      r0,|L2.100|
000038  f7fffffe          BL       GPIO_Init
;;;56         
;;;57         GPIO_InitStructure.GPIO_Pin = GPIO_PIN_IOTEST_CH440_IN;
00003c  2020              MOVS     r0,#0x20
00003e  9000              STR      r0,[sp,#0]
;;;58     	GPIO_Init(GPIO_PORT_IOTEST_CH440_IN, &GPIO_InitStructure);
000040  4669              MOV      r1,sp
000042  4808              LDR      r0,|L2.100|
000044  f7fffffe          BL       GPIO_Init
;;;59     
;;;60     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_UC_CH440_EN;
000048  2010              MOVS     r0,#0x10
00004a  9000              STR      r0,[sp,#0]
;;;61     	GPIO_Init(GPIO_PORT_UC_CH440_EN, &GPIO_InitStructure);
00004c  4669              MOV      r1,sp
00004e  4805              LDR      r0,|L2.100|
000050  f7fffffe          BL       GPIO_Init
;;;62         
;;;63         GPIO_InitStructure.GPIO_Pin = GPIO_PIN_UC_CH440_IN;
000054  2008              MOVS     r0,#8
000056  9000              STR      r0,[sp,#0]
;;;64     	GPIO_Init(GPIO_PORT_UC_CH440_IN, &GPIO_InitStructure);
000058  4669              MOV      r1,sp
00005a  4802              LDR      r0,|L2.100|
00005c  f7fffffe          BL       GPIO_Init
;;;65     }
000060  bd1c              POP      {r2-r4,pc}
;;;66     
                          ENDP

000062  0000              DCW      0x0000
                  |L2.100|
                          DCD      0x40021000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp_stm32f4xx\\src\\bsp_ch440r_ex.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_ch440r_ex_c_db363970____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___15_bsp_ch440r_ex_c_db363970____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_bsp_ch440r_ex_c_db363970____REVSH|
#line 144
|__asm___15_bsp_ch440r_ex_c_db363970____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
