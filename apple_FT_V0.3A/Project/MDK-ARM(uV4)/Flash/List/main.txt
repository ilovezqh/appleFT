; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\main.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\main.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\main.crf ..\..\User\main.c]
                          THUMB

                          AREA ||i.DispMenu||, CODE, READONLY, ALIGN=2

                  DispMenu PROC
;;;154    */
;;;155    void DispMenu(void)
000000  b510              PUSH     {r4,lr}
;;;156    {
;;;157    	printf("\r\n------------------------------------------------\r\n");
000002  a005              ADR      r0,|L1.24|
000004  f7fffffe          BL       __2printf
;;;158    	printf("请选择操作命令:\r\n");
000008  a011              ADR      r0,|L1.80|
00000a  f7fffffe          BL       __2printf
;;;159    	printf("Enter - 进行FT测试\r\n");
00000e  a017              ADR      r0,|L1.108|
000010  f7fffffe          BL       __2printf
;;;160    //	printf("2 - 创建一个新文件plxc.txt\r\n");
;;;161    //	printf("3 - 读plxc.txt文件的内容\r\n");
;;;162    //	printf("4 - 创建目录\r\n");
;;;163    //	printf("5 - 删除文件和目录\r\n");
;;;164    //	printf("6 - 读写文件速度测试\r\n");
;;;165    //	printf("7 - 移除U盘\r\n");
;;;166    //	printf("8 - 使能U盘\r\n");	
;;;167    }
000014  bd10              POP      {r4,pc}
;;;168    
                          ENDP

000016  0000              DCW      0x0000
                  |L1.24|
000018  0d0a2d2d          DCB      "\r\n------------------------------------------------\r\n"
00001c  2d2d2d2d
000020  2d2d2d2d
000024  2d2d2d2d
000028  2d2d2d2d
00002c  2d2d2d2d
000030  2d2d2d2d
000034  2d2d2d2d
000038  2d2d2d2d
00003c  2d2d2d2d
000040  2d2d2d2d
000044  2d2d2d2d
000048  2d2d0d0a
00004c  00                DCB      0
00004d  00                DCB      0
00004e  00                DCB      0
00004f  00                DCB      0
                  |L1.80|
000050  e8afb7e9          DCB      232,175,183,233,128,137,230,139,169,230,147,141,228,189,156
000054  8089e68b
000058  a9e6938d
00005c  e4bd9c  
00005f  e591bde4          DCB      229,145,189,228,187,164,":\r\n",0
000063  bba43a0d
000067  0a00    
000069  00                DCB      0
00006a  00                DCB      0
00006b  00                DCB      0
                  |L1.108|
00006c  456e7465          DCB      "Enter - ",232,191,155,232,161,140,"FT",230,181,139,232,175
000070  72202d20
000074  e8bf9be8
000078  a18c4654
00007c  e6b58be8
000080  af      
000081  950d0a00          DCB      149,"\r\n",0
000085  00                DCB      0
000086  00                DCB      0
000087  00                DCB      0

                          AREA ||i.PlatformTicksGetFunc||, CODE, READONLY, ALIGN=2

                  PlatformTicksGetFunc PROC
;;;44     
;;;45     static uint64_t PlatformTicksGetFunc(void)  {   return g64_run_time; }
000000  4901              LDR      r1,|L2.8|
000002  6808              LDR      r0,[r1,#0]  ; g64_run_time
000004  6849              LDR      r1,[r1,#4]  ; g64_run_time
000006  4770              BX       lr
;;;46     /*
                          ENDP

                  |L2.8|
                          DCD      g64_run_time

                          AREA ||i.key_run||, CODE, READONLY, ALIGN=2

                  key_run PROC
;;;109    
;;;110    static void key_run(MultiTimer* timer, void *userData)
000000  b57c              PUSH     {r2-r6,lr}
;;;111    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;112        button_ticks();
000006  f7fffffe          BL       button_ticks
;;;113        MultiTimerStart(&key_timer, 10 ,  key_run, userData);
00000a  4804              LDR      r0,|L3.28|
00000c  220a              MOVS     r2,#0xa
00000e  2300              MOVS     r3,#0
000010  e9cd0400          STRD     r0,r4,[sp,#0]
000014  4802              LDR      r0,|L3.32|
000016  f7fffffe          BL       MultiTimerStart
;;;114    }
00001a  bd7c              POP      {r2-r6,pc}
;;;115    
                          ENDP

                  |L3.28|
                          DCD      key_run
                  |L3.32|
                          DCD      key_timer

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;53     */
;;;54     int main(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;55     {
;;;56     	/*
;;;57     		ST固件库中的启动文件已经执行了 SystemInit() 函数，该函数在 system_stm32f4xx.c 文件，主要功能是
;;;58     	配置CPU系统的时钟，内部Flash访问时序，配置FSMC用于外部SRAM
;;;59     	*/
;;;60         g_JumpInit = B2A_MAGIC_NUM;                                                 // 不加此句，按复位键boot会认为没有APP导致进入升级界面
000002  4821              LDR      r0,|L4.136|
000004  4921              LDR      r1,|L4.140|
000006  6008              STR      r0,[r1,#0]  ; g_JumpInit
;;;61     	crc32_init();   //crc32表格初始化
000008  f7fffffe          BL       crc32_init
;;;62         bsp_Init();		                                                            /* 硬件初始化 */
00000c  f7fffffe          BL       bsp_Init
;;;63         
;;;64     	PrintfLogo();	                                                            /* 打印例程信息到串口1 */
000010  f7fffffe          BL       PrintfLogo
;;;65         IWDG_Feed();
000014  f7fffffe          BL       IWDG_Feed
;;;66         bsp_DelayMS(100);
000018  2064              MOVS     r0,#0x64
00001a  f7fffffe          BL       bsp_DelayMS
;;;67         IWDG_Feed();
00001e  f7fffffe          BL       IWDG_Feed
;;;68         //init_cycle_counter(false);
;;;69         if(board_self_test())
000022  f7fffffe          BL       board_self_test
000026  b108              CBZ      r0,|L4.44|
;;;70         {
;;;71             //BEEP_Start(520, 20, 0);
;;;72             while(1);
000028  bf00              NOP      
                  |L4.42|
00002a  e7fe              B        |L4.42|
                  |L4.44|
;;;73         }
;;;74         #if 0  //新的板子需要配置此项 格式化
;;;75         board_data_format();
;;;76         #endif
;;;77         //udisk_task();
;;;78      
;;;79         DispMenu();
00002c  f7fffffe          BL       DispMenu
;;;80     
;;;81         test_init();
000030  f7fffffe          BL       test_init
;;;82          
;;;83         MultiTimerInstall(PlatformTicksGetFunc);
000034  4816              LDR      r0,|L4.144|
000036  f7fffffe          BL       MultiTimerInstall
;;;84         MultiTimerStart(&led_timer, 200 , sys_run_led, NULL);
00003a  2000              MOVS     r0,#0
00003c  4915              LDR      r1,|L4.148|
00003e  22c8              MOVS     r2,#0xc8
000040  4603              MOV      r3,r0
000042  e9cd1000          STRD     r1,r0,[sp,#0]
000046  4814              LDR      r0,|L4.152|
000048  f7fffffe          BL       MultiTimerStart
;;;85         MultiTimerStart(&key_timer, 10 ,  key_run,     NULL);
00004c  2000              MOVS     r0,#0
00004e  4913              LDR      r1,|L4.156|
000050  220a              MOVS     r2,#0xa
000052  4603              MOV      r3,r0
000054  e9cd1000          STRD     r1,r0,[sp,#0]
000058  4811              LDR      r0,|L4.160|
00005a  f7fffffe          BL       MultiTimerStart
;;;86         IWDG_Feed();
00005e  f7fffffe          BL       IWDG_Feed
;;;87         bsp_DelayMS(1000);
000062  f44f707a          MOV      r0,#0x3e8
000066  f7fffffe          BL       bsp_DelayMS
;;;88         IWDG_Feed();
00006a  f7fffffe          BL       IWDG_Feed
;;;89         cmb_init();
00006e  f7fffffe          BL       cmb_init
;;;90         
;;;91         while(1)
000072  e007              B        |L4.132|
                  |L4.116|
;;;92         {
;;;93             bsp_Idle();		                                                        /* 这个函数在bsp.c文件。用户可以修改这个函数实现CPU休眠和喂狗 */
000074  f7fffffe          BL       bsp_Idle
;;;94             test_task();
000078  f7fffffe          BL       test_task
;;;95             //dut_signal_test();
;;;96             //key_task();
;;;97             udisk_task();
00007c  f7fffffe          BL       udisk_task
;;;98             MultiTimerYield();
000080  f7fffffe          BL       MultiTimerYield
                  |L4.132|
000084  e7f6              B        |L4.116|
;;;99             
;;;100        }
;;;101    }
;;;102    
                          ENDP

000086  0000              DCW      0x0000
                  |L4.136|
                          DCD      0xaa553344
                  |L4.140|
                          DCD      g_JumpInit
                  |L4.144|
                          DCD      PlatformTicksGetFunc
                  |L4.148|
                          DCD      sys_run_led
                  |L4.152|
                          DCD      led_timer
                  |L4.156|
                          DCD      key_run
                  |L4.160|
                          DCD      key_timer

                          AREA ||i.sys_run_led||, CODE, READONLY, ALIGN=2

                  sys_run_led PROC
;;;102    
;;;103    static void sys_run_led(MultiTimer* timer, void *userData)
000000  b57c              PUSH     {r2-r6,lr}
;;;104    {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;105        bsp_LedToggle(LED_GREEN);	/* 翻转LED4的状态 */
000006  2001              MOVS     r0,#1
000008  f7fffffe          BL       bsp_LedToggle
;;;106        IWDG_Feed();                /* 喂狗 */
00000c  f7fffffe          BL       IWDG_Feed
;;;107        MultiTimerStart(&led_timer, 200 , sys_run_led, userData);
000010  4804              LDR      r0,|L5.36|
000012  22c8              MOVS     r2,#0xc8
000014  2300              MOVS     r3,#0
000016  e9cd0400          STRD     r0,r4,[sp,#0]
00001a  4803              LDR      r0,|L5.40|
00001c  f7fffffe          BL       MultiTimerStart
;;;108    }
000020  bd7c              POP      {r2-r6,pc}
;;;109    
                          ENDP

000022  0000              DCW      0x0000
                  |L5.36|
                          DCD      sys_run_led
                  |L5.40|
                          DCD      led_timer

                          AREA ||.ARM.__AT_0x20000000||, DATA, NOINIT, ALIGN=2

                  g_JumpInit
                          %        4

                          AREA ||.ARM.__AT_0x20000004||, DATA, NOINIT, ALIGN=2

                  p_boot_ver
                          %        4

                          AREA ||.bss||, DATA, NOINIT, ALIGN=3

                  led_timer
                          %        24
                  key_timer
                          %        24

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_main_c_main____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 144
|__asm___6_main_c_main____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
