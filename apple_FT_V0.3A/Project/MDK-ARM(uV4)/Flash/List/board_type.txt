; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\flash\obj\board_type.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\board_type.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O0 --diag_suppress=9931,870 -I..\..\User -I..\..\User\bsp_stm32f4xx -I..\..\User\bsp_stm32f4xx\inc -I..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\..\Libraries\CMSIS\Device\ST\STM32F4xx\Include -I..\..\Libraries\CMSIS\Include -I..\..\User\FatFS\src -I..\..\Libraries\STM32_USB_Device_Library\Class\msc\inc -I..\..\Libraries\STM32_USB_Device_Library\Core\inc -I..\..\Libraries\STM32_USB_OTG_Driver\inc -I..\..\User\usbd_mass_storage -I..\..\User\ft_support -I..\..\User\test -I..\..\User\emenu -I..\..\User\chip_ft -I..\..\User\lwrb -I..\..\User\easylogger\inc -I..\..\User\easylogger\plugins\file -I..\..\User\LOG -I..\..\User\MultiButton-1.1.0 -I..\..\User\cm_backtrace -I..\..\User\MultiTimer -I.\RTE\_Flash -IC:\Users\qizha\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\qizha\AppData\Local\Arm\Packs\Keil\STM32F4xx_DFP\2.17.1\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__MICROLIB -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F407xx -D_RTE_ -DUSE_STDPERIPH_DRIVER -DSTM32F40_41xxx -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY --signed_chars --omf_browse=.\flash\obj\board_type.crf ..\..\User\board_type.c]
                          THUMB

                          AREA ||i.PrintfLogo||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  PrintfLogo PROC
;;;112    */
;;;113    void PrintfLogo(void)
000000  b510              PUSH     {r4,lr}
;;;114    {
;;;115    	printf("\n\r");
000002  a011              ADR      r0,|L1.72|
000004  f7fffffe          BL       __2printf
;;;116    	printf("*************************************************************\n\r");
000008  a010              ADR      r0,|L1.76|
00000a  f7fffffe          BL       __2printf
;;;117    	printf("* 项目名称   : %s\r\n", EXAMPLE_NAME);	/* 打印例程名称 */
00000e  a11f              ADR      r1,|L1.140|
000010  a021              ADR      r0,|L1.152|
000012  f7fffffe          BL       __2printf
;;;118    	printf("* 程序版本   : %s\r\n", FW_VER);		/* 打印例程版本 */
000016  a126              ADR      r1,|L1.176|
000018  a026              ADR      r0,|L1.180|
00001a  f7fffffe          BL       __2printf
;;;119    	printf("* 发布日期   : %s\r\n", __DATE__);	    /* 打印例程日期 */
00001e  a12b              ADR      r1,|L1.204|
000020  a02d              ADR      r0,|L1.216|
000022  f7fffffe          BL       __2printf
;;;120    
;;;121    	/* 打印ST固件库版本，这3个定义宏在stm32f10x.h文件中 */
;;;122    	printf("* 固件库版本 : V%d.%d.%d (STM32F4xx_StdPeriph_Driver)\r\n", __STM32F4XX_STDPERIPH_VERSION_MAIN,
000026  2300              MOVS     r3,#0
000028  2208              MOVS     r2,#8
00002a  2101              MOVS     r1,#1
00002c  a030              ADR      r0,|L1.240|
00002e  f7fffffe          BL       __2printf
;;;123    			__STM32F4XX_STDPERIPH_VERSION_SUB1,__STM32F4XX_STDPERIPH_VERSION_SUB2);
;;;124    	printf("* \n\r");	/* 打印一行空格 */
000032  a03f              ADR      r0,|L1.304|
000034  f7fffffe          BL       __2printf
;;;125    	printf("* Copyright www.spacetouch.co 普林芯驰\r\n");
000038  a03f              ADR      r0,|L1.312|
00003a  f7fffffe          BL       __2printf
;;;126    	printf("*************************************************************\n\r");
00003e  a003              ADR      r0,|L1.76|
000040  f7fffffe          BL       __2printf
;;;127    }
000044  bd10              POP      {r4,pc}
                          ENDP

000046  0000              DCW      0x0000
                  |L1.72|
000048  0a0d00            DCB      "\n\r",0
00004b  00                DCB      0
                  |L1.76|
00004c  2a2a2a2a          DCB      "*******************************************************"
000050  2a2a2a2a
000054  2a2a2a2a
000058  2a2a2a2a
00005c  2a2a2a2a
000060  2a2a2a2a
000064  2a2a2a2a
000068  2a2a2a2a
00006c  2a2a2a2a
000070  2a2a2a2a
000074  2a2a2a2a
000078  2a2a2a2a
00007c  2a2a2a2a
000080  2a2a2a  
000083  2a2a2a2a          DCB      "******\n\r",0
000087  2a2a0a0d
00008b  00      
                  |L1.140|
00008c  46345f46          DCB      "F4_FT_apple",0
000090  545f6170
000094  706c6500
                  |L1.152|
000098  2a20e9a1          DCB      "* ",233,161,185,231,155,174,229,144,141,231,167,176,"  "
00009c  b9e79bae
0000a0  e5908de7
0000a4  a7b02020
0000a8  203a2025          DCB      " : %s\r\n",0
0000ac  730d0a00
                  |L1.176|
0000b0  312e3000          DCB      "1.0",0
                  |L1.180|
0000b4  2a20e7a8          DCB      "* ",231,168,139,229,186,143,231,137,136,230,156,172,"  "
0000b8  8be5ba8f
0000bc  e78988e6
0000c0  9cac2020
0000c4  203a2025          DCB      " : %s\r\n",0
0000c8  730d0a00
                  |L1.204|
0000cc  46656220          DCB      "Feb  2 2024",0
0000d0  20322032
0000d4  30323400
                  |L1.216|
0000d8  2a20e58f          DCB      "* ",229,143,145,229,184,131,230,151,165,230,156,159,"  "
0000dc  91e5b883
0000e0  e697a5e6
0000e4  9c9f2020
0000e8  203a2025          DCB      " : %s\r\n",0
0000ec  730d0a00
                  |L1.240|
0000f0  2a20e59b          DCB      "* ",229,155,186,228,187,182,229,186,147,231,137,136,230
0000f4  bae4bbb6
0000f8  e5ba93e7
0000fc  8988e6  
0000ff  9cac203a          DCB      156,172," : V%d.%d.%d (STM32F4xx_StdPeriph_Driver)\r\n",0
000103  20562564
000107  2e25642e
00010b  25642028
00010f  53544d33
000113  32463478
000117  785f5374
00011b  64506572
00011f  6970685f
000123  44726976
000127  6572290d
00012b  0a00    
00012d  00                DCB      0
00012e  00                DCB      0
00012f  00                DCB      0
                  |L1.304|
000130  2a200a0d          DCB      "* \n\r",0
000134  00      
000135  00                DCB      0
000136  00                DCB      0
000137  00                DCB      0
                  |L1.312|
000138  2a20436f          DCB      "* Copyright www.spacetouch.co ",230,153,174,230,158,151
00013c  70797269
000140  67687420
000144  7777772e
000148  73706163
00014c  65746f75
000150  63682e63
000154  6f20e699
000158  aee69e97
00015c  e88aafe9          DCB      232,138,175,233,169,176,"\r\n",0
000160  a9b00d0a
000164  00      
000165  00                DCB      0
000166  00                DCB      0
000167  00                DCB      0

                          AREA ||i.board_self_test||, CODE, READONLY, ALIGN=2

                  board_self_test PROC
;;;62     
;;;63     int32_t board_self_test(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;64     {
;;;65         display_fill(0, 0, BSP_LCD_WIDTH, BSP_LCD_HEIGHT, BLACK);
000002  2000              MOVS     r0,#0
000004  f44f73a0          MOV      r3,#0x140
000008  22f0              MOVS     r2,#0xf0
00000a  4601              MOV      r1,r0
00000c  9000              STR      r0,[sp,#0]
00000e  f7fffffe          BL       display_fill
;;;66         //display_show_string(FW_INFO, WHITE,   BLACK);
;;;67         bsp_DelayMS(100);
000012  2064              MOVS     r0,#0x64
000014  f7fffffe          BL       bsp_DelayMS
;;;68         if (ee_CheckOk() == 0)
000018  f7fffffe          BL       ee_CheckOk
00001c  b918              CBNZ     r0,|L2.38|
;;;69     	{
;;;70     		/* 没有检测到EEPROM */
;;;71             display_show_log(DISP_SHOW_NG,"fail:eeprom check\r\n");
00001e  a116              ADR      r1,|L2.120|
000020  2001              MOVS     r0,#1
000022  f7fffffe          BL       display_show_log
                  |L2.38|
;;;72     	}
;;;73         uint32_t vrefint_sum=0;
000026  2500              MOVS     r5,#0
;;;74         uint32_t vbus_sum   =0;
000028  2600              MOVS     r6,#0
;;;75         for(uint32_t i=0; i<128; i++)
00002a  2000              MOVS     r0,#0
00002c  e006              B        |L2.60|
                  |L2.46|
;;;76         {
;;;77             vrefint_sum += g_adc_value[ADC_RANK_STM32_VREFINT];
00002e  4917              LDR      r1,|L2.140|
000030  8949              LDRH     r1,[r1,#0xa]  ; g_adc_value
000032  440d              ADD      r5,r5,r1
;;;78             vbus_sum    += g_adc_value[ADC_RANK_VBUS];
000034  4915              LDR      r1,|L2.140|
000036  89c9              LDRH     r1,[r1,#0xe]  ; g_adc_value
000038  440e              ADD      r6,r6,r1
00003a  1c40              ADDS     r0,r0,#1              ;75
                  |L2.60|
00003c  2880              CMP      r0,#0x80              ;75
00003e  d3f6              BCC      |L2.46|
;;;79         }
;;;80     //    uint32_t vbus    = (vbus_sum/128)*5*3300/2/4095;
;;;81         uint32_t vrefint = (vrefint_sum/128)*3300/4095;
000040  09e8              LSRS     r0,r5,#7
000042  f64041e4          MOV      r1,#0xce4
000046  4348              MULS     r0,r1,r0
000048  f64071ff          MOV      r1,#0xfff
00004c  fbb0f4f1          UDIV     r4,r0,r1
;;;82         //display_show_log(DISP_SHOW_LOG,"board:V%d",g_eBoardType);
;;;83     //    if((vbus > VBUS_HI) || (vbus < VBUS_LO))
;;;84     //    {
;;;85     //        display_show_log(DISP_SHOW_NG,"fail: VBUS = %d mv\r\n",vbus);
;;;86     //        return -1;
;;;87     //    }
;;;88     //    else
;;;89     //    {
;;;90     //        display_show_log(DISP_SHOW_LOG,"VBUS     = %d mv\r",vbus);
;;;91     //    }
;;;92         if((vrefint > VREFINT_HI) || (vrefint < VREFINT_LO))
000050  f5b46f9b          CMP      r4,#0x4d8
000054  d803              BHI      |L2.94|
000056  f240409c          MOV      r0,#0x49c
00005a  4284              CMP      r4,r0
00005c  d209              BCS      |L2.114|
                  |L2.94|
;;;93         {
;;;94             display_show_log(DISP_SHOW_NG,"board:V%d   fail: VREFINT = %dmv\r\n",g_eBoardType,vrefint);
00005e  4623              MOV      r3,r4
000060  480b              LDR      r0,|L2.144|
000062  7802              LDRB     r2,[r0,#0]  ; g_eBoardType
000064  a10b              ADR      r1,|L2.148|
000066  2001              MOVS     r0,#1
000068  f7fffffe          BL       display_show_log
;;;95             return -1;
00006c  f04f30ff          MOV      r0,#0xffffffff
                  |L2.112|
;;;96         }
;;;97         else
;;;98         {
;;;99             //display_show_log(DISP_SHOW_LOG,"board:V%d   VREFINT = %dmv\r",g_eBoardType,vrefint);
;;;100        }
;;;101     
;;;102        return 0;
;;;103    }
000070  bdf8              POP      {r3-r7,pc}
                  |L2.114|
000072  2000              MOVS     r0,#0                 ;102
000074  e7fc              B        |L2.112|
;;;104    
                          ENDP

000076  0000              DCW      0x0000
                  |L2.120|
000078  6661696c          DCB      "fail:eeprom check\r\n",0
00007c  3a656570
000080  726f6d20
000084  63686563
000088  6b0d0a00
                  |L2.140|
                          DCD      g_adc_value
                  |L2.144|
                          DCD      g_eBoardType
                  |L2.148|
000094  626f6172          DCB      "board:V%d   fail: VREFINT = %dmv\r\n",0
000098  643a5625
00009c  64202020
0000a0  6661696c
0000a4  3a205652
0000a8  4546494e
0000ac  54203d20
0000b0  25646d76
0000b4  0d0a00  
0000b7  00                DCB      0

                          AREA ||i.board_type_init||, CODE, READONLY, ALIGN=2

                  board_type_init PROC
;;;17     
;;;18     void board_type_init(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;19     {
;;;20         GPIO_InitTypeDef GPIO_InitStructure;
;;;21         RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOD, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;22         
;;;23         GPIO_InitStructure.GPIO_Mode    = GPIO_Mode_IN;		    /* 设为输出口 */
00000a  2000              MOVS     r0,#0
00000c  f88d0004          STRB     r0,[sp,#4]
;;;24     	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;		/* 设为推挽模式 */
000010  f88d0006          STRB     r0,[sp,#6]
;;;25     	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_DOWN;	    /* 上下拉电阻不使能 */
000014  2002              MOVS     r0,#2
000016  f88d0007          STRB     r0,[sp,#7]
;;;26     	GPIO_InitStructure.GPIO_Speed   = GPIO_Speed_100MHz;	/* IO口最大速度 */
00001a  2003              MOVS     r0,#3
00001c  f88d0005          STRB     r0,[sp,#5]
;;;27         
;;;28         GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
000020  f44f6080          MOV      r0,#0x400
000024  9000              STR      r0,[sp,#0]
;;;29     	GPIO_Init(GPIOD, &GPIO_InitStructure);
000026  4669              MOV      r1,sp
000028  481c              LDR      r0,|L3.156|
00002a  f7fffffe          BL       GPIO_Init
;;;30         
;;;31         for(uint32_t i=0;i<1000;i++)
00002e  2000              MOVS     r0,#0
000030  e001              B        |L3.54|
                  |L3.50|
;;;32         {
;;;33             __nop();
000032  bf00              NOP      
000034  1c40              ADDS     r0,r0,#1              ;31
                  |L3.54|
000036  f5b07f7a          CMP      r0,#0x3e8             ;31
00003a  d3fa              BCC      |L3.50|
;;;34         }
;;;35         
;;;36         uint32_t cnt=0;
00003c  2400              MOVS     r4,#0
;;;37         while( GPIO_ReadInputDataBit(GPIOD, GPIO_Pin_10) == Bit_SET)
00003e  e004              B        |L3.74|
                  |L3.64|
;;;38         {
;;;39             cnt++;
000040  1c64              ADDS     r4,r4,#1
;;;40             if(cnt == 1000) 
000042  f5b47f7a          CMP      r4,#0x3e8
000046  d100              BNE      |L3.74|
;;;41             {
;;;42                 break;
000048  e006              B        |L3.88|
                  |L3.74|
00004a  f44f6180          MOV      r1,#0x400             ;37
00004e  4813              LDR      r0,|L3.156|
000050  f7fffffe          BL       GPIO_ReadInputDataBit
000054  2801              CMP      r0,#1                 ;37
000056  d0f3              BEQ      |L3.64|
                  |L3.88|
000058  bf00              NOP      
;;;43             }
;;;44         }
;;;45         
;;;46         if(cnt == 1000)
00005a  f5b47f7a          CMP      r4,#0x3e8
00005e  d10e              BNE      |L3.126|
;;;47         {
;;;48             
;;;49             VBUS_HI     =   5000;
000060  f2413088          MOV      r0,#0x1388
000064  490e              LDR      r1,|L3.160|
000066  6008              STR      r0,[r1,#0]  ; VBUS_HI
;;;50             VBUS_LO     =   4400;
000068  f2411030          MOV      r0,#0x1130
00006c  490d              LDR      r1,|L3.164|
00006e  6008              STR      r0,[r1,#0]  ; VBUS_LO
;;;51             g_eBoardType = board_v21;
000070  2015              MOVS     r0,#0x15
000072  490d              LDR      r1,|L3.168|
000074  7008              STRB     r0,[r1,#0]
;;;52             printf("board_v21\r\n");
000076  a00d              ADR      r0,|L3.172|
000078  f7fffffe          BL       __2printf
00007c  e00d              B        |L3.154|
                  |L3.126|
;;;53         }
;;;54         else
;;;55         {
;;;56             VBUS_HI     =   5300;
00007e  f24140b4          MOV      r0,#0x14b4
000082  4907              LDR      r1,|L3.160|
000084  6008              STR      r0,[r1,#0]  ; VBUS_HI
;;;57             VBUS_LO     =   4700;
000086  f241205c          MOV      r0,#0x125c
00008a  4906              LDR      r1,|L3.164|
00008c  6008              STR      r0,[r1,#0]  ; VBUS_LO
;;;58             g_eBoardType = board_v20;
00008e  2014              MOVS     r0,#0x14
000090  4905              LDR      r1,|L3.168|
000092  7008              STRB     r0,[r1,#0]
;;;59             printf("board_v20\r\n");
000094  a008              ADR      r0,|L3.184|
000096  f7fffffe          BL       __2printf
                  |L3.154|
;;;60         }
;;;61     }
00009a  bd1c              POP      {r2-r4,pc}
;;;62     
                          ENDP

                  |L3.156|
                          DCD      0x40020c00
                  |L3.160|
                          DCD      VBUS_HI
                  |L3.164|
                          DCD      VBUS_LO
                  |L3.168|
                          DCD      g_eBoardType
                  |L3.172|
0000ac  626f6172          DCB      "board_v21\r\n",0
0000b0  645f7632
0000b4  310d0a00
                  |L3.184|
0000b8  626f6172          DCB      "board_v20\r\n",0
0000bc  645f7632
0000c0  300d0a00

                          AREA ||.data||, DATA, ALIGN=2

                  g_eBoardType
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  VBUS_HI
                          DCD      0x00000000
                  VBUS_LO
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\board_type.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_board_type_c_a356dd57____REV16|
#line 129 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___12_board_type_c_a356dd57____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_board_type_c_a356dd57____REVSH|
#line 144
|__asm___12_board_type_c_a356dd57____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
